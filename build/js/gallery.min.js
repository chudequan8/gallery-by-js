
!function(){function s(s){for(var a=document.getElementById("wrap"),t="",e="",i=0;i<s.length;i++){t+='<div class="photo photo-front"><div class="photo-wrap"><div class="side side-front"><p class="image"><img src="build/img/'+s[i].img+'" alt="'+s[i].title+'"></p><p class="caption"><span>'+s[i].title+'</span></p></div><div class="side side-back"><p class="desc"><span>'+s[i].desc+"</span></p></div></div></div>",e+='<li class="dot"></li>'}e='<div class="nav"><ul>'+e+"</ul></div>",a.innerHTML=t+e}var a=new XMLHttpRequest;a.open("GET","build/data/data.json"),a.send(),a.onreadystatechange=function(){if(4===a.readyState)if(200===a.status){var t=JSON.parse(a.responseText);s(t)}else alert("发生错误"+a.status)}}();
function Gallery(){this.wrap=document.getElementById("wrap"),this.photoList=document.getElementsByClassName("photo"),this.dotList=document.getElementsByClassName("dot"),this.sortWay="annular",this.init=function(){var t=this;t.wrap.style.display="block";var e=t.photoList,a=random([0,e.length]),n=t.dotList;e[a];t.sort(a);for(var o=0;o<e.length;o++)e[o].onclick=function(e){return function(){var a=this,o=a.className,r=n[e];o.indexOf("photo-center")!=-1?o.indexOf("photo-front")!=-1?(a.className=o.replace(/photo-front/,"photo-back"),r.className+=" back"):o.indexOf("photo-back")!=-1?(a.className=o.replace(/photo-back/,"photo-front"),r.className=r.className.replace(/\s*back\s*/,"")):alert("请为photo添加正面或反面的样式"):t.sort(e)}}(o),n[o].onclick=function(a){return function(){var n=this,o=e[a],r=e[a].className;r.indexOf("photo-center")!=-1?r.indexOf("photo-front")!=-1?(o.className=r.replace(/photo-front/,"photo-back"),n.className+=" back"):r.indexOf("photo-back")!=-1?(o.className=r.replace(/photo-back/,"photo-front"),n.className=n.className.replace(/\s*back\s*/,"")):alert("请为photo添加正面或反面的样式"):t.sort(a)}}(o);var r=null;window.onresize=function(){null==r&&(r=setTimeout(function(){windowWidth=document.body.clientWidth,windowHeight=document.body.clientHeight,t.sort(random([0,e.length])),r=null}.bind(t),2e3))}.bind(t),document.addEventListener("touchmove",function(t){t.cancelable&&(t.defaultPrevented||t.preventDefault())},!1)}}function randomSort(t,e,a,n,o,r){for(var s=0,l=t.length;s<l;s++)t[s].style.transform="rotate("+random([-150,150])+"deg)",t[s].style.top=random([-n/2,r-n/2])+"px",t[s].style.left=random([-a/2,o/2-a])+"px",t[s].style.margin=0,e[s].style.transform="rotate("+random([-150,150])+"deg)",e[s].style.top=random([-n/2,r-n/2])+"px",e[s].style.left=random([o/2,o-a/2])+"px",e[s].style.margin=0;l<e.length&&(e[l].style.transform="rotate("+random([-150,150])+"deg)",e[l].style.top=random([-n/2,r-n/2])+"px",e[l].style.left=random([o/2,o-a/2])+"px",e[l].style.margin=0)}function annularSort(t,e,a,n){for(var o=Math.min(a,n)/2,r=0,s=t.length;r<s;r++)t[r].style.transform="rotate("+random([105,270])+"deg) translate("+o+"px)",e[r].style.transform="rotate("+random([-90,75])+"deg) translate("+o+"px)";s<e.length&&(e[s].style.transform="rotate("+random([-90,75])+"deg) translate("+o+"px)")}function random(t){var e=Math.max(t[0],t[1]),a=Math.min(t[0],t[1]),n=e-a;return Math.floor(Math.random()*n+a)}function dotScroll(t){var e,a,n,o,r,s=t,l=s.querySelector("ul");s.ontouchstart=function(t){var n=getStyle(l,"transform");n=n.split(","),e=parseInt(n[4]),a=t.touches[0].clientX,o=new Date-0},s.ontouchmove=function(t){t.preventDefault(),l.style.transition="transform 0s",n=t.touches[0].clientX,l.style.transform="translateX("+(e+n-a)+"px)"},s.ontouchend=function(t){r=new Date-0,null!=n&&(r-o<300&&Math.abs(n-a)<30||(e+=n-a,e<-300?e=-300:e>0&&(e=0),n=null,l.style.transition="transform 0.3s ease-out",l.style.transform="translateX("+-(30*Math.ceil(Math.abs(e/30)))+"px)"))}}function getStyle(t,e){return t.currentStyle?t.currentStyle[e]:getComputedStyle(t,!1)[e]}Gallery.prototype.sort=function(t){var e=this.photoList;if(!((t=parseInt(t)||0)>=0&&t<e.length))throw t=null,"n的范围不对";t=t;for(var a=document.body.clientWidth,n=document.body.clientHeight,o=parseInt(e[0].clientWidth),r=parseInt(e[0].clientHeight),s=e[t],l=[],c=this.dotList,i=0;i<e.length;i++){var m=e[i];m.removeAttribute("style"),m.className=m.className.replace("photo-back","photo-front"),m.className=m.className.replace(/\s*photo-center\s*/,""),l.push(m),c[i].className="dot",c[i].innerHTML=i+1}s.className+=" photo-center",c[t].className+=" current fa fa-undo",c[t].innerHTML="";var h=document.getElementsByClassName("nav")[0],d=h.querySelector("ul");document.body.clientWidth<768&&(h.style.width="150px",h.style.marginLeft="-75px",t<2?d.style.transform="translateX(0)":t>c.length-3?d.style.transform="translateX("+30*-(c.length-5)+"px)":d.style.transform="translateX("+30*-(t-2)+"px)"),c[t].className+=" current fa fa-undo",c[t].innerHTML="",dotScroll(h),l.splice(t,1);var p=l.splice(0,Math.floor(l.length/2)),u=l,f=this.sortWay;"random"===f?randomSort(p,u,o,r,a,n):"annular"===f?annularSort(p,u,a,n):alert("没有这种排序方式，请重新指定")},Gallery.prototype.switch=function(t){for(var e=this.photoList,a=document.body.clientWidth,n=document.body.clientHeight,o=parseInt(e[0].clientWidth),r=parseInt(e[0].clientHeight),s=random([0,e.length]),l=e[s],c=[],i=this.dotList,m=0;m<e.length;m++){var h=e[m];h.removeAttribute("style"),h.className=h.className.replace("photo-back","photo-front"),h.className=h.className.replace(/\s*photo-center\s*/,""),c.push(h),i[m].className="dot",i[m].innerHTML=m+1}l.className+=" photo-center",i[s].className+=" current fa fa-undo",i[s].innerHTML="";var d=document.getElementsByClassName("nav")[0],p=d.querySelector("ul");document.body.clientWidth<768&&(d.style.width="150px",d.style.marginLeft="-75px",s<2?p.style.transform="translateX(0)":s>i.length-3?p.style.transform="translateX("+30*-(i.length-5)+"px)":p.style.transform="translateX("+30*-(s-2)+"px)"),i[s].className+=" current fa fa-undo",i[s].innerHTML="",dotScroll(d),c.splice(s,1);var u,f=c.splice(0,Math.floor(c.length/2)),y=c;u=t?t:this.sortWay?this.sortWay:"random","random"===u?randomSort(f,y,o,r,a,n):"annular"===u?annularSort(f,y,a,n):alert("没有这种排序方式，请重新指定"),this.sortWay=u};
!function t(e,n,r){function o(i,s){if(!n[i]){if(!e[i]){var a="function"==typeof require&&require;if(!s&&a)return a(i,!0);if(l)return l(i,!0);var c=new Error("Cannot find module '"+i+"'");throw c.code="MODULE_NOT_FOUND",c}var u=n[i]={exports:{}};e[i][0].call(u.exports,function(t){var n=e[i][1][t];return o(n?n:t)},u,u.exports,t,e,n,r)}return n[i].exports}for(var l="function"==typeof require&&require,i=0;i<r.length;i++)o(r[i]);return o}({1:[function(t,e,n){"use strict";var r=t("../main");"function"==typeof define&&define.amd?define(r):(window.PerfectScrollbar=r,void 0===window.Ps&&(window.Ps=r))},{"../main":7}],2:[function(t,e,n){"use strict";function r(t,e){var n=t.className.split(" ");n.indexOf(e)<0&&n.push(e),t.className=n.join(" ")}function o(t,e){var n=t.className.split(" "),r=n.indexOf(e);r>=0&&n.splice(r,1),t.className=n.join(" ")}n.add=function(t,e){t.classList?t.classList.add(e):r(t,e)},n.remove=function(t,e){t.classList?t.classList.remove(e):o(t,e)},n.list=function(t){return t.classList?Array.prototype.slice.apply(t.classList):t.className.split(" ")}},{}],3:[function(t,e,n){"use strict";function r(t,e){return window.getComputedStyle(t)[e]}function o(t,e,n){return"number"==typeof n&&(n=n.toString()+"px"),t.style[e]=n,t}function l(t,e){for(var n in e){var r=e[n];"number"==typeof r&&(r=r.toString()+"px"),t.style[n]=r}return t}var i={};i.e=function(t,e){var n=document.createElement(t);return n.className=e,n},i.appendTo=function(t,e){return e.appendChild(t),t},i.css=function(t,e,n){return"object"==typeof e?l(t,e):void 0===n?r(t,e):o(t,e,n)},i.matches=function(t,e){return void 0!==t.matches?t.matches(e):void 0!==t.matchesSelector?t.matchesSelector(e):void 0!==t.webkitMatchesSelector?t.webkitMatchesSelector(e):void 0!==t.mozMatchesSelector?t.mozMatchesSelector(e):void 0!==t.msMatchesSelector?t.msMatchesSelector(e):void 0},i.remove=function(t){void 0!==t.remove?t.remove():t.parentNode&&t.parentNode.removeChild(t)},i.queryChildren=function(t,e){return Array.prototype.filter.call(t.childNodes,function(t){return i.matches(t,e)})},e.exports=i},{}],4:[function(t,e,n){"use strict";var r=function(t){this.element=t,this.events={}};r.prototype.bind=function(t,e){void 0===this.events[t]&&(this.events[t]=[]),this.events[t].push(e),this.element.addEventListener(t,e,!1)},r.prototype.unbind=function(t,e){var n=void 0!==e;this.events[t]=this.events[t].filter(function(r){return!(!n||r===e)||(this.element.removeEventListener(t,r,!1),!1)},this)},r.prototype.unbindAll=function(){for(var t in this.events)this.unbind(t)};var o=function(){this.eventElements=[]};o.prototype.eventElement=function(t){var e=this.eventElements.filter(function(e){return e.element===t})[0];return void 0===e&&(e=new r(t),this.eventElements.push(e)),e},o.prototype.bind=function(t,e,n){this.eventElement(t).bind(e,n)},o.prototype.unbind=function(t,e,n){this.eventElement(t).unbind(e,n)},o.prototype.unbindAll=function(){for(var t=0;t<this.eventElements.length;t++)this.eventElements[t].unbindAll()},o.prototype.once=function(t,e,n){var r=this.eventElement(t),o=function(t){r.unbind(e,o),n(t)};r.bind(e,o)},e.exports=o},{}],5:[function(t,e,n){"use strict";e.exports=function(){function t(){return Math.floor(65536*(1+Math.random())).toString(16).substring(1)}return function(){return t()+t()+"-"+t()+"-"+t()+"-"+t()+"-"+t()+t()+t()}}()},{}],6:[function(t,e,n){"use strict";var r=t("./class"),o=t("./dom"),l=n.toInt=function(t){return parseInt(t,10)||0},i=n.clone=function(t){if(t){if(Array.isArray(t))return t.map(i);if("object"==typeof t){var e={};for(var n in t)e[n]=i(t[n]);return e}return t}return null};n.extend=function(t,e){var n=i(t);for(var r in e)n[r]=i(e[r]);return n},n.isEditable=function(t){return o.matches(t,"input,[contenteditable]")||o.matches(t,"select,[contenteditable]")||o.matches(t,"textarea,[contenteditable]")||o.matches(t,"button,[contenteditable]")},n.removePsClasses=function(t){for(var e=r.list(t),n=0;n<e.length;n++){var o=e[n];0===o.indexOf("ps-")&&r.remove(t,o)}},n.outerWidth=function(t){return l(o.css(t,"width"))+l(o.css(t,"paddingLeft"))+l(o.css(t,"paddingRight"))+l(o.css(t,"borderLeftWidth"))+l(o.css(t,"borderRightWidth"))},n.startScrolling=function(t,e){r.add(t,"ps-in-scrolling"),void 0!==e?r.add(t,"ps-"+e):(r.add(t,"ps-x"),r.add(t,"ps-y"))},n.stopScrolling=function(t,e){r.remove(t,"ps-in-scrolling"),void 0!==e?r.remove(t,"ps-"+e):(r.remove(t,"ps-x"),r.remove(t,"ps-y"))},n.env={isWebKit:"WebkitAppearance"in document.documentElement.style,supportsTouch:"ontouchstart"in window||window.DocumentTouch&&document instanceof window.DocumentTouch,supportsIePointer:null!==window.navigator.msMaxTouchPoints}},{"./class":2,"./dom":3}],7:[function(t,e,n){"use strict";var r=t("./plugin/destroy"),o=t("./plugin/initialize"),l=t("./plugin/update");e.exports={initialize:o,update:l,destroy:r}},{"./plugin/destroy":9,"./plugin/initialize":17,"./plugin/update":21}],8:[function(t,e,n){"use strict";e.exports={handlers:["click-rail","drag-scrollbar","keyboard","wheel","touch"],maxScrollbarLength:null,minScrollbarLength:null,scrollXMarginOffset:0,scrollYMarginOffset:0,suppressScrollX:!1,suppressScrollY:!1,swipePropagation:!0,useBothWheelAxes:!1,wheelPropagation:!1,wheelSpeed:1,theme:"default"}},{}],9:[function(t,e,n){"use strict";var r=t("../lib/helper"),o=t("../lib/dom"),l=t("./instances");e.exports=function(t){var e=l.get(t);e&&(e.event.unbindAll(),o.remove(e.scrollbarX),o.remove(e.scrollbarY),o.remove(e.scrollbarXRail),o.remove(e.scrollbarYRail),r.removePsClasses(t),l.remove(t))}},{"../lib/dom":3,"../lib/helper":6,"./instances":18}],10:[function(t,e,n){"use strict";function r(t,e){function n(t){return t.getBoundingClientRect()}var r=function(t){t.stopPropagation()};e.event.bind(e.scrollbarY,"click",r),e.event.bind(e.scrollbarYRail,"click",function(r){var o=r.pageY-window.pageYOffset-n(e.scrollbarYRail).top,s=o>e.scrollbarYTop?1:-1;i(t,"top",t.scrollTop+s*e.containerHeight),l(t),r.stopPropagation()}),e.event.bind(e.scrollbarX,"click",r),e.event.bind(e.scrollbarXRail,"click",function(r){var o=r.pageX-window.pageXOffset-n(e.scrollbarXRail).left,s=o>e.scrollbarXLeft?1:-1;i(t,"left",t.scrollLeft+s*e.containerWidth),l(t),r.stopPropagation()})}var o=t("../instances"),l=t("../update-geometry"),i=t("../update-scroll");e.exports=function(t){r(t,o.get(t))}},{"../instances":18,"../update-geometry":19,"../update-scroll":20}],11:[function(t,e,n){"use strict";function r(t,e){function n(n){var o=r+n*e.railXRatio,i=Math.max(0,e.scrollbarXRail.getBoundingClientRect().left)+e.railXRatio*(e.railXWidth-e.scrollbarXWidth);e.scrollbarXLeft=o<0?0:o>i?i:o,c(t,"left",l.toInt(e.scrollbarXLeft*(e.contentWidth-e.containerWidth)/(e.containerWidth-e.railXRatio*e.scrollbarXWidth))-e.negativeScrollAdjustment)}var r=null,o=null,s=function(e){n(e.pageX-o),a(t),e.stopPropagation(),e.preventDefault()},u=function(){l.stopScrolling(t,"x"),e.event.unbind(e.ownerDocument,"mousemove",s)};e.event.bind(e.scrollbarX,"mousedown",function(n){o=n.pageX,r=l.toInt(i.css(e.scrollbarX,"left"))*e.railXRatio,l.startScrolling(t,"x"),e.event.bind(e.ownerDocument,"mousemove",s),e.event.once(e.ownerDocument,"mouseup",u),n.stopPropagation(),n.preventDefault()})}function o(t,e){function n(n){var o=r+n*e.railYRatio,i=Math.max(0,e.scrollbarYRail.getBoundingClientRect().top)+e.railYRatio*(e.railYHeight-e.scrollbarYHeight);e.scrollbarYTop=o<0?0:o>i?i:o,c(t,"top",l.toInt(e.scrollbarYTop*(e.contentHeight-e.containerHeight)/(e.containerHeight-e.railYRatio*e.scrollbarYHeight)))}var r=null,o=null,s=function(e){n(e.pageY-o),a(t),e.stopPropagation(),e.preventDefault()},u=function(){l.stopScrolling(t,"y"),e.event.unbind(e.ownerDocument,"mousemove",s)};e.event.bind(e.scrollbarY,"mousedown",function(n){o=n.pageY,r=l.toInt(i.css(e.scrollbarY,"top"))*e.railYRatio,l.startScrolling(t,"y"),e.event.bind(e.ownerDocument,"mousemove",s),e.event.once(e.ownerDocument,"mouseup",u),n.stopPropagation(),n.preventDefault()})}var l=t("../../lib/helper"),i=t("../../lib/dom"),s=t("../instances"),a=t("../update-geometry"),c=t("../update-scroll");e.exports=function(t){var e=s.get(t);r(t,e),o(t,e)}},{"../../lib/dom":3,"../../lib/helper":6,"../instances":18,"../update-geometry":19,"../update-scroll":20}],12:[function(t,e,n){"use strict";function r(t,e){function n(n,r){var o=t.scrollTop;if(0===n){if(!e.scrollbarYActive)return!1;if(0===o&&r>0||o>=e.contentHeight-e.containerHeight&&r<0)return!e.settings.wheelPropagation}var l=t.scrollLeft;if(0===r){if(!e.scrollbarXActive)return!1;if(0===l&&n<0||l>=e.contentWidth-e.containerWidth&&n>0)return!e.settings.wheelPropagation}return!0}var r=!1;e.event.bind(t,"mouseenter",function(){r=!0}),e.event.bind(t,"mouseleave",function(){r=!1});var i=!1;e.event.bind(e.ownerDocument,"keydown",function(c){if(!(c.isDefaultPrevented&&c.isDefaultPrevented()||c.defaultPrevented)){var u=l.matches(e.scrollbarX,":focus")||l.matches(e.scrollbarY,":focus");if(r||u){var d=document.activeElement?document.activeElement:e.ownerDocument.activeElement;if(d){if("IFRAME"===d.tagName)d=d.contentDocument.activeElement;else for(;d.shadowRoot;)d=d.shadowRoot.activeElement;if(o.isEditable(d))return}var p=0,h=0;switch(c.which){case 37:p=c.metaKey?-e.contentWidth:c.altKey?-e.containerWidth:-30;break;case 38:h=c.metaKey?e.contentHeight:c.altKey?e.containerHeight:30;break;case 39:p=c.metaKey?e.contentWidth:c.altKey?e.containerWidth:30;break;case 40:h=c.metaKey?-e.contentHeight:c.altKey?-e.containerHeight:-30;break;case 33:h=90;break;case 32:h=c.shiftKey?90:-90;break;case 34:h=-90;break;case 35:h=c.ctrlKey?-e.contentHeight:-e.containerHeight;break;case 36:h=c.ctrlKey?t.scrollTop:e.containerHeight;break;default:return}a(t,"top",t.scrollTop-h),a(t,"left",t.scrollLeft+p),s(t),i=n(p,h),i&&c.preventDefault()}}})}var o=t("../../lib/helper"),l=t("../../lib/dom"),i=t("../instances"),s=t("../update-geometry"),a=t("../update-scroll");e.exports=function(t){r(t,i.get(t))}},{"../../lib/dom":3,"../../lib/helper":6,"../instances":18,"../update-geometry":19,"../update-scroll":20}],13:[function(t,e,n){"use strict";function r(t,e){function n(n,r){var o=t.scrollTop;if(0===n){if(!e.scrollbarYActive)return!1;if(0===o&&r>0||o>=e.contentHeight-e.containerHeight&&r<0)return!e.settings.wheelPropagation}var l=t.scrollLeft;if(0===r){if(!e.scrollbarXActive)return!1;if(0===l&&n<0||l>=e.contentWidth-e.containerWidth&&n>0)return!e.settings.wheelPropagation}return!0}function r(t){var e=t.deltaX,n=-1*t.deltaY;return void 0!==e&&void 0!==n||(e=-1*t.wheelDeltaX/6,n=t.wheelDeltaY/6),t.deltaMode&&1===t.deltaMode&&(e*=10,n*=10),e!==e&&n!==n&&(e=0,n=t.wheelDelta),t.shiftKey?[-n,-e]:[e,n]}function o(e,n){var r=t.querySelector("textarea:hover, select[multiple]:hover, .ps-child:hover");if(r){if(!window.getComputedStyle(r).overflow.match(/(scroll|auto)/))return!1;var o=r.scrollHeight-r.clientHeight;if(o>0&&!(0===r.scrollTop&&n>0||r.scrollTop===o&&n<0))return!0;var l=r.scrollLeft-r.clientWidth;if(l>0&&!(0===r.scrollLeft&&e<0||r.scrollLeft===l&&e>0))return!0}return!1}function s(s){var c=r(s),u=c[0],d=c[1];o(u,d)||(a=!1,e.settings.useBothWheelAxes?e.scrollbarYActive&&!e.scrollbarXActive?(d?i(t,"top",t.scrollTop-d*e.settings.wheelSpeed):i(t,"top",t.scrollTop+u*e.settings.wheelSpeed),a=!0):e.scrollbarXActive&&!e.scrollbarYActive&&(u?i(t,"left",t.scrollLeft+u*e.settings.wheelSpeed):i(t,"left",t.scrollLeft-d*e.settings.wheelSpeed),a=!0):(i(t,"top",t.scrollTop-d*e.settings.wheelSpeed),i(t,"left",t.scrollLeft+u*e.settings.wheelSpeed)),l(t),(a=a||n(u,d))&&(s.stopPropagation(),s.preventDefault()))}var a=!1;void 0!==window.onwheel?e.event.bind(t,"wheel",s):void 0!==window.onmousewheel&&e.event.bind(t,"mousewheel",s)}var o=t("../instances"),l=t("../update-geometry"),i=t("../update-scroll");e.exports=function(t){r(t,o.get(t))}},{"../instances":18,"../update-geometry":19,"../update-scroll":20}],14:[function(t,e,n){"use strict";function r(t,e){e.event.bind(t,"scroll",function(){l(t)})}var o=t("../instances"),l=t("../update-geometry");e.exports=function(t){r(t,o.get(t))}},{"../instances":18,"../update-geometry":19}],15:[function(t,e,n){"use strict";function r(t,e){function n(){var t=window.getSelection?window.getSelection():document.getSelection?document.getSelection():"";return 0===t.toString().length?null:t.getRangeAt(0).commonAncestorContainer}function r(){c||(c=setInterval(function(){if(!l.get(t))return void clearInterval(c);s(t,"top",t.scrollTop+u.top),s(t,"left",t.scrollLeft+u.left),i(t)},50))}function a(){c&&(clearInterval(c),c=null),o.stopScrolling(t)}var c=null,u={top:0,left:0},d=!1;e.event.bind(e.ownerDocument,"selectionchange",function(){t.contains(n())?d=!0:(d=!1,a())}),e.event.bind(window,"mouseup",function(){d&&(d=!1,a())}),e.event.bind(window,"keyup",function(){d&&(d=!1,a())}),e.event.bind(window,"mousemove",function(e){if(d){var n={x:e.pageX,y:e.pageY},l={left:t.offsetLeft,right:t.offsetLeft+t.offsetWidth,top:t.offsetTop,bottom:t.offsetTop+t.offsetHeight};n.x<l.left+3?(u.left=-5,o.startScrolling(t,"x")):n.x>l.right-3?(u.left=5,o.startScrolling(t,"x")):u.left=0,n.y<l.top+3?(l.top+3-n.y<5?u.top=-5:u.top=-20,o.startScrolling(t,"y")):n.y>l.bottom-3?(n.y-l.bottom+3<5?u.top=5:u.top=20,o.startScrolling(t,"y")):u.top=0,0===u.top&&0===u.left?a():r()}})}var o=t("../../lib/helper"),l=t("../instances"),i=t("../update-geometry"),s=t("../update-scroll");e.exports=function(t){r(t,l.get(t))}},{"../../lib/helper":6,"../instances":18,"../update-geometry":19,"../update-scroll":20}],16:[function(t,e,n){"use strict";function r(t,e,n,r){function o(n,r){var o=t.scrollTop,l=t.scrollLeft,i=Math.abs(n),s=Math.abs(r);if(s>i){if(r<0&&o===e.contentHeight-e.containerHeight||r>0&&0===o)return!e.settings.swipePropagation}else if(i>s&&(n<0&&l===e.contentWidth-e.containerWidth||n>0&&0===l))return!e.settings.swipePropagation;return!0}function a(e,n){s(t,"top",t.scrollTop-n),s(t,"left",t.scrollLeft-e),i(t)}function c(){Y=!0}function u(){Y=!1}function d(t){return t.targetTouches?t.targetTouches[0]:t}function p(t){return!(!t.targetTouches||1!==t.targetTouches.length)||!(!t.pointerType||"mouse"===t.pointerType||t.pointerType===t.MSPOINTER_TYPE_MOUSE)}function h(t){if(p(t)){y=!0;var e=d(t);v.pageX=e.pageX,v.pageY=e.pageY,g=(new Date).getTime(),null!==w&&clearInterval(w),t.stopPropagation()}}function f(t){if(!y&&e.settings.swipePropagation&&h(t),!Y&&y&&p(t)){var n=d(t),r={pageX:n.pageX,pageY:n.pageY},l=r.pageX-v.pageX,i=r.pageY-v.pageY;a(l,i),v=r;var s=(new Date).getTime(),c=s-g;c>0&&(m.x=l/c,m.y=i/c,g=s),o(l,i)&&(t.stopPropagation(),t.preventDefault())}}function b(){!Y&&y&&(y=!1,clearInterval(w),w=setInterval(function(){return l.get(t)&&(m.x||m.y)?Math.abs(m.x)<.01&&Math.abs(m.y)<.01?void clearInterval(w):(a(30*m.x,30*m.y),m.x*=.8,void(m.y*=.8)):void clearInterval(w)},10))}var v={},g=0,m={},w=null,Y=!1,y=!1;n?(e.event.bind(window,"touchstart",c),e.event.bind(window,"touchend",u),e.event.bind(t,"touchstart",h),e.event.bind(t,"touchmove",f),e.event.bind(t,"touchend",b)):r&&(window.PointerEvent?(e.event.bind(window,"pointerdown",c),e.event.bind(window,"pointerup",u),e.event.bind(t,"pointerdown",h),e.event.bind(t,"pointermove",f),e.event.bind(t,"pointerup",b)):window.MSPointerEvent&&(e.event.bind(window,"MSPointerDown",c),e.event.bind(window,"MSPointerUp",u),e.event.bind(t,"MSPointerDown",h),e.event.bind(t,"MSPointerMove",f),e.event.bind(t,"MSPointerUp",b)))}var o=t("../../lib/helper"),l=t("../instances"),i=t("../update-geometry"),s=t("../update-scroll");e.exports=function(t){if(o.env.supportsTouch||o.env.supportsIePointer){r(t,l.get(t),o.env.supportsTouch,o.env.supportsIePointer)}}},{"../../lib/helper":6,"../instances":18,"../update-geometry":19,"../update-scroll":20}],17:[function(t,e,n){"use strict";var r=t("../lib/helper"),o=t("../lib/class"),l=t("./instances"),i=t("./update-geometry"),s={"click-rail":t("./handler/click-rail"),"drag-scrollbar":t("./handler/drag-scrollbar"),keyboard:t("./handler/keyboard"),wheel:t("./handler/mouse-wheel"),touch:t("./handler/touch"),selection:t("./handler/selection")},a=t("./handler/native-scroll");e.exports=function(t,e){e="object"==typeof e?e:{},o.add(t,"ps");var n=l.add(t);n.settings=r.extend(n.settings,e),o.add(t,"ps--theme_"+n.settings.theme),n.settings.handlers.forEach(function(e){s[e](t)}),a(t),i(t)}},{"../lib/class":2,"../lib/helper":6,"./handler/click-rail":10,"./handler/drag-scrollbar":11,"./handler/keyboard":12,"./handler/mouse-wheel":13,"./handler/native-scroll":14,"./handler/selection":15,"./handler/touch":16,"./instances":18,"./update-geometry":19}],18:[function(t,e,n){"use strict";function r(t){function e(){a.add(t,"ps--focus")}function n(){a.remove(t,"ps--focus")}var r=this;r.settings=s.clone(c),r.containerWidth=null,r.containerHeight=null,r.contentWidth=null,r.contentHeight=null,r.isRtl="rtl"===u.css(t,"direction"),r.isNegativeScroll=function(){var e=t.scrollLeft,n=null;return t.scrollLeft=-1,n=t.scrollLeft<0,t.scrollLeft=e,n}(),r.negativeScrollAdjustment=r.isNegativeScroll?t.scrollWidth-t.clientWidth:0,r.event=new d,r.ownerDocument=t.ownerDocument||document,r.scrollbarXRail=u.appendTo(u.e("div","ps__scrollbar-x-rail"),t),r.scrollbarX=u.appendTo(u.e("div","ps__scrollbar-x"),r.scrollbarXRail),r.scrollbarX.setAttribute("tabindex",0),r.event.bind(r.scrollbarX,"focus",e),r.event.bind(r.scrollbarX,"blur",n),r.scrollbarXActive=null,r.scrollbarXWidth=null,r.scrollbarXLeft=null,r.scrollbarXBottom=s.toInt(u.css(r.scrollbarXRail,"bottom")),r.isScrollbarXUsingBottom=r.scrollbarXBottom===r.scrollbarXBottom,r.scrollbarXTop=r.isScrollbarXUsingBottom?null:s.toInt(u.css(r.scrollbarXRail,"top")),r.railBorderXWidth=s.toInt(u.css(r.scrollbarXRail,"borderLeftWidth"))+s.toInt(u.css(r.scrollbarXRail,"borderRightWidth")),u.css(r.scrollbarXRail,"display","block"),r.railXMarginWidth=s.toInt(u.css(r.scrollbarXRail,"marginLeft"))+s.toInt(u.css(r.scrollbarXRail,"marginRight")),u.css(r.scrollbarXRail,"display",""),r.railXWidth=null,r.railXRatio=null,r.scrollbarYRail=u.appendTo(u.e("div","ps__scrollbar-y-rail"),t),r.scrollbarY=u.appendTo(u.e("div","ps__scrollbar-y"),r.scrollbarYRail),r.scrollbarY.setAttribute("tabindex",0),r.event.bind(r.scrollbarY,"focus",e),r.event.bind(r.scrollbarY,"blur",n),r.scrollbarYActive=null,r.scrollbarYHeight=null,r.scrollbarYTop=null,r.scrollbarYRight=s.toInt(u.css(r.scrollbarYRail,"right")),r.isScrollbarYUsingRight=r.scrollbarYRight===r.scrollbarYRight,r.scrollbarYLeft=r.isScrollbarYUsingRight?null:s.toInt(u.css(r.scrollbarYRail,"left")),r.scrollbarYOuterWidth=r.isRtl?s.outerWidth(r.scrollbarY):null,r.railBorderYWidth=s.toInt(u.css(r.scrollbarYRail,"borderTopWidth"))+s.toInt(u.css(r.scrollbarYRail,"borderBottomWidth")),u.css(r.scrollbarYRail,"display","block"),r.railYMarginHeight=s.toInt(u.css(r.scrollbarYRail,"marginTop"))+s.toInt(u.css(r.scrollbarYRail,"marginBottom")),u.css(r.scrollbarYRail,"display",""),r.railYHeight=null,r.railYRatio=null}function o(t){return t.getAttribute("data-ps-id")}function l(t,e){t.setAttribute("data-ps-id",e)}function i(t){t.removeAttribute("data-ps-id")}var s=t("../lib/helper"),a=t("../lib/class"),c=t("./default-setting"),u=t("../lib/dom"),d=t("../lib/event-manager"),p=t("../lib/guid"),h={};n.add=function(t){var e=p();return l(t,e),h[e]=new r(t),h[e]},n.remove=function(t){delete h[o(t)],i(t)},n.get=function(t){return h[o(t)]}},{"../lib/class":2,"../lib/dom":3,"../lib/event-manager":4,"../lib/guid":5,"../lib/helper":6,"./default-setting":8}],19:[function(t,e,n){"use strict";function r(t,e){return t.settings.minScrollbarLength&&(e=Math.max(e,t.settings.minScrollbarLength)),t.settings.maxScrollbarLength&&(e=Math.min(e,t.settings.maxScrollbarLength)),e}function o(t,e){var n={width:e.railXWidth};e.isRtl?n.left=e.negativeScrollAdjustment+t.scrollLeft+e.containerWidth-e.contentWidth:n.left=t.scrollLeft,e.isScrollbarXUsingBottom?n.bottom=e.scrollbarXBottom-t.scrollTop:n.top=e.scrollbarXTop+t.scrollTop,s.css(e.scrollbarXRail,n);var r={top:t.scrollTop,height:e.railYHeight};e.isScrollbarYUsingRight?e.isRtl?r.right=e.contentWidth-(e.negativeScrollAdjustment+t.scrollLeft)-e.scrollbarYRight-e.scrollbarYOuterWidth:r.right=e.scrollbarYRight-t.scrollLeft:e.isRtl?r.left=e.negativeScrollAdjustment+t.scrollLeft+2*e.containerWidth-e.contentWidth-e.scrollbarYLeft-e.scrollbarYOuterWidth:r.left=e.scrollbarYLeft+t.scrollLeft,s.css(e.scrollbarYRail,r),s.css(e.scrollbarX,{left:e.scrollbarXLeft,width:e.scrollbarXWidth-e.railBorderXWidth}),s.css(e.scrollbarY,{top:e.scrollbarYTop,height:e.scrollbarYHeight-e.railBorderYWidth})}var l=t("../lib/helper"),i=t("../lib/class"),s=t("../lib/dom"),a=t("./instances"),c=t("./update-scroll");e.exports=function(t){var e=a.get(t);e.containerWidth=t.clientWidth,e.containerHeight=t.clientHeight,e.contentWidth=t.scrollWidth,e.contentHeight=t.scrollHeight;var n;t.contains(e.scrollbarXRail)||(n=s.queryChildren(t,".ps__scrollbar-x-rail"),n.length>0&&n.forEach(function(t){s.remove(t)}),s.appendTo(e.scrollbarXRail,t)),t.contains(e.scrollbarYRail)||(n=s.queryChildren(t,".ps__scrollbar-y-rail"),n.length>0&&n.forEach(function(t){s.remove(t)}),s.appendTo(e.scrollbarYRail,t)),!e.settings.suppressScrollX&&e.containerWidth+e.settings.scrollXMarginOffset<e.contentWidth?(e.scrollbarXActive=!0,e.railXWidth=e.containerWidth-e.railXMarginWidth,e.railXRatio=e.containerWidth/e.railXWidth,e.scrollbarXWidth=r(e,l.toInt(e.railXWidth*e.containerWidth/e.contentWidth)),e.scrollbarXLeft=l.toInt((e.negativeScrollAdjustment+t.scrollLeft)*(e.railXWidth-e.scrollbarXWidth)/(e.contentWidth-e.containerWidth))):e.scrollbarXActive=!1,!e.settings.suppressScrollY&&e.containerHeight+e.settings.scrollYMarginOffset<e.contentHeight?(e.scrollbarYActive=!0,e.railYHeight=e.containerHeight-e.railYMarginHeight,e.railYRatio=e.containerHeight/e.railYHeight,e.scrollbarYHeight=r(e,l.toInt(e.railYHeight*e.containerHeight/e.contentHeight)),e.scrollbarYTop=l.toInt(t.scrollTop*(e.railYHeight-e.scrollbarYHeight)/(e.contentHeight-e.containerHeight))):e.scrollbarYActive=!1,e.scrollbarXLeft>=e.railXWidth-e.scrollbarXWidth&&(e.scrollbarXLeft=e.railXWidth-e.scrollbarXWidth),e.scrollbarYTop>=e.railYHeight-e.scrollbarYHeight&&(e.scrollbarYTop=e.railYHeight-e.scrollbarYHeight),o(t,e),e.scrollbarXActive?i.add(t,"ps--active-x"):(i.remove(t,"ps--active-x"),e.scrollbarXWidth=0,e.scrollbarXLeft=0,c(t,"left",0)),e.scrollbarYActive?i.add(t,"ps--active-y"):(i.remove(t,"ps--active-y"),e.scrollbarYHeight=0,e.scrollbarYTop=0,c(t,"top",0))}},{"../lib/class":2,"../lib/dom":3,"../lib/helper":6,"./instances":18,"./update-scroll":20}],20:[function(t,e,n){"use strict";var r,o,l=t("./instances"),i=function(t){var e=document.createEvent("Event");return e.initEvent(t,!0,!0),e};e.exports=function(t,e,n){if(void 0===t)throw"You must provide an element to the update-scroll function";if(void 0===e)throw"You must provide an axis to the update-scroll function";if(void 0===n)throw"You must provide a value to the update-scroll function";"top"===e&&n<=0&&(t.scrollTop=n=0,t.dispatchEvent(i("ps-y-reach-start"))),"left"===e&&n<=0&&(t.scrollLeft=n=0,t.dispatchEvent(i("ps-x-reach-start")));var s=l.get(t);"top"===e&&n>=s.contentHeight-s.containerHeight&&(n=s.contentHeight-s.containerHeight,n-t.scrollTop<=1?n=t.scrollTop:t.scrollTop=n,t.dispatchEvent(i("ps-y-reach-end"))),"left"===e&&n>=s.contentWidth-s.containerWidth&&(n=s.contentWidth-s.containerWidth,n-t.scrollLeft<=1?n=t.scrollLeft:t.scrollLeft=n,t.dispatchEvent(i("ps-x-reach-end"))),r||(r=t.scrollTop),o||(o=t.scrollLeft),"top"===e&&n<r&&t.dispatchEvent(i("ps-scroll-up")),"top"===e&&n>r&&t.dispatchEvent(i("ps-scroll-down")),"left"===e&&n<o&&t.dispatchEvent(i("ps-scroll-left")),"left"===e&&n>o&&t.dispatchEvent(i("ps-scroll-right")),"top"===e&&(t.scrollTop=r=n,t.dispatchEvent(i("ps-scroll-y"))),"left"===e&&(t.scrollLeft=o=n,t.dispatchEvent(i("ps-scroll-x")))}},{"./instances":18}],21:[function(t,e,n){"use strict";var r=t("../lib/helper"),o=t("../lib/dom"),l=t("./instances"),i=t("./update-geometry"),s=t("./update-scroll");e.exports=function(t){var e=l.get(t);e&&(e.negativeScrollAdjustment=e.isNegativeScroll?t.scrollWidth-t.clientWidth:0,o.css(e.scrollbarXRail,"display","block"),o.css(e.scrollbarYRail,"display","block"),e.railXMarginWidth=r.toInt(o.css(e.scrollbarXRail,"marginLeft"))+r.toInt(o.css(e.scrollbarXRail,"marginRight")),e.railYMarginHeight=r.toInt(o.css(e.scrollbarYRail,"marginTop"))+r.toInt(o.css(e.scrollbarYRail,"marginBottom")),o.css(e.scrollbarXRail,"display","none"),o.css(e.scrollbarYRail,"display","none"),i(t),s(t,"top",t.scrollTop),s(t,"left",t.scrollLeft),o.css(e.scrollbarXRail,"display",""),o.css(e.scrollbarYRail,"display",""))}},{"../lib/dom":3,"../lib/helper":6,"./instances":18,"./update-geometry":19,"./update-scroll":20}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkdhbGxlcnkuanMiLCJnZXREYXRhLmpzIiwibWFpbi5qcyIsInBlcmZlY3Qtc2Nyb2xsYmFyLmpzIl0sIm5hbWVzIjpbImFkZFBob3RvIiwiZCIsIl93cmFwIiwiZG9jdW1lbnQiLCJnZXRFbGVtZW50QnlJZCIsInBob3RvTGlzdCIsIm5hdiIsImkiLCJsZW5ndGgiLCJpbWciLCJ0aXRsZSIsImRlc2MiLCJpbm5lckhUTUwiLCJyZXEiLCJYTUxIdHRwUmVxdWVzdCIsIm9wZW4iLCJzZW5kIiwib25yZWFkeXN0YXRlY2hhbmdlIiwicmVhZHlTdGF0ZSIsInN0YXR1cyIsInJlcyIsIkpTT04iLCJwYXJzZSIsInJlc3BvbnNlVGV4dCIsImFsZXJ0IiwiR2FsbGVyeSIsInRoaXMiLCJ3cmFwIiwiZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSIsImRvdExpc3QiLCJzb3J0V2F5IiwiaW5pdCIsIl90aGlzIiwic3R5bGUiLCJkaXNwbGF5IiwiX3Bob3RvTGlzdCIsIm4iLCJyYW5kb20iLCJfZG90Iiwic29ydCIsIm9uY2xpY2siLCJpdGVtIiwiY2xzIiwiY2xhc3NOYW1lIiwiZGVsZSIsImluZGV4T2YiLCJyZXBsYWNlIiwicGVsZSIsInJlc2l6ZVRpbWVyIiwid2luZG93Iiwib25yZXNpemUiLCJzZXRUaW1lb3V0Iiwid2luZG93V2lkdGgiLCJib2R5IiwiY2xpZW50V2lkdGgiLCJ3aW5kb3dIZWlnaHQiLCJjbGllbnRIZWlnaHQiLCJiaW5kIiwiYWRkRXZlbnRMaXN0ZW5lciIsImV2ZW50IiwiY2FuY2VsYWJsZSIsImRlZmF1bHRQcmV2ZW50ZWQiLCJwcmV2ZW50RGVmYXVsdCIsInJhbmRvbVNvcnQiLCJsZWZ0UGhvdG9MaXN0IiwicmlnaHRQaG90b0xpc3QiLCJwaG90b1dpZHRoIiwicGhvdG9IZWlnaHQiLCJrIiwidHJhbnNmb3JtIiwidG9wIiwibGVmdCIsIm1hcmdpbiIsImFubnVsYXJTb3J0IiwicmFkaXVzIiwiTWF0aCIsIm1pbiIsImFyciIsIm1heCIsInJhbmdlIiwiZmxvb3IiLCJkb3RTY3JvbGwiLCJzdGFydFgiLCJlbmRYIiwic3RhcnRUIiwiZW5kVCIsIl9uYXYiLCJ1bCIsInF1ZXJ5U2VsZWN0b3IiLCJvbnRvdWNoc3RhcnQiLCJlIiwiZ2V0U3R5bGUiLCJzcGxpdCIsInBhcnNlSW50IiwidG91Y2hlcyIsImNsaWVudFgiLCJEYXRlIiwib250b3VjaG1vdmUiLCJ0cmFuc2l0aW9uIiwib250b3VjaGVuZCIsImFicyIsImNlaWwiLCJvYmoiLCJhdHRyIiwiY3VycmVudFN0eWxlIiwiZ2V0Q29tcHV0ZWRTdHlsZSIsInByb3RvdHlwZSIsImNlbnRlclBob3RvIiwiX3Bob3RvQXJyYXkiLCJyZW1vdmVBdHRyaWJ1dGUiLCJwdXNoIiwid2lkdGgiLCJtYXJnaW5MZWZ0Iiwic3BsaWNlIiwiX29wdGlvbnMiLCJzd2l0Y2giLCJ3YXkiLCJ0IiwiciIsInMiLCJvIiwidSIsImEiLCJyZXF1aXJlIiwiZiIsIkVycm9yIiwiY29kZSIsImwiLCJleHBvcnRzIiwiY2FsbCIsIjEiLCJtb2R1bGUiLCJwcyIsImRlZmluZSIsImFtZCIsIlBlcmZlY3RTY3JvbGxiYXIiLCJQcyIsIi4uL21haW4iLCIyIiwib2xkQWRkIiwiZWxlbWVudCIsImNsYXNzZXMiLCJqb2luIiwib2xkUmVtb3ZlIiwiaWR4IiwiYWRkIiwiY2xhc3NMaXN0IiwicmVtb3ZlIiwibGlzdCIsIkFycmF5Iiwic2xpY2UiLCJhcHBseSIsIjMiLCJjc3NHZXQiLCJzdHlsZU5hbWUiLCJjc3NTZXQiLCJzdHlsZVZhbHVlIiwidG9TdHJpbmciLCJjc3NNdWx0aVNldCIsImtleSIsInZhbCIsIkRPTSIsInRhZ05hbWUiLCJjcmVhdGVFbGVtZW50IiwiYXBwZW5kVG8iLCJjaGlsZCIsInBhcmVudCIsImFwcGVuZENoaWxkIiwiY3NzIiwic3R5bGVOYW1lT3JPYmplY3QiLCJtYXRjaGVzIiwicXVlcnkiLCJtYXRjaGVzU2VsZWN0b3IiLCJ3ZWJraXRNYXRjaGVzU2VsZWN0b3IiLCJtb3pNYXRjaGVzU2VsZWN0b3IiLCJtc01hdGNoZXNTZWxlY3RvciIsInBhcmVudE5vZGUiLCJyZW1vdmVDaGlsZCIsInF1ZXJ5Q2hpbGRyZW4iLCJzZWxlY3RvciIsImZpbHRlciIsImNoaWxkTm9kZXMiLCI0IiwiRXZlbnRFbGVtZW50IiwiZXZlbnRzIiwiZXZlbnROYW1lIiwiaGFuZGxlciIsInVuYmluZCIsImlzSGFuZGxlclByb3ZpZGVkIiwiaGRsciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJ1bmJpbmRBbGwiLCJuYW1lIiwiRXZlbnRNYW5hZ2VyIiwiZXZlbnRFbGVtZW50cyIsImV2ZW50RWxlbWVudCIsImVlIiwib25jZSIsIm9uY2VIYW5kbGVyIiwiNSIsInM0Iiwic3Vic3RyaW5nIiwiNiIsImRvbSIsInRvSW50IiwieCIsImNsb25lIiwiaXNBcnJheSIsIm1hcCIsInJlc3VsdCIsImV4dGVuZCIsIm9yaWdpbmFsIiwic291cmNlIiwiaXNFZGl0YWJsZSIsImVsIiwicmVtb3ZlUHNDbGFzc2VzIiwiY2xzTGlzdCIsIm91dGVyV2lkdGgiLCJzdGFydFNjcm9sbGluZyIsImF4aXMiLCJzdG9wU2Nyb2xsaW5nIiwiZW52IiwiaXNXZWJLaXQiLCJkb2N1bWVudEVsZW1lbnQiLCJzdXBwb3J0c1RvdWNoIiwiRG9jdW1lbnRUb3VjaCIsInN1cHBvcnRzSWVQb2ludGVyIiwibmF2aWdhdG9yIiwibXNNYXhUb3VjaFBvaW50cyIsIi4vY2xhc3MiLCIuL2RvbSIsIjciLCJkZXN0cm95IiwiaW5pdGlhbGl6ZSIsInVwZGF0ZSIsIi4vcGx1Z2luL2Rlc3Ryb3kiLCIuL3BsdWdpbi9pbml0aWFsaXplIiwiLi9wbHVnaW4vdXBkYXRlIiwiOCIsImhhbmRsZXJzIiwibWF4U2Nyb2xsYmFyTGVuZ3RoIiwibWluU2Nyb2xsYmFyTGVuZ3RoIiwic2Nyb2xsWE1hcmdpbk9mZnNldCIsInNjcm9sbFlNYXJnaW5PZmZzZXQiLCJzdXBwcmVzc1Njcm9sbFgiLCJzdXBwcmVzc1Njcm9sbFkiLCJzd2lwZVByb3BhZ2F0aW9uIiwidXNlQm90aFdoZWVsQXhlcyIsIndoZWVsUHJvcGFnYXRpb24iLCJ3aGVlbFNwZWVkIiwidGhlbWUiLCI5IiwiXyIsImluc3RhbmNlcyIsImdldCIsInNjcm9sbGJhclgiLCJzY3JvbGxiYXJZIiwic2Nyb2xsYmFyWFJhaWwiLCJzY3JvbGxiYXJZUmFpbCIsIi4uL2xpYi9kb20iLCIuLi9saWIvaGVscGVyIiwiLi9pbnN0YW5jZXMiLCIxMCIsImJpbmRDbGlja1JhaWxIYW5kbGVyIiwicGFnZU9mZnNldCIsImdldEJvdW5kaW5nQ2xpZW50UmVjdCIsInN0b3BQcm9wYWdhdGlvbiIsInBvc2l0aW9uVG9wIiwicGFnZVkiLCJwYWdlWU9mZnNldCIsImRpcmVjdGlvbiIsInNjcm9sbGJhcllUb3AiLCJ1cGRhdGVTY3JvbGwiLCJzY3JvbGxUb3AiLCJjb250YWluZXJIZWlnaHQiLCJ1cGRhdGVHZW9tZXRyeSIsInBvc2l0aW9uTGVmdCIsInBhZ2VYIiwicGFnZVhPZmZzZXQiLCJzY3JvbGxiYXJYTGVmdCIsInNjcm9sbExlZnQiLCJjb250YWluZXJXaWR0aCIsIi4uL2luc3RhbmNlcyIsIi4uL3VwZGF0ZS1nZW9tZXRyeSIsIi4uL3VwZGF0ZS1zY3JvbGwiLCIxMSIsImJpbmRNb3VzZVNjcm9sbFhIYW5kbGVyIiwidXBkYXRlU2Nyb2xsTGVmdCIsImRlbHRhWCIsIm5ld0xlZnQiLCJjdXJyZW50TGVmdCIsInJhaWxYUmF0aW8iLCJtYXhMZWZ0IiwicmFpbFhXaWR0aCIsInNjcm9sbGJhclhXaWR0aCIsImNvbnRlbnRXaWR0aCIsIm5lZ2F0aXZlU2Nyb2xsQWRqdXN0bWVudCIsImN1cnJlbnRQYWdlWCIsIm1vdXNlTW92ZUhhbmRsZXIiLCJtb3VzZVVwSGFuZGxlciIsIm93bmVyRG9jdW1lbnQiLCJiaW5kTW91c2VTY3JvbGxZSGFuZGxlciIsInVwZGF0ZVNjcm9sbFRvcCIsImRlbHRhWSIsIm5ld1RvcCIsImN1cnJlbnRUb3AiLCJyYWlsWVJhdGlvIiwibWF4VG9wIiwicmFpbFlIZWlnaHQiLCJzY3JvbGxiYXJZSGVpZ2h0IiwiY29udGVudEhlaWdodCIsImN1cnJlbnRQYWdlWSIsIi4uLy4uL2xpYi9kb20iLCIuLi8uLi9saWIvaGVscGVyIiwiMTIiLCJiaW5kS2V5Ym9hcmRIYW5kbGVyIiwic2hvdWxkUHJldmVudERlZmF1bHQiLCJzY3JvbGxiYXJZQWN0aXZlIiwic2V0dGluZ3MiLCJzY3JvbGxiYXJYQWN0aXZlIiwiaG92ZXJlZCIsInNob3VsZFByZXZlbnQiLCJpc0RlZmF1bHRQcmV2ZW50ZWQiLCJmb2N1c2VkIiwiYWN0aXZlRWxlbWVudCIsImNvbnRlbnREb2N1bWVudCIsInNoYWRvd1Jvb3QiLCJ3aGljaCIsIm1ldGFLZXkiLCJhbHRLZXkiLCJzaGlmdEtleSIsImN0cmxLZXkiLCIxMyIsImJpbmRNb3VzZVdoZWVsSGFuZGxlciIsImdldERlbHRhRnJvbUV2ZW50Iiwid2hlZWxEZWx0YVgiLCJ3aGVlbERlbHRhWSIsImRlbHRhTW9kZSIsIndoZWVsRGVsdGEiLCJzaG91bGRCZUNvbnN1bWVkQnlDaGlsZCIsIm92ZXJmbG93IiwibWF0Y2giLCJtYXhTY3JvbGxUb3AiLCJzY3JvbGxIZWlnaHQiLCJtYXhTY3JvbGxMZWZ0IiwibW91c2V3aGVlbEhhbmRsZXIiLCJkZWx0YSIsIm9ud2hlZWwiLCJvbm1vdXNld2hlZWwiLCIxNCIsImJpbmROYXRpdmVTY3JvbGxIYW5kbGVyIiwiMTUiLCJiaW5kU2VsZWN0aW9uSGFuZGxlciIsImdldFJhbmdlTm9kZSIsInNlbGVjdGlvbiIsImdldFNlbGVjdGlvbiIsImdldFJhbmdlQXQiLCJjb21tb25BbmNlc3RvckNvbnRhaW5lciIsInNjcm9sbGluZ0xvb3AiLCJzZXRJbnRlcnZhbCIsImNsZWFySW50ZXJ2YWwiLCJzY3JvbGxEaWZmIiwiaXNTZWxlY3RlZCIsImNvbnRhaW5zIiwibW91c2VQb3NpdGlvbiIsInkiLCJjb250YWluZXJHZW9tZXRyeSIsIm9mZnNldExlZnQiLCJyaWdodCIsIm9mZnNldFdpZHRoIiwib2Zmc2V0VG9wIiwiYm90dG9tIiwib2Zmc2V0SGVpZ2h0IiwiMTYiLCJiaW5kVG91Y2hIYW5kbGVyIiwibWFnbml0dWRlWCIsIm1hZ25pdHVkZVkiLCJhcHBseVRvdWNoTW92ZSIsImRpZmZlcmVuY2VYIiwiZGlmZmVyZW5jZVkiLCJnbG9iYWxUb3VjaFN0YXJ0IiwiaW5HbG9iYWxUb3VjaCIsImdsb2JhbFRvdWNoRW5kIiwiZ2V0VG91Y2giLCJ0YXJnZXRUb3VjaGVzIiwic2hvdWxkSGFuZGxlIiwicG9pbnRlclR5cGUiLCJNU1BPSU5URVJfVFlQRV9NT1VTRSIsInRvdWNoU3RhcnQiLCJpbkxvY2FsVG91Y2giLCJ0b3VjaCIsInN0YXJ0T2Zmc2V0Iiwic3RhcnRUaW1lIiwiZ2V0VGltZSIsImVhc2luZ0xvb3AiLCJ0b3VjaE1vdmUiLCJjdXJyZW50T2Zmc2V0IiwiY3VycmVudFRpbWUiLCJ0aW1lR2FwIiwic3BlZWQiLCJ0b3VjaEVuZCIsIlBvaW50ZXJFdmVudCIsIk1TUG9pbnRlckV2ZW50IiwiMTciLCJjbGljay1yYWlsIiwiZHJhZy1zY3JvbGxiYXIiLCJrZXlib2FyZCIsIndoZWVsIiwibmF0aXZlU2Nyb2xsSGFuZGxlciIsInVzZXJTZXR0aW5ncyIsImZvckVhY2giLCJoYW5kbGVyTmFtZSIsIi4uL2xpYi9jbGFzcyIsIi4vaGFuZGxlci9jbGljay1yYWlsIiwiLi9oYW5kbGVyL2RyYWctc2Nyb2xsYmFyIiwiLi9oYW5kbGVyL2tleWJvYXJkIiwiLi9oYW5kbGVyL21vdXNlLXdoZWVsIiwiLi9oYW5kbGVyL25hdGl2ZS1zY3JvbGwiLCIuL2hhbmRsZXIvc2VsZWN0aW9uIiwiLi9oYW5kbGVyL3RvdWNoIiwiLi91cGRhdGUtZ2VvbWV0cnkiLCIxOCIsIkluc3RhbmNlIiwiZm9jdXMiLCJibHVyIiwiZGVmYXVsdFNldHRpbmdzIiwiaXNSdGwiLCJpc05lZ2F0aXZlU2Nyb2xsIiwib3JpZ2luYWxTY3JvbGxMZWZ0Iiwic2Nyb2xsV2lkdGgiLCJzZXRBdHRyaWJ1dGUiLCJzY3JvbGxiYXJYQm90dG9tIiwiaXNTY3JvbGxiYXJYVXNpbmdCb3R0b20iLCJzY3JvbGxiYXJYVG9wIiwicmFpbEJvcmRlclhXaWR0aCIsInJhaWxYTWFyZ2luV2lkdGgiLCJzY3JvbGxiYXJZUmlnaHQiLCJpc1Njcm9sbGJhcllVc2luZ1JpZ2h0Iiwic2Nyb2xsYmFyWUxlZnQiLCJzY3JvbGxiYXJZT3V0ZXJXaWR0aCIsInJhaWxCb3JkZXJZV2lkdGgiLCJyYWlsWU1hcmdpbkhlaWdodCIsImdldElkIiwiZ2V0QXR0cmlidXRlIiwic2V0SWQiLCJpZCIsInJlbW92ZUlkIiwiZ3VpZCIsIm5ld0lkIiwiLi4vbGliL2V2ZW50LW1hbmFnZXIiLCIuLi9saWIvZ3VpZCIsIi4vZGVmYXVsdC1zZXR0aW5nIiwiMTkiLCJnZXRUaHVtYlNpemUiLCJ0aHVtYlNpemUiLCJ1cGRhdGVDc3MiLCJ4UmFpbE9mZnNldCIsInlSYWlsT2Zmc2V0IiwiaGVpZ2h0IiwiZXhpc3RpbmdSYWlscyIsInJhaWwiLCIuL3VwZGF0ZS1zY3JvbGwiLCIyMCIsImxhc3RUb3AiLCJsYXN0TGVmdCIsImNyZWF0ZURPTUV2ZW50IiwiY3JlYXRlRXZlbnQiLCJpbml0RXZlbnQiLCJ2YWx1ZSIsImRpc3BhdGNoRXZlbnQiLCIyMSJdLCJtYXBwaW5ncyI6IkFBQUE7Q0NDQSxXQWtCQyxRQUFTQSxHQUFTQyxHQUtqQixJQUFLLEdBSkRDLEdBQVFDLFNBQVNDLGVBQWUsUUFDbkNDLEVBQVksR0FDWkMsRUFBTSxHQUVFQyxFQUFJLEVBQUdBLEVBQUlOLEVBQUVPLE9BQVFELElBQUssQ0FPbENGLEdBTmEsNEhBQThISixFQUFFTSxHQUFHRSxJQUM3SSxVQUFZUixFQUFFTSxHQUFHRyxNQUNqQixrQ0FBb0NULEVBQUVNLEdBQUdHLE1BQ3pDLHNFQUF3RVQsRUFBRU0sR0FBR0ksS0FDN0UsZ0NBR0hMLEdBRlcsd0JBSVpBLEVBQU0sd0JBQTBCQSxFQUFNLGNBRXRDSixFQUFNVSxVQUFZUCxFQUFZQyxFQWpDL0IsR0FBSU8sR0FBTSxHQUFJQyxlQUNkRCxHQUFJRSxLQUFLLE1BQU8sd0JBQ2hCRixFQUFJRyxPQUNKSCxFQUFJSSxtQkFB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QixVQUFXLElBQ3JDdEQsRUFBSW5DLElBQUlqSyxFQUFFMlAsZUFBZ0IsVUFBVyxRQUdwQ0MsYUFBYSxFQUFFQyxnQkFBZ0IsRUFBRUMsY0FBYyxHQUFHK0osb0JBQW9CLEdBQUd5QyxrQkFBa0IsVUFBVSIsImZpbGUiOiJnYWxsZXJ5Lm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIC8vIOeUu+W7iuW6lOeUqOeahOaehOmAoOWHveaVsFxyXG4vLyB2YXIgR2FsbGVyeSA9IGZ1bmN0aW9uKCl7XHJcbi8vIFx0d2luZG93LkdhbGxlcnkgPSB0aGlzO1xyXG4vLyB9XHJcblxyXG4vLyAvLyAxLue/u+mdouaOp+WItlxyXG4vLyBHYWxsZXJ5LnByb3RvdHlwZS50dXJuID0gZnVuY3Rpb24oKXtcclxuLy8gXHR2YXIgX3RoaXMgPSB0aGlzO1xyXG4vLyBcdHZhciBfd3JhcCA9IF90aGlzLndyYXA7XHJcbi8vIFx0dmFyIF9waG90b0xpc3QgPSBfdGhpcy5waG90b0xpc3Q7XHJcbi8vIFx0dmFyIF9kb3QgPSBfdGhpcy5kb3RMaXN0O1xyXG4vLyBcdGZvciAodmFyIGkgPSAwOyBpIDwgX3Bob3RvTGlzdC5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHJcbi8vIFx0XHRfcGhvdG9MaXN0W2ldLm9uY2xpY2sgPSAoZnVuY3Rpb24oaSl7XHJcbi8vIFx0XHRcdHJldHVybiBmdW5jdGlvbihlKXtcclxuLy8gXHRcdFx0XHR0dXJuQmFjayh0aGlzLCBfZG90W2ldLCBpLCBfdGhpcyk7XHJcbi8vIFx0XHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4vLyBcdFx0XHRcdGUuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbi8vIFx0XHRcdH07XHJcbi8vIFx0XHR9KShpKTtcclxuXHJcbi8vIFx0XHRfZG90W2ldLm9uY2xpY2sgPSAoZnVuY3Rpb24oaSl7XHJcbi8vIFx0XHRcdHJldHVybiBmdW5jdGlvbihlKXtcclxuLy8gXHRcdFx0XHR0dXJuQmFjayhfcGhvdG9MaXN0W2ldLCB0aGlzLCBpLCBfdGhpcyk7XHJcbi8vIFx0XHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4vLyBcdFx0XHRcdGUuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbi8vIFx0XHRcdH07XHJcbi8vIFx0XHR9KShpKTtcclxuLy8gXHR9XHJcbi8vIH1cclxuXHJcbi8vIC8vIDIu5Yid5aeL5YyW77yM5bCG5Zu+54mH5pWw5o2u5ZKM5o6n5Yi25p2h5YaZ5YWl5qih5p2/XHJcbi8vIEdhbGxlcnkucHJvdG90eXBlLmluaXQgPSBmdW5jdGlvbihvcHRpb25zKXtcclxuXHJcbi8vIFx0dGhpcy5vcHRpb25zID0gb3B0aW9ucyA/IG9wdGlvbnMgOiAncmFuZG9tJztcclxuLy8gXHR0aGlzLndyYXAgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcIndyYXBcIik7XHJcblxyXG4vLyBcdC8vIOiOt+WPluWbvueJh+aVsOaNrlxyXG4vLyBcdHZhciByZXEgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcclxuLy8gXHRyZXEub3BlbihcIkdFVFwiLCBcImJ1aWxkL2RhdGEvZGF0YS5qc29uXCIpO1xyXG4vLyBcdHJlcS5zZW5kKCk7XHJcbi8vIFx0cmVxLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uKCl7XHJcbi8vIFx0XHRpZihyZXEucmVhZHlTdGF0ZSA9PT0gNCl7XHJcbi8vIFx0XHRcdGlmKHJlcS5zdGF0dXMgPT09IDIwMCl7XHJcbi8vIFx0XHRcdFx0dmFyIHJlcyA9IEpTT04ucGFyc2UocmVxLnJlc3BvbnNlVGV4dCk7XHJcbi8vIFx0XHRcdFx0YWRkUGhvdG8odGhpcywgcmVzKTtcdC8vIOaKiuiOt+W+l+eahOWbvueJh+S/oeaBr+aUvuWFpeaooeadv+W5tuaJp+ihjOS4gOasoeaOkuW6j1xyXG4vLyBcdFx0XHR9XHJcbi8vIFx0XHRcdGVsc2Uge1xyXG4vLyBcdFx0XHRcdGFsZXJ0KFwi5Y+R55Sf6ZSZ6K+vXCIgKyByZXEuc3RhdHVzKTtcclxuLy8gXHRcdFx0fVxyXG4vLyBcdFx0fVxyXG4vLyBcdH0uYmluZCh0aGlzKTtcclxuXHJcbi8vIFx0Ly8g5b2T5bGP5bmV5aSn5bCP5Y+R55Sf5pS55Y+Y5pe26YeN5paw5a+55Zu+54mH6L+b6KGM5o6S5bqPXHJcbi8vIFx0dmFyIHJlc2l6ZVRpbWVyID0gbnVsbDsgXHJcbi8vIFx0d2luZG93Lm9ucmVzaXplID0gZnVuY3Rpb24oKXtcclxuLy8gXHQgICAgaWYoIHJlc2l6ZVRpbWVyID09IG51bGwpIHtcclxuLy8gXHQgICAgICAgIHJlc2l6ZVRpbWVyID0gc2V0VGltZW91dChmdW5jdGlvbigpe1xyXG4vLyBcdFx0XHRcdHRoaXMuc29ydChyYW5kb20oWzAsIHRoaXMucGhvdG9MaXN0Lmxlbmd0aF0pKTtcclxuLy8gXHRcdFx0ICAgIHJlc2l6ZVRpbWVyID0gbnVsbDtcclxuLy8gXHQgICAgICAgIH0uYmluZCh0aGlzKSwgMjAwMCk7XHJcbi8vIFx0ICAgIH0gXHJcbi8vIFx0fS5iaW5kKHRoaXMpO1xyXG5cclxuLy8gXHRkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCd0b3VjaG1vdmUnLCBmdW5jdGlvbihldmVudCkge1xyXG4vLyBcdCAgICAvLyDliKTmlq3pu5jorqTooYzkuLrmmK/lkKblj6/ku6XooqvnpoHnlKhcclxuLy8gXHQgICAgaWYgKGV2ZW50LmNhbmNlbGFibGUpIHtcclxuLy8gXHQgICAgICAgIC8vIOWIpOaWrem7mOiupOihjOS4uuaYr+WQpuW3sue7j+iiq+emgeeUqFxyXG4vLyBcdCAgICAgICAgaWYgKCFldmVudC5kZWZhdWx0UHJldmVudGVkKSB7XHJcbi8vIFx0ICAgICAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuLy8gXHQgICAgICAgIH1cclxuLy8gXHQgICAgfVxyXG4vLyBcdH0sIGZhbHNlKTtcclxuLy8gfVxyXG5cclxuLy8gLy8gMy7lm77niYfmjpLluo/vvIjkuIDlvKDlsYXkuK3mmL7npLrvvIzlhbbku5bpmo/mnLrmjpLmlL7vvIlcclxuLy8gR2FsbGVyeS5wcm90b3R5cGUuc29ydCA9IGZ1bmN0aW9uKG4pe1xyXG4vLyBcdHRoaXMucGhvdG9MaXN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgncGhvdG8nKTtcclxuLy8gXHR0aGlzLmRvdExpc3QgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdkb3QnKTtcclxuXHJcbi8vIFx0dmFyIF93cmFwID0gdGhpcy53cmFwO1xyXG4vLyBcdHZhciBfcGhvdG9MaXN0ID0gdGhpcy5waG90b0xpc3Q7XHJcbi8vIFx0dmFyIF9kb3QgPSB0aGlzLmRvdExpc3Q7XHJcbi8vIFx0dmFyIGNlbnRlclBob3RvID0gX3Bob3RvTGlzdFtuXTtcclxuLy8gXHR2YXIgX3Bob3RvQXJyYXkgPSBbXTtcclxuLy8gXHR2YXIgX29wdGlvbnMgPSB0aGlzLm9wdGlvbnM7XHJcblxyXG5cclxuLy8gXHR2YXIgX25hdiA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ25hdicpWzBdO1xyXG4vLyBcdHZhciBfdWwgPSBfbmF2LnF1ZXJ5U2VsZWN0b3IoJ3VsJyk7XHJcblxyXG4vLyBcdC8vIOS7juWbvueJh+WIl+ihqOS4reWPluWHuumaj+acuuS4gOW8oOS9nOS4uuS4remXtOeahOWbvueJh1xyXG4vLyBcdGZvciAodmFyIGkgPSAwOyBpIDwgX3Bob3RvTGlzdC5sZW5ndGg7IGkrKykge1xyXG4vLyBcdFx0dmFyIF90aGlzID0gX3Bob3RvTGlzdFtpXTtcclxuXHJcbi8vIFx0XHRfdGhpcy5yZW1vdmVBdHRyaWJ1dGUoXCJzdHlsZVwiKTtcclxuLy8gXHRcdF90aGlzLmNsYXNzTmFtZSA9IF90aGlzLmNsYXNzTmFtZS5yZXBsYWNlKCdwaG90by1iYWNrJywgJ3Bob3RvLWZyb250Jyk7XHJcbi8vIFx0XHRfdGhpcy5jbGFzc05hbWUgPSBfdGhpcy5jbGFzc05hbWUucmVwbGFjZSgvXFxzKnBob3RvLWNlbnRlclxccyovLCAnJyk7XHJcbi8vIFx0XHRfcGhvdG9BcnJheS5wdXNoKF90aGlzKTtcclxuXHJcbi8vIFx0XHRfZG90W2ldLmNsYXNzTmFtZSA9ICdkb3QnO1xyXG4vLyBcdFx0X2RvdFtpXS5pbm5lckhUTUwgPSBpICsgMTtcclxuLy8gXHR9XHJcbi8vIFx0Y2VudGVyUGhvdG8uY2xhc3NOYW1lICs9IFwiIHBob3RvLWNlbnRlclwiO1xyXG4vLyBcdGlmKGRvY3VtZW50LmJvZHkuY2xpZW50V2lkdGggPCA3Njgpe1xyXG4vLyBcdFx0X25hdi5zdHlsZS53aWR0aCA9IDUgKiAzMCArICdweCc7XHJcbi8vIFx0XHRfbmF2LnN0eWxlLm1hcmdpbkxlZnQgPSAtKDUgKiAzMCAvIDIpICsgJ3B4JztcclxuLy8gXHRcdGlmKG4gPCAyKXtcclxuLy8gXHRcdFx0X3VsLnN0eWxlLnRyYW5zZm9ybSA9ICd0cmFuc2xhdGVYKDApJztcclxuLy8gXHRcdH0gZWxzZSBpZihuID4gKF9kb3QubGVuZ3RoIC0gMykpe1xyXG4vLyBcdFx0XHRfdWwuc3R5bGUudHJhbnNmb3JtID0gJ3RyYW5zbGF0ZVgoJyArIC0oX2RvdC5sZW5ndGggLSA1KSozMCArICdweCknO1xyXG4vLyBcdFx0fSBlbHNlIHtcclxuLy8gXHRcdFx0X3VsLnN0eWxlLnRyYW5zZm9ybSA9ICd0cmFuc2xhdGVYKCcgKyAtKG4gLSAyKSozMCArICdweCknO1xyXG4vLyBcdFx0fVxyXG4vLyBcdH1cclxuLy8gXHRfZG90W25dLmNsYXNzTmFtZSArPSAnIGN1cnJlbnQgZmEgZmEtdW5kbyc7XHJcbi8vIFx0X2RvdFtuXS5pbm5lckhUTUwgPSAnJztcclxuLy8gXHRfcGhvdG9BcnJheS5zcGxpY2UobiwgMSk7XHJcblxyXG4vLyBcdC8vIOagueaNruS8oOWFpeeahOWPguaVsOaJp+ihjOebuOW6lOeahOaOkuW6j+WHveaVsFxyXG4vLyBcdGlmKF9vcHRpb25zID09PSAncmFuZG9tJyl7XHJcbi8vIFx0XHRyYW5kb21Tb3J0KF93cmFwLCBfcGhvdG9BcnJheSk7XHJcbi8vIFx0fVxyXG4vLyBcdGVsc2UgaWYoX29wdGlvbnMgPT09ICdhbm51bGFyJyl7XHJcbi8vIFx0XHRhbm51bGFyU29ydChfd3JhcCwgX3Bob3RvQXJyYXkpO1xyXG4vLyBcdH1cclxuLy8gXHRlbHNlIHtcclxuLy8gXHRcdGFsZXJ0KCfmsqHmnInov5nnp43mjpLluo/mlrnlvI/vvIzor7fph43mlrDmjIflrponKTtcclxuLy8gXHR9XHJcblxyXG4vLyBcdC8vIOS4uuWvvOiIquadoea3u+WKoOinpuaRuOS6i+S7tlxyXG4vLyBcdGRvdFNjcm9sbChfbmF2KTtcclxuLy8gfVxyXG5cclxuLy8gLy8g5oqK6I635b6X55qE5Zu+54mH5L+h5oGv5o+S5YWl5qih5p2/5bm25omn6KGM5LiA5qyh5o6S5bqPXHJcbi8vIGZ1bmN0aW9uIGFkZFBob3RvKF90aGlzLCBkKXtcclxuLy8gXHR2YXIgX3dyYXAgPSBfdGhpcy53cmFwLFxyXG4vLyBcdFx0cGhvdG9MaXN0ID0gJycsXHJcbi8vIFx0XHRuYXYgPSAnJztcclxuXHJcbi8vIFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBkLmxlbmd0aDsgaSsrKSB7XHJcbi8vIFx0XHR2YXIgX3Bob3RvID0gJzxkaXYgY2xhc3M9XCJwaG90byBwaG90by1mcm9udFwiIGlkPVwicGhvdG9fJyArIGkgKyBcclxuLy8gXHRcdFx0XHRcdCdcIj48ZGl2IGNsYXNzPVwicGhvdG8td3JhcFwiPjxkaXYgY2xhc3M9XCJzaWRlIHNpZGUtZnJvbnRcIj48cCBjbGFzcz1cImltYWdlXCI+PGltZyBzcmM9XCJidWlsZC9pbWcvJyArIGRbaV0uaW1nICsgXHJcbi8vIFx0XHRcdFx0XHQnXCIgYWx0PVwiJyArIGRbaV0udGl0bGUgKyBcclxuLy8gXHRcdFx0XHRcdCdcIj48L3A+PHAgY2xhc3M9XCJjYXB0aW9uXCI+PHNwYW4+JyArIGRbaV0udGl0bGUgKyBcclxuLy8gXHRcdFx0XHRcdCc8L3NwYW4+PC9wPjwvZGl2PjxkaXYgY2xhc3M9XCJzaWRlIHNpZGUtYmFja1wiPjxwIGNsYXNzPVwiZGVzY1wiPjxzcGFuPicgKyBkW2ldLmRlc2MgKyBcclxuLy8gXHRcdFx0XHRcdCc8L3NwYW4+PC9wPjwvZGl2PjwvZGl2PjwvZGl2Pic7XHJcbi8vIFx0XHR2YXIgX2RvdCA9ICc8bGkgY2xhc3M9XCJkb3RcIiBpZD1cImRvdF8nICsgaSArICdcIj48L2xpPic7XHJcbi8vIFx0XHRwaG90b0xpc3QgKz0gX3Bob3RvO1xyXG4vLyBcdFx0bmF2ICs9IF9kb3Q7XHJcbi8vIFx0fVxyXG4vLyBcdG5hdiA9ICc8ZGl2IGNsYXNzPVwibmF2XCI+PHVsPicgKyBuYXYgKyAnPC91bD48L2Rpdj4nO1xyXG5cclxuLy8gXHRfd3JhcC5pbm5lckhUTUwgPSBwaG90b0xpc3QgKyBuYXY7XHJcbi8vIFx0X3dyYXAuc3R5bGUuZGlzcGxheSA9ICdibG9jayc7XHJcblxyXG4vLyBcdC8vIOWvueWbvueJh+maj+acuui/m+ihjOS4gOasoeaOkuW6j1xyXG4vLyBcdF90aGlzLnNvcnQocmFuZG9tKFswLCBkLmxlbmd0aF0pKTtcclxuLy8gXHQvLyDnu5Hlrprnv7vovazkuovku7ZcclxuLy8gXHRfdGhpcy50dXJuKCk7XHJcbi8vIFx0Ly8g5Li65Zu+54mH6IOM5ZCO55qE5o+P6L+w5L+h5oGv5re75Yqg5rua5Yqo5p2hXHJcbi8vIFx0W10uZm9yRWFjaC5jYWxsKGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJy5kZXNjJyksIGZ1bmN0aW9uIChlbCkge1xyXG4vLyBcdFx0UHMuaW5pdGlhbGl6ZShlbCk7XHJcbi8vIFx0fSk7XHJcbi8vIH1cclxuXHJcbi8vIC8vIOS7jue7meWumueahOiMg+WbtOmaj+acuuWPluS4gOS4quWAvFxyXG4vLyBmdW5jdGlvbiByYW5kb20oYXJyKXtcclxuLy8gXHR2YXIgbWF4ID0gTWF0aC5tYXgoYXJyWzBdLCBhcnJbMV0pO1xyXG4vLyBcdHZhciBtaW4gPSBNYXRoLm1pbihhcnJbMF0sIGFyclsxXSk7XHJcbi8vIFx0dmFyIHJhbmdlID0gbWF4IC0gbWluO1xyXG4vLyBcdHJldHVybiBNYXRoLmZsb29yKE1hdGgucmFuZG9tKCkgKiByYW5nZSArIG1pbik7XHJcbi8vIH1cclxuXHJcbi8vIC8vIOiOt+WPluW9k+WJjeWFg+e0oOWcqOWQjOS4gOe6p+WFg+e0oOS4reeahOe0ouW8lVxyXG4vLyBmdW5jdGlvbiBnZXRJbmRleChhcnIsIGVsZSl7XHJcbi8vIFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBhcnIubGVuZ3RoOyBpKyspIHtcclxuLy8gXHRcdGlmKGFycltpXSA9PT0gZWxlKXtcclxuLy8gXHRcdFx0cmV0dXJuIGk7XHJcbi8vIFx0XHR9XHJcbi8vIFx0fVxyXG4vLyB9XHJcblxyXG4vLyAvLyDnv7vovazlm77niYfku6Xlj4rmjInpkq5cclxuLy8gZnVuY3Rpb24gdHVybkJhY2socGVsZSwgZGVsZSwgaW5kZXgsIF90aGlzKXtcclxuLy8gXHR2YXIgY2xzID0gcGVsZS5jbGFzc05hbWU7XHJcbi8vIFx0aWYoY2xzLmluZGV4T2YoXCJwaG90by1jZW50ZXJcIikgIT0gLTEpe1xyXG4vLyBcdFx0aWYoY2xzLmluZGV4T2YoXCJwaG90by1mcm9udFwiKSAhPSAtMSl7XHJcbi8vIFx0XHRcdHBlbGUuY2xhc3NOYW1lID0gY2xzLnJlcGxhY2UoL3Bob3RvLWZyb250LywgXCJwaG90by1iYWNrXCIpO1xyXG4vLyBcdFx0XHRkZWxlLmNsYXNzTmFtZSArPSAnIGJhY2snO1xyXG4vLyBcdFx0fVxyXG4vLyBcdFx0ZWxzZSBpZihjbHMuaW5kZXhPZihcInBob3RvLWJhY2tcIikgIT0gLTEpIHtcclxuLy8gXHRcdFx0cGVsZS5jbGFzc05hbWUgPSBjbHMucmVwbGFjZSgvcGhvdG8tYmFjay8sIFwicGhvdG8tZnJvbnRcIik7XHJcbi8vIFx0XHRcdGRlbGUuY2xhc3NOYW1lID0gZGVsZS5jbGFzc05hbWUucmVwbGFjZSgvXFxzKmJhY2tcXHMqLywgJycpO1xyXG4vLyBcdFx0fVxyXG4vLyBcdFx0ZWxzZSB7XHJcbi8vIFx0XHRcdGFsZXJ0KFwi6K+35Li6cGhvdG/mt7vliqDmraPpnaLmiJblj43pnaLnmoTmoLflvI9cIik7XHJcbi8vIFx0XHR9XHJcbi8vIFx0fVxyXG4vLyBcdGVsc2Uge1xyXG4vLyBcdFx0X3RoaXMuc29ydChpbmRleCk7XHJcbi8vIFx0fVxyXG4vLyB9XHJcblxyXG4vLyAvLyDpmo/mnLrmjpLluo9cclxuLy8gZnVuY3Rpb24gcmFuZG9tU29ydChfd3JhcCwgX3Bob3RvQXJyYXkpe1xyXG5cclxuLy8gXHQvLyDlt6bkvqflm77niYfljLrln5/lnZDmoIflj5blgLzojIPlm7RcclxuLy8gXHQvLyB4KC1waG90by53aWR0aC8yLCB3cmFwLzIgLSBwaG90by53aWR0aClcclxuLy8gXHQvLyB5KC1waG90by5oZWlnaHQvMiwgd3JhcC5oZWlnaHQgLSBwaG90by5oZWlnaHQvMilcclxuLy8gXHQvLyBcclxuLy8gXHQvLyDlj7Pkvqflm77niYfljLrln5/lnZDmoIflj5blgLzojIPlm7RcclxuLy8gXHQvLyB4KHdyYXAvMiwgd3JhcCAtIHBob3RvLndpZHRoLzIpXHJcbi8vIFx0Ly8geSgtcGhvdG8uaGVpZ2h0LzIsIHdyYXAuaGVpZ2h0IC0gcGhvdG8uaGVpZ2h0LzIpXHJcblxyXG4vLyBcdHZhciBsZWZ0UGhvdG9MaXN0ID0gX3Bob3RvQXJyYXkuc3BsaWNlKDAsIE1hdGguZmxvb3IoX3Bob3RvQXJyYXkubGVuZ3RoLzIpKTtcclxuLy8gXHR2YXIgcmlnaHRQaG90b0xpc3QgPSBfcGhvdG9BcnJheTtcclxuXHJcbi8vIFx0dmFyIHBob3RvV2lkdGggPSBsZWZ0UGhvdG9MaXN0WzBdLmNsaWVudFdpZHRoO1xyXG4vLyBcdHZhciBwaG90b0hlaWdodCA9IGxlZnRQaG90b0xpc3RbMF0uY2xpZW50SGVpZ2h0O1xyXG4vLyBcdHZhciB3cmFwV2lkdGggPSBfd3JhcC5jbGllbnRXaWR0aDtcclxuLy8gXHR2YXIgd3JhcEhlaWdodCA9IF93cmFwLmNsaWVudEhlaWdodDtcclxuXHJcbi8vIFx0Zm9yICh2YXIgaSA9IDAsIGsgPSBsZWZ0UGhvdG9MaXN0Lmxlbmd0aDsgaSA8IGs7IGkrKykge1xyXG4vLyBcdFx0bGVmdFBob3RvTGlzdFtpXS5zdHlsZS50cmFuc2Zvcm0gPSAncm90YXRlKCcgKyByYW5kb20oWy0xNTAsIDE1MF0pICsgJ2RlZyknO1xyXG4vLyBcdFx0bGVmdFBob3RvTGlzdFtpXS5zdHlsZS50b3AgPSByYW5kb20oWy1waG90b0hlaWdodC8yLCB3cmFwSGVpZ2h0IC0gcGhvdG9IZWlnaHQvMl0pICsgJ3B4JztcclxuLy8gXHRcdGxlZnRQaG90b0xpc3RbaV0uc3R5bGUubGVmdCA9IHJhbmRvbShbLXBob3RvV2lkdGgvMiwgd3JhcFdpZHRoLzIgLSBwaG90b1dpZHRoXSkgKyAncHgnO1xyXG4vLyBcdFx0bGVmdFBob3RvTGlzdFtpXS5zdHlsZS5tYXJnaW4gPSAwO1xyXG4vLyBcdH1cclxuLy8gXHRmb3IgKHZhciBpID0gMCwgayA9IHJpZ2h0UGhvdG9MaXN0Lmxlbmd0aDsgaSA8IGs7IGkrKykge1xyXG4vLyBcdFx0cmlnaHRQaG90b0xpc3RbaV0uc3R5bGUudHJhbnNmb3JtID0gJ3JvdGF0ZSgnICsgcmFuZG9tKFstMTUwLCAxNTBdKSArICdkZWcpJztcclxuLy8gXHRcdHJpZ2h0UGhvdG9MaXN0W2ldLnN0eWxlLnRvcCA9IHJhbmRvbShbLXBob3RvSGVpZ2h0LzIsIHdyYXBIZWlnaHQgLSBwaG90b0hlaWdodC8yXSkgKyAncHgnO1xyXG4vLyBcdFx0cmlnaHRQaG90b0xpc3RbaV0uc3R5bGUubGVmdCA9IHJhbmRvbShbd3JhcFdpZHRoLzIsIHdyYXBXaWR0aCAtIHBob3RvV2lkdGgvMl0pICsgJ3B4JztcclxuLy8gXHRcdHJpZ2h0UGhvdG9MaXN0W2ldLnN0eWxlLm1hcmdpbiA9IDA7XHJcbi8vIFx0fVxyXG4vLyB9XHJcblxyXG4vLyAvLyDnjq/lvaLmjpLluo9cclxuLy8gZnVuY3Rpb24gYW5udWxhclNvcnQoX3dyYXAsIF9waG90b0FycmF5KXtcclxuXHJcbi8vIFx0Ly8g5Y2K5b6E77ya5pi+56S65Zmo6ZW/5a696L6D5bCP5YC8XHJcbi8vIFx0Ly8gTWF0aC5taW4od3JhcFdpZHRoLCB3cmFwSGVpZ2h0KVxyXG4vLyBcdC8vIFxyXG4vLyBcdC8vIOW3puWIhuWMuuaXi+i9rOinkuW6plxyXG4vLyBcdC8vIFstOTBkZWcsIDc1ZGVnXVxyXG4vLyBcdC8vIFxyXG4vLyBcdC8vIOWPs+WIhuWMuuaXi+i9rOinkuW6plxyXG4vLyBcdC8vIFsxMDVkZWcsIDI3MGRlZ11cclxuXHJcbi8vIFx0dmFyIGxlZnRQaG90b0xpc3QgPSBfcGhvdG9BcnJheS5zcGxpY2UoMCwgTWF0aC5mbG9vcihfcGhvdG9BcnJheS5sZW5ndGgvMikpO1xyXG4vLyBcdHZhciByaWdodFBob3RvTGlzdCA9IF9waG90b0FycmF5O1xyXG5cclxuLy8gXHR2YXIgd3JhcFdpZHRoID0gX3dyYXAuY2xpZW50V2lkdGg7XHJcbi8vIFx0dmFyIHdyYXBIZWlnaHQgPSBfd3JhcC5jbGllbnRIZWlnaHQ7XHJcbi8vIFx0dmFyIHJhZGl1cyA9IE1hdGgubWluKHdyYXBXaWR0aCwgd3JhcEhlaWdodCkgLyAyO1xyXG5cclxuLy8gXHRmb3IgKHZhciBpID0gMCwgayA9IGxlZnRQaG90b0xpc3QubGVuZ3RoOyBpIDwgazsgaSsrKSB7XHJcbi8vIFx0XHRsZWZ0UGhvdG9MaXN0W2ldLnN0eWxlLnRyYW5zZm9ybSA9ICdyb3RhdGUoJyArIHJhbmRvbShbMTA1LCAyNzBdKSArICdkZWcpIHRyYW5zbGF0ZSgnICsgcmFkaXVzICsgJ3B4KSc7XHJcbi8vIFx0fVxyXG4vLyBcdGZvciAodmFyIGkgPSAwLCBrID0gcmlnaHRQaG90b0xpc3QubGVuZ3RoOyBpIDwgazsgaSsrKSB7XHJcbi8vIFx0XHRyaWdodFBob3RvTGlzdFtpXS5zdHlsZS50cmFuc2Zvcm0gPSAncm90YXRlKCcgKyByYW5kb20oWy05MCwgNzVdKSArICdkZWcpIHRyYW5zbGF0ZSgnICsgcmFkaXVzICsgJ3B4KSc7XHJcbi8vIFx0fVxyXG4vLyB9XHJcblxyXG4vLyAvLyDkuLrlr7zoiKrmnaHmt7vliqDop6bmkbjmu5rliqjkuovku7ZcclxuLy8gZnVuY3Rpb24gZG90U2Nyb2xsKG5hdil7XHJcblxyXG4vLyBcdHZhciBfbmF2ID0gbmF2O1xyXG4vLyBcdHZhciB1bCA9IF9uYXYucXVlcnlTZWxlY3RvcigndWwnKTtcclxuLy8gXHR2YXIgbGVmdCwgc3RhcnRYLCBlbmRYLCBzdGFydFQsIGVuZFQ7XHJcbi8vIFx0X25hdi5vbnRvdWNoc3RhcnQgPSBmdW5jdGlvbihlKXtcclxuLy8gXHRcdHZhciBhcnIgPSBnZXRTdHlsZSh1bCwgJ3RyYW5zZm9ybScpO1xyXG4vLyBcdFx0YXJyID0gYXJyLnNwbGl0KCcsJyk7XHJcbi8vIFx0XHRsZWZ0ID0gcGFyc2VJbnQoYXJyWzRdKTtcclxuLy8gXHRcdC8vIGNvbnNvbGUubG9nKGxlZnQpO1xyXG4vLyBcdFx0c3RhcnRYID0gZS50b3VjaGVzWzBdLmNsaWVudFg7XHJcbi8vIFx0XHRzdGFydFQgPSBuZXcgRGF0ZSgpIC0gMDtcclxuLy8gXHR9XHJcbi8vIFx0X25hdi5vbnRvdWNobW92ZSA9IGZ1bmN0aW9uKGUpe1xyXG4vLyBcdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4vLyBcdFx0dWwuc3R5bGUudHJhbnNpdGlvbiA9ICd0cmFuc2Zvcm0gMHMnO1xyXG5cclxuLy8gXHRcdGVuZFggPSBlLnRvdWNoZXNbMF0uY2xpZW50WDtcclxuLy8gXHRcdHVsLnN0eWxlLnRyYW5zZm9ybSA9ICd0cmFuc2xhdGVYKCcgKyAobGVmdCArIGVuZFggLSBzdGFydFgpICsgJ3B4KSc7XHJcbi8vIFx0fVxyXG4vLyBcdF9uYXYub250b3VjaGVuZCA9IGZ1bmN0aW9uKGUpe1xyXG4vLyBcdFx0ZW5kVCA9IG5ldyBEYXRlKCkgLSAwO1xyXG4vLyBcdFx0Ly8g5rKh5pyJ56e75Yqo77yM55u05o6l6L+U5ZueXHJcbi8vIFx0XHRpZihlbmRYID09IG51bGwpIHJldHVybiA7XHJcbi8vIFx0XHQvLyDnp7vliqjml7bpl7TlsI/kuo4zMDDmr6vnp5LlubbkuJTnp7vliqjot53nprvlsI/kuo4zMFBY77yM55u05o6l6L+U5ZueXHJcbi8vIFx0XHRpZigoZW5kVCAtIHN0YXJ0VCA8IDMwMCkgJiYgKE1hdGguYWJzKGVuZFggLSBzdGFydFgpIDwgMzApKXtcclxuLy8gXHRcdFx0cmV0dXJuIDtcclxuLy8gXHRcdH1cclxuXHJcbi8vIFx0XHRsZWZ0ICs9IGVuZFggLSBzdGFydFg7XHJcbi8vIFx0XHRpZihsZWZ0IDwgLTMwMCl7XHJcbi8vIFx0XHRcdGxlZnQgPSAtMzAwO1xyXG4vLyBcdFx0fSBlbHNlIGlmKGxlZnQgPiAwKXtcclxuLy8gXHRcdFx0bGVmdCA9IDA7XHJcbi8vIFx0XHR9XHJcbi8vIFx0XHRlbmRYID0gbnVsbDtcclxuLy8gXHRcdHVsLnN0eWxlLnRyYW5zaXRpb24gPSAndHJhbnNmb3JtIDAuM3MgZWFzZS1vdXQnO1xyXG4vLyBcdFx0dWwuc3R5bGUudHJhbnNmb3JtID0gJ3RyYW5zbGF0ZVgoJyArIC0oTWF0aC5jZWlsKE1hdGguYWJzKGxlZnQvMzApKSozMCkgKyAncHgpJztcclxuLy8gXHR9XHJcbi8vIH1cclxuXHJcbi8vIC8vIOiOt+WPluWFg+e0oOeahOagt+W8j1xyXG4vLyBmdW5jdGlvbiBnZXRTdHlsZShvYmosIGF0dHIpIHsgXHJcbi8vIFx0aWYob2JqLmN1cnJlbnRTdHlsZSkgXHJcbi8vIFx0eyBcclxuLy8gXHRcdHJldHVybiBvYmouY3VycmVudFN0eWxlW2F0dHJdOyBcclxuLy8gXHR9IFxyXG4vLyBcdFx0ZWxzZSBcclxuLy8gXHR7IFxyXG4vLyBcdFx0cmV0dXJuIGdldENvbXB1dGVkU3R5bGUob2JqLGZhbHNlKVthdHRyXTsgXHJcbi8vIFx0fSBcclxuLy8gfSIsIlxyXG4oZnVuY3Rpb24gZ2V0RGF0YSgpe1xyXG5cdC8vIOiOt+WPluWbvueJh+aVsOaNrlxyXG5cdHZhciByZXEgPSBuZXcgWE1MSHR0cFJlcXVlc3QoKTtcclxuXHRyZXEub3BlbihcIkdFVFwiLCBcImJ1aWxkL2RhdGEvZGF0YS5qc29uXCIpO1xyXG5cdHJlcS5zZW5kKCk7XHJcblx0cmVxLm9ucmVhZHlzdGF0ZWNoYW5nZSA9IGZ1bmN0aW9uKCl7XHJcblx0XHRpZihyZXEucmVhZHlTdGF0ZSA9PT0gNCl7XHJcblx0XHRcdGlmKHJlcS5zdGF0dXMgPT09IDIwMCl7XHJcblx0XHRcdFx0dmFyIHJlcyA9IEpTT04ucGFyc2UocmVxLnJlc3BvbnNlVGV4dCk7XHJcblx0XHRcdFx0YWRkUGhvdG8ocmVzKTtcdC8vIOaKiuiOt+W+l+eahOWbvueJh+S/oeaBr+aUvuWFpeaooeadv+W5tuaJp+ihjOS4gOasoeaOkuW6j1xyXG5cdFx0XHR9XHJcblx0XHRcdGVsc2Uge1xyXG5cdFx0XHRcdGFsZXJ0KFwi5Y+R55Sf6ZSZ6K+vXCIgKyByZXEuc3RhdHVzKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdH07XHJcblxyXG5cdC8vIOaKiuiOt+W+l+eahOWbvueJh+S/oeaBr+aPkuWFpeaooeadv+W5tuaJp+ihjOS4gOasoeaOkuW6j1xyXG5cdGZ1bmN0aW9uIGFkZFBob3RvKGQpe1xyXG5cdFx0dmFyIF93cmFwID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoXCJ3cmFwXCIpLFxyXG5cdFx0XHRwaG90b0xpc3QgPSAnJyxcclxuXHRcdFx0bmF2ID0gJyc7XHJcblxyXG5cdFx0Zm9yICh2YXIgaSA9IDA7IGkgPCBkLmxlbmd0aDsgaSsrKSB7XHJcblx0XHRcdHZhciBfcGhvdG8gPSAnPGRpdiBjbGFzcz1cInBob3RvIHBob3RvLWZyb250XCI+PGRpdiBjbGFzcz1cInBob3RvLXdyYXBcIj48ZGl2IGNsYXNzPVwic2lkZSBzaWRlLWZyb250XCI+PHAgY2xhc3M9XCJpbWFnZVwiPjxpbWcgc3JjPVwiYnVpbGQvaW1nLycgKyBkW2ldLmltZyArIFxyXG5cdFx0XHRcdFx0XHQnXCIgYWx0PVwiJyArIGRbaV0udGl0bGUgKyBcclxuXHRcdFx0XHRcdFx0J1wiPjwvcD48cCBjbGFzcz1cImNhcHRpb25cIj48c3Bhbj4nICsgZFtpXS50aXRsZSArIFxyXG5cdFx0XHRcdFx0XHQnPC9zcGFuPjwvcD48L2Rpdj48ZGl2IGNsYXNzPVwic2lkZSBzaWRlLWJhY2tcIj48cCBjbGFzcz1cImRlc2NcIj48c3Bhbj4nICsgZFtpXS5kZXNjICsgXHJcblx0XHRcdFx0XHRcdCc8L3NwYW4+PC9wPjwvZGl2PjwvZGl2PjwvZGl2Pic7XHJcblx0XHRcdHZhciBfZG90ID0gJzxsaSBjbGFzcz1cImRvdFwiPjwvbGk+JztcclxuXHRcdFx0cGhvdG9MaXN0ICs9IF9waG90bztcclxuXHRcdFx0bmF2ICs9IF9kb3Q7XHJcblx0XHR9XHJcblx0XHRuYXYgPSAnPGRpdiBjbGFzcz1cIm5hdlwiPjx1bD4nICsgbmF2ICsgJzwvdWw+PC9kaXY+JztcclxuXHJcblx0XHRfd3JhcC5pbm5lckhUTUwgPSBwaG90b0xpc3QgKyBuYXY7XHJcblx0fVxyXG59KSgpOyIsImZ1bmN0aW9uIEdhbGxlcnkoKXtcclxuXHR0aGlzLndyYXAgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnd3JhcCcpO1xyXG5cdHRoaXMucGhvdG9MaXN0ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgncGhvdG8nKTtcclxuXHR0aGlzLmRvdExpc3QgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5Q2xhc3NOYW1lKCdkb3QnKTtcclxuXHR0aGlzLnNvcnRXYXkgPSAnYW5udWxhcic7XHJcblx0dGhpcy5pbml0ID0gZnVuY3Rpb24oKXtcclxuXHRcdHZhciBfdGhpcyA9IHRoaXM7XHJcblx0XHRfdGhpcy53cmFwLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG5cdFx0dmFyIF9waG90b0xpc3QgPSBfdGhpcy5waG90b0xpc3Q7XHJcblx0XHR2YXIgbiA9IHJhbmRvbShbMCwgX3Bob3RvTGlzdC5sZW5ndGhdKTtcclxuXHJcblx0XHR2YXIgX2RvdCA9IF90aGlzLmRvdExpc3Q7XHJcblx0XHR2YXIgY2VudGVyUGhvdG8gPSBfcGhvdG9MaXN0W25dO1xyXG5cdFx0dmFyIF9waG90b0FycmF5ID0gW107XHJcblxyXG5cdFx0X3RoaXMuc29ydChuKTtcclxuXHJcblx0XHQvLyDkuLrlm77niYflkozmjInpkq7mt7vliqDngrnlh7vkuovku7blpITnkIbnqIvluo9cclxuXHRcdGZvciAodmFyIGkgPSAwOyBpIDwgX3Bob3RvTGlzdC5sZW5ndGg7IGkrKykge1xyXG5cclxuXHRcdFx0X3Bob3RvTGlzdFtpXS5vbmNsaWNrID0gKGZ1bmN0aW9uKGkpe1xyXG5cdFx0XHRcdHJldHVybiBmdW5jdGlvbigpe1xyXG5cdFx0XHRcdFx0dmFyIGl0ZW0gPSB0aGlzO1xyXG5cdFx0XHRcdFx0dmFyIGNscyA9IGl0ZW0uY2xhc3NOYW1lO1xyXG5cdFx0XHRcdFx0dmFyIGRlbGUgPSBfZG90W2ldO1xyXG5cdFx0XHRcdFx0aWYoY2xzLmluZGV4T2YoXCJwaG90by1jZW50ZXJcIikgIT0gLTEpe1xyXG5cdFx0XHRcdFx0XHRpZihjbHMuaW5kZXhPZihcInBob3RvLWZyb250XCIpICE9IC0xKXtcclxuXHRcdFx0XHRcdFx0XHRpdGVtLmNsYXNzTmFtZSA9IGNscy5yZXBsYWNlKC9waG90by1mcm9udC8sIFwicGhvdG8tYmFja1wiKTtcclxuXHRcdFx0XHRcdFx0XHRkZWxlLmNsYXNzTmFtZSArPSAnIGJhY2snO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdGVsc2UgaWYoY2xzLmluZGV4T2YoXCJwaG90by1iYWNrXCIpICE9IC0xKSB7XHJcblx0XHRcdFx0XHRcdFx0aXRlbS5jbGFzc05hbWUgPSBjbHMucmVwbGFjZSgvcGhvdG8tYmFjay8sIFwicGhvdG8tZnJvbnRcIik7XHJcblx0XHRcdFx0XHRcdFx0ZGVsZS5jbGFzc05hbWUgPSBkZWxlLmNsYXNzTmFtZS5yZXBsYWNlKC9cXHMqYmFja1xccyovLCAnJyk7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdFx0ZWxzZSB7XHJcblx0XHRcdFx0XHRcdFx0YWxlcnQoXCLor7fkuLpwaG90b+a3u+WKoOato+mdouaIluWPjemdoueahOagt+W8j1wiKTtcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0ZWxzZSB7XHJcblx0XHRcdFx0XHRcdF90aGlzLnNvcnQoaSk7XHJcblx0XHRcdFx0XHR9XHJcblx0XHRcdFx0fVxyXG5cdFx0XHR9KShpKTtcclxuXHJcblx0XHRcdF9kb3RbaV0ub25jbGljayA9IChmdW5jdGlvbihpKXtcclxuXHRcdFx0XHRyZXR1cm4gZnVuY3Rpb24oKXtcclxuXHRcdFx0XHRcdHZhciBkZWxlID0gdGhpcztcclxuXHRcdFx0XHRcdHZhciBwZWxlID0gX3Bob3RvTGlzdFtpXTtcclxuXHRcdFx0XHRcdHZhciBjbHMgPSBfcGhvdG9MaXN0W2ldLmNsYXNzTmFtZTtcclxuXHRcdFx0XHRcdGlmKGNscy5pbmRleE9mKFwicGhvdG8tY2VudGVyXCIpICE9IC0xKXtcclxuXHRcdFx0XHRcdFx0aWYoY2xzLmluZGV4T2YoXCJwaG90by1mcm9udFwiKSAhPSAtMSl7XHJcblx0XHRcdFx0XHRcdFx0cGVsZS5jbGFzc05hbWUgPSBjbHMucmVwbGFjZSgvcGhvdG8tZnJvbnQvLCBcInBob3RvLWJhY2tcIik7XHJcblx0XHRcdFx0XHRcdFx0ZGVsZS5jbGFzc05hbWUgKz0gJyBiYWNrJztcclxuXHRcdFx0XHRcdFx0fVxyXG5cdFx0XHRcdFx0XHRlbHNlIGlmKGNscy5pbmRleE9mKFwicGhvdG8tYmFja1wiKSAhPSAtMSkge1xyXG5cdFx0XHRcdFx0XHRcdHBlbGUuY2xhc3NOYW1lID0gY2xzLnJlcGxhY2UoL3Bob3RvLWJhY2svLCBcInBob3RvLWZyb250XCIpO1xyXG5cdFx0XHRcdFx0XHRcdGRlbGUuY2xhc3NOYW1lID0gZGVsZS5jbGFzc05hbWUucmVwbGFjZSgvXFxzKmJhY2tcXHMqLywgJycpO1xyXG5cdFx0XHRcdFx0XHR9XHJcblx0XHRcdFx0XHRcdGVsc2Uge1xyXG5cdFx0XHRcdFx0XHRcdGFsZXJ0KFwi6K+35Li6cGhvdG/mt7vliqDmraPpnaLmiJblj43pnaLnmoTmoLflvI9cIik7XHJcblx0XHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdH1cclxuXHRcdFx0XHRcdGVsc2Uge1xyXG5cdFx0XHRcdFx0XHRfdGhpcy5zb3J0KGkpO1xyXG5cdFx0XHRcdFx0fVxyXG5cdFx0XHRcdH07XHJcblx0XHRcdH0pKGkpO1xyXG5cdFx0fVxyXG5cclxuXHRcdC8vIOW9k+Wxj+W5leWkp+Wwj+WPkeeUn+aUueWPmOaXtumHjeaWsOWvueWbvueJh+i/m+ihjOaOkuW6j1xyXG5cdFx0dmFyIHJlc2l6ZVRpbWVyID0gbnVsbDsgXHJcblx0XHR3aW5kb3cub25yZXNpemUgPSBmdW5jdGlvbigpe1xyXG5cdFx0ICAgIGlmKCByZXNpemVUaW1lciA9PSBudWxsKSB7XHJcblx0XHQgICAgICAgIHJlc2l6ZVRpbWVyID0gc2V0VGltZW91dChmdW5jdGlvbigpe1xyXG5cdFx0ICAgICAgICBcdHdpbmRvd1dpZHRoID0gZG9jdW1lbnQuYm9keS5jbGllbnRXaWR0aDtcclxuXHRcdCAgICAgICAgXHR3aW5kb3dIZWlnaHQgPSBkb2N1bWVudC5ib2R5LmNsaWVudEhlaWdodDtcclxuXHRcdFx0XHRcdF90aGlzLnNvcnQocmFuZG9tKFswLCBfcGhvdG9MaXN0Lmxlbmd0aF0pKTtcclxuXHRcdFx0XHQgICAgcmVzaXplVGltZXIgPSBudWxsO1xyXG5cdFx0ICAgICAgICB9LmJpbmQoX3RoaXMpLCAyMDAwKTtcclxuXHRcdCAgICB9IFxyXG5cdFx0fS5iaW5kKF90aGlzKTtcclxuXHJcblx0XHRkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCd0b3VjaG1vdmUnLCBmdW5jdGlvbihldmVudCkge1xyXG5cdFx0ICAgIC8vIOWIpOaWrem7mOiupOihjOS4uuaYr+WQpuWPr+S7peiiq+emgeeUqFxyXG5cdFx0ICAgIGlmIChldmVudC5jYW5jZWxhYmxlKSB7XHJcblx0XHQgICAgICAgIC8vIOWIpOaWrem7mOiupOihjOS4uuaYr+WQpuW3sue7j+iiq+emgeeUqFxyXG5cdFx0ICAgICAgICBpZiAoIWV2ZW50LmRlZmF1bHRQcmV2ZW50ZWQpIHtcclxuXHRcdCAgICAgICAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XHJcblx0XHQgICAgICAgIH1cclxuXHRcdCAgICB9XHJcblx0XHR9LCBmYWxzZSk7XHJcblx0fVxyXG59XHJcblxyXG4vKiAg5o6S5bqP5Li75Ye95pWwXHJcbiAqXHRvcHRpb25zOiBuXHJcbiAqXHRuOiDpgInmi6nnrKzlh6DlvKDlm77niYfkvZzkuLrkuK3pl7Tlm75cclxuICovXHJcbkdhbGxlcnkucHJvdG90eXBlLnNvcnQgPSBmdW5jdGlvbihuKXtcclxuXHR2YXIgX3Bob3RvTGlzdCA9IHRoaXMucGhvdG9MaXN0O1xyXG5cdG4gPSBwYXJzZUludChuKSB8fCAwO1xyXG5cdGlmKG4+PTAgJiYgbjxfcGhvdG9MaXN0Lmxlbmd0aCl7XHJcblx0XHRuID0gbjtcclxuXHR9XHJcblx0ZWxzZSB7XHJcblx0XHRuID0gbnVsbDtcclxuXHRcdHRocm93ICdu55qE6IyD5Zu05LiN5a+5JztcclxuXHRcdHJldHVybiA7XHJcblx0fVxyXG5cdHZhciB3aW5kb3dXaWR0aCA9IGRvY3VtZW50LmJvZHkuY2xpZW50V2lkdGg7XHJcblx0dmFyIHdpbmRvd0hlaWdodCA9IGRvY3VtZW50LmJvZHkuY2xpZW50SGVpZ2h0O1xyXG5cdHZhciBwaG90b1dpZHRoID0gcGFyc2VJbnQoX3Bob3RvTGlzdFswXS5jbGllbnRXaWR0aCk7XHJcblx0dmFyIHBob3RvSGVpZ2h0ID0gcGFyc2VJbnQoX3Bob3RvTGlzdFswXS5jbGllbnRIZWlnaHQpO1xyXG5cclxuXHR2YXIgY2VudGVyUGhvdG8gPSBfcGhvdG9MaXN0W25dO1xyXG5cdHZhciBfcGhvdG9BcnJheSA9IFtdO1xyXG5cdHZhciBfZG90ID0gdGhpcy5kb3RMaXN0O1xyXG5cdGZvciAodmFyIGkgPSAwOyBpIDwgX3Bob3RvTGlzdC5sZW5ndGg7IGkrKykge1xyXG5cdFx0dmFyIGl0ZW0gPSBfcGhvdG9MaXN0W2ldO1xyXG5cdFx0aXRlbS5yZW1vdmVBdHRyaWJ1dGUoXCJzdHlsZVwiKTtcclxuXHRcdGl0ZW0uY2xhc3NOYW1lID0gaXRlbS5jbGFzc05hbWUucmVwbGFjZSgncGhvdG8tYmFjaycsICdwaG90by1mcm9udCcpO1xyXG5cdFx0aXRlbS5jbGFzc05hbWUgPSBpdGVtLmNsYXNzTmFtZS5yZXBsYWNlKC9cXHMqcGhvdG8tY2VudGVyXFxzKi8sICcnKTtcclxuXHRcdF9waG90b0FycmF5LnB1c2goaXRlbSk7XHJcblxyXG5cdFx0X2RvdFtpXS5jbGFzc05hbWUgPSAnZG90JztcclxuXHRcdF9kb3RbaV0uaW5uZXJIVE1MID0gaSArIDE7XHJcblx0fVxyXG5cdGNlbnRlclBob3RvLmNsYXNzTmFtZSArPSBcIiBwaG90by1jZW50ZXJcIjtcclxuXHRfZG90W25dLmNsYXNzTmFtZSArPSAnIGN1cnJlbnQgZmEgZmEtdW5kbyc7XHJcblx0X2RvdFtuXS5pbm5lckhUTUwgPSAnJztcclxuXHJcblx0Ly8g5Yid5aeL5YyW5a+86Iiq5p2h5oyJ6ZKu5pi+56S65Liq5pWwXHJcblx0dmFyIG5hdiA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlDbGFzc05hbWUoJ25hdicpWzBdO1xyXG5cdHZhciB1bCA9IG5hdi5xdWVyeVNlbGVjdG9yKCd1bCcpO1xyXG5cdGlmKGRvY3VtZW50LmJvZHkuY2xpZW50V2lkdGggPCA3Njgpe1xyXG5cdFx0bmF2LnN0eWxlLndpZHRoID0gNSAqIDMwICsgJ3B4JztcclxuXHRcdG5hdi5zdHlsZS5tYXJnaW5MZWZ0ID0gLSg1ICogMzAgLyAyKSArICdweCc7XHJcblx0XHRpZihuIDwgMil7XHJcblx0XHRcdHVsLnN0eWxlLnRyYW5zZm9ybSA9ICd0cmFuc2xhdGVYKDApJztcclxuXHRcdH0gZWxzZSBpZihuID4gKF9kb3QubGVuZ3RoIC0gMykpe1xyXG5cdFx0XHR1bC5zdHlsZS50cmFuc2Zvcm0gPSAndHJhbnNsYXRlWCgnICsgLShfZG90Lmxlbmd0aCAtIDUpKjMwICsgJ3B4KSc7XHJcblx0XHR9IGVsc2Uge1xyXG5cdFx0XHR1bC5zdHlsZS50cmFuc2Zvcm0gPSAndHJhbnNsYXRlWCgnICsgLShuIC0gMikqMzAgKyAncHgpJztcclxuXHRcdH1cclxuXHR9XHJcblx0X2RvdFtuXS5jbGFzc05hbWUgKz0gJyBjdXJyZW50IGZhIGZhLXVuZG8nO1xyXG5cdF9kb3Rbbl0uaW5uZXJIVE1MID0gJyc7XHJcblxyXG5cdGRvdFNjcm9sbChuYXYpO1xyXG5cclxuXHRfcGhvdG9BcnJheS5zcGxpY2UobiwgMSk7XHJcblxyXG5cdHZhciBsZWZ0UGhvdG9MaXN0ID0gX3Bob3RvQXJyYXkuc3BsaWNlKDAsIE1hdGguZmxvb3IoX3Bob3RvQXJyYXkubGVuZ3RoLzIpKTtcclxuXHR2YXIgcmlnaHRQaG90b0xpc3QgPSBfcGhvdG9BcnJheTtcclxuXHR2YXIgX29wdGlvbnMgPSB0aGlzLnNvcnRXYXk7XHJcblxyXG5cdC8vIOagueaNruS8oOWFpeeahOWPguaVsOaJp+ihjOebuOW6lOeahOaOkuW6j+WHveaVsFxyXG5cdGlmKF9vcHRpb25zID09PSAncmFuZG9tJyl7XHJcblx0XHRyYW5kb21Tb3J0KGxlZnRQaG90b0xpc3QsIHJpZ2h0UGhvdG9MaXN0LCBwaG90b1dpZHRoLCBwaG90b0hlaWdodCwgd2luZG93V2lkdGgsIHdpbmRvd0hlaWdodCk7XHJcblx0fVxyXG5cdGVsc2UgaWYoX29wdGlvbnMgPT09ICdhbm51bGFyJyl7XHJcblx0XHRhbm51bGFyU29ydChsZWZ0UGhvdG9MaXN0LCByaWdodFBob3RvTGlzdCwgd2luZG93V2lkdGgsIHdpbmRvd0hlaWdodCk7XHJcblx0fVxyXG5cdGVsc2Uge1xyXG5cdFx0YWxlcnQoJ+ayoeaciei/meenjeaOkuW6j+aWueW8j++8jOivt+mHjeaWsOaMh+WumicpO1xyXG5cdH1cclxufVxyXG5cclxuLyogIOmAieaLqeaOkuW6j+aWueW8j1xyXG4gKlx0b3B0aW9uczogd2F5XHJcbiAqXHR3YXk6IOmAieaLqeaOkuW6j+aWueW8j++8jCdyYW5kb20n77ya6ZqP5py6OyAnYW5udWxhcifvvJrnjq/lvaLvvIzpu5jorqTpmo/mnLpcclxuICovXHJcbkdhbGxlcnkucHJvdG90eXBlLnN3aXRjaCA9IGZ1bmN0aW9uKHdheSl7XHJcblx0dmFyIF9waG90b0xpc3QgPSB0aGlzLnBob3RvTGlzdDtcclxuXHJcblx0dmFyIHdpbmRvd1dpZHRoID0gZG9jdW1lbnQuYm9keS5jbGllbnRXaWR0aDtcclxuXHR2YXIgd2luZG93SGVpZ2h0ID0gZG9jdW1lbnQuYm9keS5jbGllbnRIZWlnaHQ7XHJcblx0dmFyIHBob3RvV2lkdGggPSBwYXJzZUludChfcGhvdG9MaXN0WzBdLmNsaWVudFdpZHRoKTtcclxuXHR2YXIgcGhvdG9IZWlnaHQgPSBwYXJzZUludChfcGhvdG9MaXN0WzBdLmNsaWVudEhlaWdodCk7XHJcblx0dmFyIG4gPSByYW5kb20oWzAsIF9waG90b0xpc3QubGVuZ3RoXSk7XHJcblxyXG5cdHZhciBjZW50ZXJQaG90byA9IF9waG90b0xpc3Rbbl07XHJcblx0dmFyIF9waG90b0FycmF5ID0gW107XHJcblx0dmFyIF9kb3QgPSB0aGlzLmRvdExpc3Q7XHJcblx0Zm9yICh2YXIgaSA9IDA7IGkgPCBfcGhvdG9MaXN0Lmxlbmd0aDsgaSsrKSB7XHJcblx0XHR2YXIgaXRlbSA9IF9waG90b0xpc3RbaV07XHJcblx0XHRpdGVtLnJlbW92ZUF0dHJpYnV0ZShcInN0eWxlXCIpO1xyXG5cdFx0aXRlbS5jbGFzc05hbWUgPSBpdGVtLmNsYXNzTmFtZS5yZXBsYWNlKCdwaG90by1iYWNrJywgJ3Bob3RvLWZyb250Jyk7XHJcblx0XHRpdGVtLmNsYXNzTmFtZSA9IGl0ZW0uY2xhc3NOYW1lLnJlcGxhY2UoL1xccypwaG90by1jZW50ZXJcXHMqLywgJycpO1xyXG5cdFx0X3Bob3RvQXJyYXkucHVzaChpdGVtKTtcclxuXHJcblx0XHRfZG90W2ldLmNsYXNzTmFtZSA9ICdkb3QnO1xyXG5cdFx0X2RvdFtpXS5pbm5lckhUTUwgPSBpICsgMTtcclxuXHR9XHJcblx0Y2VudGVyUGhvdG8uY2xhc3NOYW1lICs9IFwiIHBob3RvLWNlbnRlclwiO1xyXG5cdF9kb3Rbbl0uY2xhc3NOYW1lICs9ICcgY3VycmVudCBmYSBmYS11bmRvJztcclxuXHRfZG90W25dLmlubmVySFRNTCA9ICcnO1xyXG5cclxuXHQvLyDliJ3lp4vljJblr7zoiKrmnaHmjInpkq7mmL7npLrkuKrmlbBcclxuXHR2YXIgbmF2ID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeUNsYXNzTmFtZSgnbmF2JylbMF07XHJcblx0dmFyIHVsID0gbmF2LnF1ZXJ5U2VsZWN0b3IoJ3VsJyk7XHJcblx0aWYoZG9jdW1lbnQuYm9keS5jbGllbnRXaWR0aCA8IDc2OCl7XHJcblx0XHRuYXYuc3R5bGUud2lkdGggPSA1ICogMzAgKyAncHgnO1xyXG5cdFx0bmF2LnN0eWxlLm1hcmdpbkxlZnQgPSAtKDUgKiAzMCAvIDIpICsgJ3B4JztcclxuXHRcdGlmKG4gPCAyKXtcclxuXHRcdFx0dWwuc3R5bGUudHJhbnNmb3JtID0gJ3RyYW5zbGF0ZVgoMCknO1xyXG5cdFx0fSBlbHNlIGlmKG4gPiAoX2RvdC5sZW5ndGggLSAzKSl7XHJcblx0XHRcdHVsLnN0eWxlLnRyYW5zZm9ybSA9ICd0cmFuc2xhdGVYKCcgKyAtKF9kb3QubGVuZ3RoIC0gNSkqMzAgKyAncHgpJztcclxuXHRcdH0gZWxzZSB7XHJcblx0XHRcdHVsLnN0eWxlLnRyYW5zZm9ybSA9ICd0cmFuc2xhdGVYKCcgKyAtKG4gLSAyKSozMCArICdweCknO1xyXG5cdFx0fVxyXG5cdH1cclxuXHRfZG90W25dLmNsYXNzTmFtZSArPSAnIGN1cnJlbnQgZmEgZmEtdW5kbyc7XHJcblx0X2RvdFtuXS5pbm5lckhUTUwgPSAnJztcclxuXHJcblx0ZG90U2Nyb2xsKG5hdik7XHJcblxyXG5cdF9waG90b0FycmF5LnNwbGljZShuLCAxKTtcclxuXHJcblx0dmFyIGxlZnRQaG90b0xpc3QgPSBfcGhvdG9BcnJheS5zcGxpY2UoMCwgTWF0aC5mbG9vcihfcGhvdG9BcnJheS5sZW5ndGgvMikpO1xyXG5cdHZhciByaWdodFBob3RvTGlzdCA9IF9waG90b0FycmF5O1xyXG5cdHZhciBfb3B0aW9ucztcclxuXHRpZih3YXkpe1xyXG5cdFx0X29wdGlvbnMgPXdheTtcclxuXHR9IGVsc2UgaWYodGhpcy5zb3J0V2F5KXtcclxuXHRcdF9vcHRpb25zID0gdGhpcy5zb3J0V2F5O1xyXG5cdH0gZWxzZSB7XHJcblx0XHRfb3B0aW9ucyA9ICdyYW5kb20nO1xyXG5cdH1cclxuXHJcblx0Ly8g5qC55o2u5Lyg5YWl55qE5Y+C5pWw5omn6KGM55u45bqU55qE5o6S5bqP5Ye95pWwXHJcblx0aWYoX29wdGlvbnMgPT09ICdyYW5kb20nKXtcclxuXHRcdHJhbmRvbVNvcnQobGVmdFBob3RvTGlzdCwgcmlnaHRQaG90b0xpc3QsIHBob3RvV2lkdGgsIHBob3RvSGVpZ2h0LCB3aW5kb3dXaWR0aCwgd2luZG93SGVpZ2h0KTtcclxuXHR9XHJcblx0ZWxzZSBpZihfb3B0aW9ucyA9PT0gJ2FubnVsYXInKXtcclxuXHRcdGFubnVsYXJTb3J0KGxlZnRQaG90b0xpc3QsIHJpZ2h0UGhvdG9MaXN0LCB3aW5kb3dXaWR0aCwgd2luZG93SGVpZ2h0KTtcclxuXHR9XHJcblx0ZWxzZSB7XHJcblx0XHRhbGVydCgn5rKh5pyJ6L+Z56eN5o6S5bqP5pa55byP77yM6K+36YeN5paw5oyH5a6aJyk7XHJcblx0fVxyXG5cdHRoaXMuc29ydFdheSA9IF9vcHRpb25zO1xyXG59XHJcblxyXG4vLyDpmo/mnLrmjpLluo9cclxuZnVuY3Rpb24gcmFuZG9tU29ydChsZWZ0UGhvdG9MaXN0LCByaWdodFBob3RvTGlzdCwgcGhvdG9XaWR0aCwgcGhvdG9IZWlnaHQsIHdpbmRvd1dpZHRoLCB3aW5kb3dIZWlnaHQpe1xyXG5cdGZvciAodmFyIGkgPSAwLCBrID0gbGVmdFBob3RvTGlzdC5sZW5ndGg7IGkgPCBrOyBpKyspIHtcclxuXHRcdGxlZnRQaG90b0xpc3RbaV0uc3R5bGUudHJhbnNmb3JtID0gJ3JvdGF0ZSgnICsgcmFuZG9tKFstMTUwLCAxNTBdKSArICdkZWcpJztcclxuXHRcdGxlZnRQaG90b0xpc3RbaV0uc3R5bGUudG9wID0gcmFuZG9tKFstcGhvdG9IZWlnaHQvMiwgd2luZG93SGVpZ2h0IC0gcGhvdG9IZWlnaHQvMl0pICsgJ3B4JztcclxuXHRcdGxlZnRQaG90b0xpc3RbaV0uc3R5bGUubGVmdCA9IHJhbmRvbShbLXBob3RvV2lkdGgvMiwgd2luZG93V2lkdGgvMiAtIHBob3RvV2lkdGhdKSArICdweCc7XHJcblx0XHRsZWZ0UGhvdG9MaXN0W2ldLnN0eWxlLm1hcmdpbiA9IDA7XHJcblxyXG5cdFx0cmlnaHRQaG90b0xpc3RbaV0uc3R5bGUudHJhbnNmb3JtID0gJ3JvdGF0ZSgnICsgcmFuZG9tKFstMTUwLCAxNTBdKSArICdkZWcpJztcclxuXHRcdHJpZ2h0UGhvdG9MaXN0W2ldLnN0eWxlLnRvcCA9IHJhbmRvbShbLXBob3RvSGVpZ2h0LzIsIHdpbmRvd0hlaWdodCAtIHBob3RvSGVpZ2h0LzJdKSArICdweCc7XHJcblx0XHRyaWdodFBob3RvTGlzdFtpXS5zdHlsZS5sZWZ0ID0gcmFuZG9tKFt3aW5kb3dXaWR0aC8yLCB3aW5kb3dXaWR0aCAtIHBob3RvV2lkdGgvMl0pICsgJ3B4JztcclxuXHRcdHJpZ2h0UGhvdG9MaXN0W2ldLnN0eWxlLm1hcmdpbiA9IDA7XHJcblx0fVxyXG5cdGlmKGsgPCByaWdodFBob3RvTGlzdC5sZW5ndGgpe1xyXG5cdFx0cmlnaHRQaG90b0xpc3Rba10uc3R5bGUudHJhbnNmb3JtID0gJ3JvdGF0ZSgnICsgcmFuZG9tKFstMTUwLCAxNTBdKSArICdkZWcpJztcclxuXHRcdHJpZ2h0UGhvdG9MaXN0W2tdLnN0eWxlLnRvcCA9IHJhbmRvbShbLXBob3RvSGVpZ2h0LzIsIHdpbmRvd0hlaWdodCAtIHBob3RvSGVpZ2h0LzJdKSArICdweCc7XHJcblx0XHRyaWdodFBob3RvTGlzdFtrXS5zdHlsZS5sZWZ0ID0gcmFuZG9tKFt3aW5kb3dXaWR0aC8yLCB3aW5kb3dXaWR0aCAtIHBob3RvV2lkdGgvMl0pICsgJ3B4JztcclxuXHRcdHJpZ2h0UGhvdG9MaXN0W2tdLnN0eWxlLm1hcmdpbiA9IDA7XHJcblx0fVxyXG59XHJcblxyXG4vLyDnjq/lvaLmjpLluo9cclxuZnVuY3Rpb24gYW5udWxhclNvcnQobGVmdFBob3RvTGlzdCwgcmlnaHRQaG90b0xpc3QsIHdpbmRvd1dpZHRoLCB3aW5kb3dIZWlnaHQpe1xyXG5cclxuXHQvLyDljYrlvoTvvJrmmL7npLrlmajplb/lrr3ovoPlsI/lgLxcclxuXHQvLyBNYXRoLm1pbih3cmFwV2lkdGgsIHdyYXBIZWlnaHQpXHJcblx0Ly8gXHJcblx0Ly8g5bem5YiG5Yy65peL6L2s6KeS5bqmXHJcblx0Ly8gWy05MGRlZywgNzVkZWddXHJcblx0Ly8gXHJcblx0Ly8g5Y+z5YiG5Yy65peL6L2s6KeS5bqmXHJcblx0Ly8gWzEwNWRlZywgMjcwZGVnXVxyXG5cclxuXHR2YXIgcmFkaXVzID0gTWF0aC5taW4od2luZG93V2lkdGgsIHdpbmRvd0hlaWdodCkgLyAyO1xyXG5cclxuXHRmb3IgKHZhciBpID0gMCwgayA9IGxlZnRQaG90b0xpc3QubGVuZ3RoOyBpIDwgazsgaSsrKSB7XHJcblx0XHRsZWZ0UGhvdG9MaXN0W2ldLnN0eWxlLnRyYW5zZm9ybSA9ICdyb3RhdGUoJyArIHJhbmRvbShbMTA1LCAyNzBdKSArICdkZWcpIHRyYW5zbGF0ZSgnICsgcmFkaXVzICsgJ3B4KSc7XHJcblx0XHRyaWdodFBob3RvTGlzdFtpXS5zdHlsZS50cmFuc2Zvcm0gPSAncm90YXRlKCcgKyByYW5kb20oWy05MCwgNzVdKSArICdkZWcpIHRyYW5zbGF0ZSgnICsgcmFkaXVzICsgJ3B4KSc7XHJcblx0fVxyXG5cdGlmKGsgPCByaWdodFBob3RvTGlzdC5sZW5ndGgpe1xyXG5cdFx0cmlnaHRQaG90b0xpc3Rba10uc3R5bGUudHJhbnNmb3JtID0gJ3JvdGF0ZSgnICsgcmFuZG9tKFstOTAsIDc1XSkgKyAnZGVnKSB0cmFuc2xhdGUoJyArIHJhZGl1cyArICdweCknO1xyXG5cdH1cclxufVxyXG5cclxuLy8g5LuO57uZ5a6a55qE6IyD5Zu06ZqP5py65Y+W5LiA5Liq5YC8XHJcbmZ1bmN0aW9uIHJhbmRvbShhcnIpe1xyXG5cdHZhciBtYXggPSBNYXRoLm1heChhcnJbMF0sIGFyclsxXSk7XHJcblx0dmFyIG1pbiA9IE1hdGgubWluKGFyclswXSwgYXJyWzFdKTtcclxuXHR2YXIgcmFuZ2UgPSBtYXggLSBtaW47XHJcblx0cmV0dXJuIE1hdGguZmxvb3IoTWF0aC5yYW5kb20oKSAqIHJhbmdlICsgbWluKTtcclxufVxyXG5cclxuLy8g5Li65a+86Iiq5p2h5re75Yqg6Kem5pG45rua5Yqo5LqL5Lu2XHJcbmZ1bmN0aW9uIGRvdFNjcm9sbChuYXYpe1xyXG5cdHZhciBfbmF2ID0gbmF2O1xyXG5cdHZhciB1bCA9IF9uYXYucXVlcnlTZWxlY3RvcigndWwnKTtcclxuXHR2YXIgbGVmdCwgc3RhcnRYLCBlbmRYLCBzdGFydFQsIGVuZFQ7XHJcblx0X25hdi5vbnRvdWNoc3RhcnQgPSBmdW5jdGlvbihlKXtcclxuXHRcdHZhciBhcnIgPSBnZXRTdHlsZSh1bCwgJ3RyYW5zZm9ybScpO1xyXG5cdFx0YXJyID0gYXJyLnNwbGl0KCcsJyk7XHJcblx0XHRsZWZ0ID0gcGFyc2VJbnQoYXJyWzRdKTtcclxuXHRcdC8vIGNvbnNvbGUubG9nKGxlZnQpO1xyXG5cdFx0c3RhcnRYID0gZS50b3VjaGVzWzBdLmNsaWVudFg7XHJcblx0XHRzdGFydFQgPSBuZXcgRGF0ZSgpIC0gMDtcclxuXHR9XHJcblx0X25hdi5vbnRvdWNobW92ZSA9IGZ1bmN0aW9uKGUpe1xyXG5cdFx0ZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG5cdFx0dWwuc3R5bGUudHJhbnNpdGlvbiA9ICd0cmFuc2Zvcm0gMHMnO1xyXG5cclxuXHRcdGVuZFggPSBlLnRvdWNoZXNbMF0uY2xpZW50WDtcclxuXHRcdHVsLnN0eWxlLnRyYW5zZm9ybSA9ICd0cmFuc2xhdGVYKCcgKyAobGVmdCArIGVuZFggLSBzdGFydFgpICsgJ3B4KSc7XHJcblx0fVxyXG5cdF9uYXYub250b3VjaGVuZCA9IGZ1bmN0aW9uKGUpe1xyXG5cdFx0ZW5kVCA9IG5ldyBEYXRlKCkgLSAwO1xyXG5cdFx0Ly8g5rKh5pyJ56e75Yqo77yM55u05o6l6L+U5ZueXHJcblx0XHRpZihlbmRYID09IG51bGwpIHJldHVybiA7XHJcblx0XHQvLyDnp7vliqjml7bpl7TlsI/kuo4zMDDmr6vnp5LlubbkuJTnp7vliqjot53nprvlsI/kuo4zMFBY77yM55u05o6l6L+U5ZueXHJcblx0XHRpZigoZW5kVCAtIHN0YXJ0VCA8IDMwMCkgJiYgKE1hdGguYWJzKGVuZFggLSBzdGFydFgpIDwgMzApKXtcclxuXHRcdFx0cmV0dXJuIDtcclxuXHRcdH1cclxuXHJcblx0XHRsZWZ0ICs9IGVuZFggLSBzdGFydFg7XHJcblx0XHRpZihsZWZ0IDwgLTMwMCl7XHJcblx0XHRcdGxlZnQgPSAtMzAwO1xyXG5cdFx0fSBlbHNlIGlmKGxlZnQgPiAwKXtcclxuXHRcdFx0bGVmdCA9IDA7XHJcblx0XHR9XHJcblx0XHRlbmRYID0gbnVsbDtcclxuXHRcdHVsLnN0eWxlLnRyYW5zaXRpb24gPSAndHJhbnNmb3JtIDAuM3MgZWFzZS1vdXQnO1xyXG5cdFx0dWwuc3R5bGUudHJhbnNmb3JtID0gJ3RyYW5zbGF0ZVgoJyArIC0oTWF0aC5jZWlsKE1hdGguYWJzKGxlZnQvMzApKSozMCkgKyAncHgpJztcclxuXHR9XHJcbn1cclxuXHJcbi8vIOiOt+WPluWFg+e0oOeahOagt+W8j1xyXG5mdW5jdGlvbiBnZXRTdHlsZShvYmosIGF0dHIpIHsgXHJcblx0aWYob2JqLmN1cnJlbnRTdHlsZSkgXHJcblx0eyBcclxuXHRcdHJldHVybiBvYmouY3VycmVudFN0eWxlW2F0dHJdOyBcclxuXHR9IFxyXG5cdFx0ZWxzZSBcclxuXHR7IFxyXG5cdFx0cmV0dXJuIGdldENvbXB1dGVkU3R5bGUob2JqLGZhbHNlKVthdHRyXTsgXHJcblx0fSBcclxufVxyXG4iLCIvKiBwZXJmZWN0LXNjcm9sbGJhciB2MC42LjE2ICovXG4oZnVuY3Rpb24gZSh0LG4scil7ZnVuY3Rpb24gcyhvLHUpe2lmKCFuW29dKXtpZighdFtvXSl7dmFyIGE9dHlwZW9mIHJlcXVpcmU9PVwiZnVuY3Rpb25cIiYmcmVxdWlyZTtpZighdSYmYSlyZXR1cm4gYShvLCEwKTtpZihpKXJldHVybiBpKG8sITApO3ZhciBmPW5ldyBFcnJvcihcIkNhbm5vdCBmaW5kIG1vZHVsZSAnXCIrbytcIidcIik7dGhyb3cgZi5jb2RlPVwiTU9EVUxFX05PVF9GT1VORFwiLGZ9dmFyIGw9bltvXT17ZXhwb3J0czp7fX07dFtvXVswXS5jYWxsKGwuZXhwb3J0cyxmdW5jdGlvbihlKXt2YXIgbj10W29dWzFdW2VdO3JldHVybiBzKG4/bjplKX0sbCxsLmV4cG9ydHMsZSx0LG4scil9cmV0dXJuIG5bb10uZXhwb3J0c312YXIgaT10eXBlb2YgcmVxdWlyZT09XCJmdW5jdGlvblwiJiZyZXF1aXJlO2Zvcih2YXIgbz0wO288ci5sZW5ndGg7bysrKXMocltvXSk7cmV0dXJuIHN9KSh7MTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XHJcblxyXG52YXIgcHMgPSByZXF1aXJlKCcuLi9tYWluJyk7XHJcblxyXG5pZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7XHJcbiAgLy8gQU1EXHJcbiAgZGVmaW5lKHBzKTtcclxufSBlbHNlIHtcclxuICAvLyBBZGQgdG8gYSBnbG9iYWwgb2JqZWN0LlxyXG4gIHdpbmRvdy5QZXJmZWN0U2Nyb2xsYmFyID0gcHM7XHJcbiAgaWYgKHR5cGVvZiB3aW5kb3cuUHMgPT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICB3aW5kb3cuUHMgPSBwcztcclxuICB9XHJcbn1cclxuXG59LHtcIi4uL21haW5cIjo3fV0sMjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XHJcblxyXG5mdW5jdGlvbiBvbGRBZGQoZWxlbWVudCwgY2xhc3NOYW1lKSB7XHJcbiAgdmFyIGNsYXNzZXMgPSBlbGVtZW50LmNsYXNzTmFtZS5zcGxpdCgnICcpO1xyXG4gIGlmIChjbGFzc2VzLmluZGV4T2YoY2xhc3NOYW1lKSA8IDApIHtcclxuICAgIGNsYXNzZXMucHVzaChjbGFzc05hbWUpO1xyXG4gIH1cclxuICBlbGVtZW50LmNsYXNzTmFtZSA9IGNsYXNzZXMuam9pbignICcpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBvbGRSZW1vdmUoZWxlbWVudCwgY2xhc3NOYW1lKSB7XHJcbiAgdmFyIGNsYXNzZXMgPSBlbGVtZW50LmNsYXNzTmFtZS5zcGxpdCgnICcpO1xyXG4gIHZhciBpZHggPSBjbGFzc2VzLmluZGV4T2YoY2xhc3NOYW1lKTtcclxuICBpZiAoaWR4ID49IDApIHtcclxuICAgIGNsYXNzZXMuc3BsaWNlKGlkeCwgMSk7XHJcbiAgfVxyXG4gIGVsZW1lbnQuY2xhc3NOYW1lID0gY2xhc3Nlcy5qb2luKCcgJyk7XHJcbn1cclxuXHJcbmV4cG9ydHMuYWRkID0gZnVuY3Rpb24gKGVsZW1lbnQsIGNsYXNzTmFtZSkge1xyXG4gIGlmIChlbGVtZW50LmNsYXNzTGlzdCkge1xyXG4gICAgZWxlbWVudC5jbGFzc0xpc3QuYWRkKGNsYXNzTmFtZSk7XHJcbiAgfSBlbHNlIHtcclxuICAgIG9sZEFkZChlbGVtZW50LCBjbGFzc05hbWUpO1xyXG4gIH1cclxufTtcclxuXHJcbmV4cG9ydHMucmVtb3ZlID0gZnVuY3Rpb24gKGVsZW1lbnQsIGNsYXNzTmFtZSkge1xyXG4gIGlmIChlbGVtZW50LmNsYXNzTGlzdCkge1xyXG4gICAgZWxlbWVudC5jbGFzc0xpc3QucmVtb3ZlKGNsYXNzTmFtZSk7XHJcbiAgfSBlbHNlIHtcclxuICAgIG9sZFJlbW92ZShlbGVtZW50LCBjbGFzc05hbWUpO1xyXG4gIH1cclxufTtcclxuXHJcbmV4cG9ydHMubGlzdCA9IGZ1bmN0aW9uIChlbGVtZW50KSB7XHJcbiAgaWYgKGVsZW1lbnQuY2xhc3NMaXN0KSB7XHJcbiAgICByZXR1cm4gQXJyYXkucHJvdG90eXBlLnNsaWNlLmFwcGx5KGVsZW1lbnQuY2xhc3NMaXN0KTtcclxuICB9IGVsc2Uge1xyXG4gICAgcmV0dXJuIGVsZW1lbnQuY2xhc3NOYW1lLnNwbGl0KCcgJyk7XHJcbiAgfVxyXG59O1xyXG5cbn0se31dLDM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xyXG5cclxudmFyIERPTSA9IHt9O1xyXG5cclxuRE9NLmUgPSBmdW5jdGlvbiAodGFnTmFtZSwgY2xhc3NOYW1lKSB7XHJcbiAgdmFyIGVsZW1lbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KHRhZ05hbWUpO1xyXG4gIGVsZW1lbnQuY2xhc3NOYW1lID0gY2xhc3NOYW1lO1xyXG4gIHJldHVybiBlbGVtZW50O1xyXG59O1xyXG5cclxuRE9NLmFwcGVuZFRvID0gZnVuY3Rpb24gKGNoaWxkLCBwYXJlbnQpIHtcclxuICBwYXJlbnQuYXBwZW5kQ2hpbGQoY2hpbGQpO1xyXG4gIHJldHVybiBjaGlsZDtcclxufTtcclxuXHJcbmZ1bmN0aW9uIGNzc0dldChlbGVtZW50LCBzdHlsZU5hbWUpIHtcclxuICByZXR1cm4gd2luZG93LmdldENvbXB1dGVkU3R5bGUoZWxlbWVudClbc3R5bGVOYW1lXTtcclxufVxyXG5cclxuZnVuY3Rpb24gY3NzU2V0KGVsZW1lbnQsIHN0eWxlTmFtZSwgc3R5bGVWYWx1ZSkge1xyXG4gIGlmICh0eXBlb2Ygc3R5bGVWYWx1ZSA9PT0gJ251bWJlcicpIHtcclxuICAgIHN0eWxlVmFsdWUgPSBzdHlsZVZhbHVlLnRvU3RyaW5nKCkgKyAncHgnO1xyXG4gIH1cclxuICBlbGVtZW50LnN0eWxlW3N0eWxlTmFtZV0gPSBzdHlsZVZhbHVlO1xyXG4gIHJldHVybiBlbGVtZW50O1xyXG59XHJcblxyXG5mdW5jdGlvbiBjc3NNdWx0aVNldChlbGVtZW50LCBvYmopIHtcclxuICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7XHJcbiAgICB2YXIgdmFsID0gb2JqW2tleV07XHJcbiAgICBpZiAodHlwZW9mIHZhbCA9PT0gJ251bWJlcicpIHtcclxuICAgICAgdmFsID0gdmFsLnRvU3RyaW5nKCkgKyAncHgnO1xyXG4gICAgfVxyXG4gICAgZWxlbWVudC5zdHlsZVtrZXldID0gdmFsO1xyXG4gIH1cclxuICByZXR1cm4gZWxlbWVudDtcclxufVxyXG5cclxuRE9NLmNzcyA9IGZ1bmN0aW9uIChlbGVtZW50LCBzdHlsZU5hbWVPck9iamVjdCwgc3R5bGVWYWx1ZSkge1xyXG4gIGlmICh0eXBlb2Ygc3R5bGVOYW1lT3JPYmplY3QgPT09ICdvYmplY3QnKSB7XHJcbiAgICAvLyBtdWx0aXBsZSBzZXQgd2l0aCBvYmplY3RcclxuICAgIHJldHVybiBjc3NNdWx0aVNldChlbGVtZW50LCBzdHlsZU5hbWVPck9iamVjdCk7XHJcbiAgfSBlbHNlIHtcclxuICAgIGlmICh0eXBlb2Ygc3R5bGVWYWx1ZSA9PT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgICAgcmV0dXJuIGNzc0dldChlbGVtZW50LCBzdHlsZU5hbWVPck9iamVjdCk7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gY3NzU2V0KGVsZW1lbnQsIHN0eWxlTmFtZU9yT2JqZWN0LCBzdHlsZVZhbHVlKTtcclxuICAgIH1cclxuICB9XHJcbn07XHJcblxyXG5ET00ubWF0Y2hlcyA9IGZ1bmN0aW9uIChlbGVtZW50LCBxdWVyeSkge1xyXG4gIGlmICh0eXBlb2YgZWxlbWVudC5tYXRjaGVzICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgcmV0dXJuIGVsZW1lbnQubWF0Y2hlcyhxdWVyeSk7XHJcbiAgfSBlbHNlIHtcclxuICAgIGlmICh0eXBlb2YgZWxlbWVudC5tYXRjaGVzU2VsZWN0b3IgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICAgIHJldHVybiBlbGVtZW50Lm1hdGNoZXNTZWxlY3RvcihxdWVyeSk7XHJcbiAgICB9IGVsc2UgaWYgKHR5cGVvZiBlbGVtZW50LndlYmtpdE1hdGNoZXNTZWxlY3RvciAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgICAgcmV0dXJuIGVsZW1lbnQud2Via2l0TWF0Y2hlc1NlbGVjdG9yKHF1ZXJ5KTtcclxuICAgIH0gZWxzZSBpZiAodHlwZW9mIGVsZW1lbnQubW96TWF0Y2hlc1NlbGVjdG9yICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgICByZXR1cm4gZWxlbWVudC5tb3pNYXRjaGVzU2VsZWN0b3IocXVlcnkpO1xyXG4gICAgfSBlbHNlIGlmICh0eXBlb2YgZWxlbWVudC5tc01hdGNoZXNTZWxlY3RvciAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgICAgcmV0dXJuIGVsZW1lbnQubXNNYXRjaGVzU2VsZWN0b3IocXVlcnkpO1xyXG4gICAgfVxyXG4gIH1cclxufTtcclxuXHJcbkRPTS5yZW1vdmUgPSBmdW5jdGlvbiAoZWxlbWVudCkge1xyXG4gIGlmICh0eXBlb2YgZWxlbWVudC5yZW1vdmUgIT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICBlbGVtZW50LnJlbW92ZSgpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBpZiAoZWxlbWVudC5wYXJlbnROb2RlKSB7XHJcbiAgICAgIGVsZW1lbnQucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlbGVtZW50KTtcclxuICAgIH1cclxuICB9XHJcbn07XHJcblxyXG5ET00ucXVlcnlDaGlsZHJlbiA9IGZ1bmN0aW9uIChlbGVtZW50LCBzZWxlY3Rvcikge1xyXG4gIHJldHVybiBBcnJheS5wcm90b3R5cGUuZmlsdGVyLmNhbGwoZWxlbWVudC5jaGlsZE5vZGVzLCBmdW5jdGlvbiAoY2hpbGQpIHtcclxuICAgIHJldHVybiBET00ubWF0Y2hlcyhjaGlsZCwgc2VsZWN0b3IpO1xyXG4gIH0pO1xyXG59O1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBET007XHJcblxufSx7fV0sNDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XHJcblxyXG52YXIgRXZlbnRFbGVtZW50ID0gZnVuY3Rpb24gKGVsZW1lbnQpIHtcclxuICB0aGlzLmVsZW1lbnQgPSBlbGVtZW50O1xyXG4gIHRoaXMuZXZlbnRzID0ge307XHJcbn07XHJcblxyXG5FdmVudEVsZW1lbnQucHJvdG90eXBlLmJpbmQgPSBmdW5jdGlvbiAoZXZlbnROYW1lLCBoYW5kbGVyKSB7XHJcbiAgaWYgKHR5cGVvZiB0aGlzLmV2ZW50c1tldmVudE5hbWVdID09PSAndW5kZWZpbmVkJykge1xyXG4gICAgdGhpcy5ldmVudHNbZXZlbnROYW1lXSA9IFtdO1xyXG4gIH1cclxuICB0aGlzLmV2ZW50c1tldmVudE5hbWVdLnB1c2goaGFuZGxlcik7XHJcbiAgdGhpcy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoZXZlbnROYW1lLCBoYW5kbGVyLCBmYWxzZSk7XHJcbn07XHJcblxyXG5FdmVudEVsZW1lbnQucHJvdG90eXBlLnVuYmluZCA9IGZ1bmN0aW9uIChldmVudE5hbWUsIGhhbmRsZXIpIHtcclxuICB2YXIgaXNIYW5kbGVyUHJvdmlkZWQgPSAodHlwZW9mIGhhbmRsZXIgIT09ICd1bmRlZmluZWQnKTtcclxuICB0aGlzLmV2ZW50c1tldmVudE5hbWVdID0gdGhpcy5ldmVudHNbZXZlbnROYW1lXS5maWx0ZXIoZnVuY3Rpb24gKGhkbHIpIHtcclxuICAgIGlmIChpc0hhbmRsZXJQcm92aWRlZCAmJiBoZGxyICE9PSBoYW5kbGVyKSB7XHJcbiAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG4gICAgdGhpcy5lbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoZXZlbnROYW1lLCBoZGxyLCBmYWxzZSk7XHJcbiAgICByZXR1cm4gZmFsc2U7XHJcbiAgfSwgdGhpcyk7XHJcbn07XHJcblxyXG5FdmVudEVsZW1lbnQucHJvdG90eXBlLnVuYmluZEFsbCA9IGZ1bmN0aW9uICgpIHtcclxuICBmb3IgKHZhciBuYW1lIGluIHRoaXMuZXZlbnRzKSB7XHJcbiAgICB0aGlzLnVuYmluZChuYW1lKTtcclxuICB9XHJcbn07XHJcblxyXG52YXIgRXZlbnRNYW5hZ2VyID0gZnVuY3Rpb24gKCkge1xyXG4gIHRoaXMuZXZlbnRFbGVtZW50cyA9IFtdO1xyXG59O1xyXG5cclxuRXZlbnRNYW5hZ2VyLnByb3RvdHlwZS5ldmVudEVsZW1lbnQgPSBmdW5jdGlvbiAoZWxlbWVudCkge1xyXG4gIHZhciBlZSA9IHRoaXMuZXZlbnRFbGVtZW50cy5maWx0ZXIoZnVuY3Rpb24gKGV2ZW50RWxlbWVudCkge1xyXG4gICAgcmV0dXJuIGV2ZW50RWxlbWVudC5lbGVtZW50ID09PSBlbGVtZW50O1xyXG4gIH0pWzBdO1xyXG4gIGlmICh0eXBlb2YgZWUgPT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICBlZSA9IG5ldyBFdmVudEVsZW1lbnQoZWxlbWVudCk7XHJcbiAgICB0aGlzLmV2ZW50RWxlbWVudHMucHVzaChlZSk7XHJcbiAgfVxyXG4gIHJldHVybiBlZTtcclxufTtcclxuXHJcbkV2ZW50TWFuYWdlci5wcm90b3R5cGUuYmluZCA9IGZ1bmN0aW9uIChlbGVtZW50LCBldmVudE5hbWUsIGhhbmRsZXIpIHtcclxuICB0aGlzLmV2ZW50RWxlbWVudChlbGVtZW50KS5iaW5kKGV2ZW50TmFtZSwgaGFuZGxlcik7XHJcbn07XHJcblxyXG5FdmVudE1hbmFnZXIucHJvdG90eXBlLnVuYmluZCA9IGZ1bmN0aW9uIChlbGVtZW50LCBldmVudE5hbWUsIGhhbmRsZXIpIHtcclxuICB0aGlzLmV2ZW50RWxlbWVudChlbGVtZW50KS51bmJpbmQoZXZlbnROYW1lLCBoYW5kbGVyKTtcclxufTtcclxuXHJcbkV2ZW50TWFuYWdlci5wcm90b3R5cGUudW5iaW5kQWxsID0gZnVuY3Rpb24gKCkge1xyXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgdGhpcy5ldmVudEVsZW1lbnRzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICB0aGlzLmV2ZW50RWxlbWVudHNbaV0udW5iaW5kQWxsKCk7XHJcbiAgfVxyXG59O1xyXG5cclxuRXZlbnRNYW5hZ2VyLnByb3RvdHlwZS5vbmNlID0gZnVuY3Rpb24gKGVsZW1lbnQsIGV2ZW50TmFtZSwgaGFuZGxlcikge1xyXG4gIHZhciBlZSA9IHRoaXMuZXZlbnRFbGVtZW50KGVsZW1lbnQpO1xyXG4gIHZhciBvbmNlSGFuZGxlciA9IGZ1bmN0aW9uIChlKSB7XHJcbiAgICBlZS51bmJpbmQoZXZlbnROYW1lLCBvbmNlSGFuZGxlcik7XHJcbiAgICBoYW5kbGVyKGUpO1xyXG4gIH07XHJcbiAgZWUuYmluZChldmVudE5hbWUsIG9uY2VIYW5kbGVyKTtcclxufTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gRXZlbnRNYW5hZ2VyO1xyXG5cbn0se31dLDU6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSAoZnVuY3Rpb24gKCkge1xyXG4gIGZ1bmN0aW9uIHM0KCkge1xyXG4gICAgcmV0dXJuIE1hdGguZmxvb3IoKDEgKyBNYXRoLnJhbmRvbSgpKSAqIDB4MTAwMDApXHJcbiAgICAgICAgICAgICAgIC50b1N0cmluZygxNilcclxuICAgICAgICAgICAgICAgLnN1YnN0cmluZygxKTtcclxuICB9XHJcbiAgcmV0dXJuIGZ1bmN0aW9uICgpIHtcclxuICAgIHJldHVybiBzNCgpICsgczQoKSArICctJyArIHM0KCkgKyAnLScgKyBzNCgpICsgJy0nICtcclxuICAgICAgICAgICBzNCgpICsgJy0nICsgczQoKSArIHM0KCkgKyBzNCgpO1xyXG4gIH07XHJcbn0pKCk7XHJcblxufSx7fV0sNjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XHJcblxyXG52YXIgY2xzID0gcmVxdWlyZSgnLi9jbGFzcycpO1xyXG52YXIgZG9tID0gcmVxdWlyZSgnLi9kb20nKTtcclxuXHJcbnZhciB0b0ludCA9IGV4cG9ydHMudG9JbnQgPSBmdW5jdGlvbiAoeCkge1xyXG4gIHJldHVybiBwYXJzZUludCh4LCAxMCkgfHwgMDtcclxufTtcclxuXHJcbnZhciBjbG9uZSA9IGV4cG9ydHMuY2xvbmUgPSBmdW5jdGlvbiAob2JqKSB7XHJcbiAgaWYgKCFvYmopIHtcclxuICAgIHJldHVybiBudWxsO1xyXG4gIH0gZWxzZSBpZiAoQXJyYXkuaXNBcnJheShvYmopKSB7XHJcbiAgICByZXR1cm4gb2JqLm1hcChjbG9uZSk7XHJcbiAgfSBlbHNlIGlmICh0eXBlb2Ygb2JqID09PSAnb2JqZWN0Jykge1xyXG4gICAgdmFyIHJlc3VsdCA9IHt9O1xyXG4gICAgZm9yICh2YXIga2V5IGluIG9iaikge1xyXG4gICAgICByZXN1bHRba2V5XSA9IGNsb25lKG9ialtrZXldKTtcclxuICAgIH1cclxuICAgIHJldHVybiByZXN1bHQ7XHJcbiAgfSBlbHNlIHtcclxuICAgIHJldHVybiBvYmo7XHJcbiAgfVxyXG59O1xyXG5cclxuZXhwb3J0cy5leHRlbmQgPSBmdW5jdGlvbiAob3JpZ2luYWwsIHNvdXJjZSkge1xyXG4gIHZhciByZXN1bHQgPSBjbG9uZShvcmlnaW5hbCk7XHJcbiAgZm9yICh2YXIga2V5IGluIHNvdXJjZSkge1xyXG4gICAgcmVzdWx0W2tleV0gPSBjbG9uZShzb3VyY2Vba2V5XSk7XHJcbiAgfVxyXG4gIHJldHVybiByZXN1bHQ7XHJcbn07XHJcblxyXG5leHBvcnRzLmlzRWRpdGFibGUgPSBmdW5jdGlvbiAoZWwpIHtcclxuICByZXR1cm4gZG9tLm1hdGNoZXMoZWwsIFwiaW5wdXQsW2NvbnRlbnRlZGl0YWJsZV1cIikgfHxcclxuICAgICAgICAgZG9tLm1hdGNoZXMoZWwsIFwic2VsZWN0LFtjb250ZW50ZWRpdGFibGVdXCIpIHx8XHJcbiAgICAgICAgIGRvbS5tYXRjaGVzKGVsLCBcInRleHRhcmVhLFtjb250ZW50ZWRpdGFibGVdXCIpIHx8XHJcbiAgICAgICAgIGRvbS5tYXRjaGVzKGVsLCBcImJ1dHRvbixbY29udGVudGVkaXRhYmxlXVwiKTtcclxufTtcclxuXHJcbmV4cG9ydHMucmVtb3ZlUHNDbGFzc2VzID0gZnVuY3Rpb24gKGVsZW1lbnQpIHtcclxuICB2YXIgY2xzTGlzdCA9IGNscy5saXN0KGVsZW1lbnQpO1xyXG4gIGZvciAodmFyIGkgPSAwOyBpIDwgY2xzTGlzdC5sZW5ndGg7IGkrKykge1xyXG4gICAgdmFyIGNsYXNzTmFtZSA9IGNsc0xpc3RbaV07XHJcbiAgICBpZiAoY2xhc3NOYW1lLmluZGV4T2YoJ3BzLScpID09PSAwKSB7XHJcbiAgICAgIGNscy5yZW1vdmUoZWxlbWVudCwgY2xhc3NOYW1lKTtcclxuICAgIH1cclxuICB9XHJcbn07XHJcblxyXG5leHBvcnRzLm91dGVyV2lkdGggPSBmdW5jdGlvbiAoZWxlbWVudCkge1xyXG4gIHJldHVybiB0b0ludChkb20uY3NzKGVsZW1lbnQsICd3aWR0aCcpKSArXHJcbiAgICAgICAgIHRvSW50KGRvbS5jc3MoZWxlbWVudCwgJ3BhZGRpbmdMZWZ0JykpICtcclxuICAgICAgICAgdG9JbnQoZG9tLmNzcyhlbGVtZW50LCAncGFkZGluZ1JpZ2h0JykpICtcclxuICAgICAgICAgdG9JbnQoZG9tLmNzcyhlbGVtZW50LCAnYm9yZGVyTGVmdFdpZHRoJykpICtcclxuICAgICAgICAgdG9JbnQoZG9tLmNzcyhlbGVtZW50LCAnYm9yZGVyUmlnaHRXaWR0aCcpKTtcclxufTtcclxuXHJcbmV4cG9ydHMuc3RhcnRTY3JvbGxpbmcgPSBmdW5jdGlvbiAoZWxlbWVudCwgYXhpcykge1xyXG4gIGNscy5hZGQoZWxlbWVudCwgJ3BzLWluLXNjcm9sbGluZycpO1xyXG4gIGlmICh0eXBlb2YgYXhpcyAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgIGNscy5hZGQoZWxlbWVudCwgJ3BzLScgKyBheGlzKTtcclxuICB9IGVsc2Uge1xyXG4gICAgY2xzLmFkZChlbGVtZW50LCAncHMteCcpO1xyXG4gICAgY2xzLmFkZChlbGVtZW50LCAncHMteScpO1xyXG4gIH1cclxufTtcclxuXHJcbmV4cG9ydHMuc3RvcFNjcm9sbGluZyA9IGZ1bmN0aW9uIChlbGVtZW50LCBheGlzKSB7XHJcbiAgY2xzLnJlbW92ZShlbGVtZW50LCAncHMtaW4tc2Nyb2xsaW5nJyk7XHJcbiAgaWYgKHR5cGVvZiBheGlzICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgY2xzLnJlbW92ZShlbGVtZW50LCAncHMtJyArIGF4aXMpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBjbHMucmVtb3ZlKGVsZW1lbnQsICdwcy14Jyk7XHJcbiAgICBjbHMucmVtb3ZlKGVsZW1lbnQsICdwcy15Jyk7XHJcbiAgfVxyXG59O1xyXG5cclxuZXhwb3J0cy5lbnYgPSB7XHJcbiAgaXNXZWJLaXQ6ICdXZWJraXRBcHBlYXJhbmNlJyBpbiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnQuc3R5bGUsXHJcbiAgc3VwcG9ydHNUb3VjaDogKCgnb250b3VjaHN0YXJ0JyBpbiB3aW5kb3cpIHx8IHdpbmRvdy5Eb2N1bWVudFRvdWNoICYmIGRvY3VtZW50IGluc3RhbmNlb2Ygd2luZG93LkRvY3VtZW50VG91Y2gpLFxyXG4gIHN1cHBvcnRzSWVQb2ludGVyOiB3aW5kb3cubmF2aWdhdG9yLm1zTWF4VG91Y2hQb2ludHMgIT09IG51bGxcclxufTtcclxuXG59LHtcIi4vY2xhc3NcIjoyLFwiLi9kb21cIjozfV0sNzpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XHJcblxyXG52YXIgZGVzdHJveSA9IHJlcXVpcmUoJy4vcGx1Z2luL2Rlc3Ryb3knKTtcclxudmFyIGluaXRpYWxpemUgPSByZXF1aXJlKCcuL3BsdWdpbi9pbml0aWFsaXplJyk7XHJcbnZhciB1cGRhdGUgPSByZXF1aXJlKCcuL3BsdWdpbi91cGRhdGUnKTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0ge1xyXG4gIGluaXRpYWxpemU6IGluaXRpYWxpemUsXHJcbiAgdXBkYXRlOiB1cGRhdGUsXHJcbiAgZGVzdHJveTogZGVzdHJveVxyXG59O1xyXG5cbn0se1wiLi9wbHVnaW4vZGVzdHJveVwiOjksXCIuL3BsdWdpbi9pbml0aWFsaXplXCI6MTcsXCIuL3BsdWdpbi91cGRhdGVcIjoyMX1dLDg6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSB7XHJcbiAgaGFuZGxlcnM6IFsnY2xpY2stcmFpbCcsICdkcmFnLXNjcm9sbGJhcicsICdrZXlib2FyZCcsICd3aGVlbCcsICd0b3VjaCddLFxyXG4gIG1heFNjcm9sbGJhckxlbmd0aDogbnVsbCxcclxuICBtaW5TY3JvbGxiYXJMZW5ndGg6IG51bGwsXHJcbiAgc2Nyb2xsWE1hcmdpbk9mZnNldDogMCxcclxuICBzY3JvbGxZTWFyZ2luT2Zmc2V0OiAwLFxyXG4gIHN1cHByZXNzU2Nyb2xsWDogZmFsc2UsXHJcbiAgc3VwcHJlc3NTY3JvbGxZOiBmYWxzZSxcclxuICBzd2lwZVByb3BhZ2F0aW9uOiB0cnVlLFxyXG4gIHVzZUJvdGhXaGVlbEF4ZXM6IGZhbHNlLFxyXG4gIHdoZWVsUHJvcGFnYXRpb246IGZhbHNlLFxyXG4gIHdoZWVsU3BlZWQ6IDEsXHJcbiAgdGhlbWU6ICdkZWZhdWx0J1xyXG59O1xyXG5cbn0se31dLDk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xyXG5cclxudmFyIF8gPSByZXF1aXJlKCcuLi9saWIvaGVscGVyJyk7XHJcbnZhciBkb20gPSByZXF1aXJlKCcuLi9saWIvZG9tJyk7XHJcbnZhciBpbnN0YW5jZXMgPSByZXF1aXJlKCcuL2luc3RhbmNlcycpO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZWxlbWVudCkge1xyXG4gIHZhciBpID0gaW5zdGFuY2VzLmdldChlbGVtZW50KTtcclxuXHJcbiAgaWYgKCFpKSB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICBpLmV2ZW50LnVuYmluZEFsbCgpO1xyXG4gIGRvbS5yZW1vdmUoaS5zY3JvbGxiYXJYKTtcclxuICBkb20ucmVtb3ZlKGkuc2Nyb2xsYmFyWSk7XHJcbiAgZG9tLnJlbW92ZShpLnNjcm9sbGJhclhSYWlsKTtcclxuICBkb20ucmVtb3ZlKGkuc2Nyb2xsYmFyWVJhaWwpO1xyXG4gIF8ucmVtb3ZlUHNDbGFzc2VzKGVsZW1lbnQpO1xyXG5cclxuICBpbnN0YW5jZXMucmVtb3ZlKGVsZW1lbnQpO1xyXG59O1xyXG5cbn0se1wiLi4vbGliL2RvbVwiOjMsXCIuLi9saWIvaGVscGVyXCI6NixcIi4vaW5zdGFuY2VzXCI6MTh9XSwxMDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XHJcblxyXG52YXIgaW5zdGFuY2VzID0gcmVxdWlyZSgnLi4vaW5zdGFuY2VzJyk7XHJcbnZhciB1cGRhdGVHZW9tZXRyeSA9IHJlcXVpcmUoJy4uL3VwZGF0ZS1nZW9tZXRyeScpO1xyXG52YXIgdXBkYXRlU2Nyb2xsID0gcmVxdWlyZSgnLi4vdXBkYXRlLXNjcm9sbCcpO1xyXG5cclxuZnVuY3Rpb24gYmluZENsaWNrUmFpbEhhbmRsZXIoZWxlbWVudCwgaSkge1xyXG4gIGZ1bmN0aW9uIHBhZ2VPZmZzZXQoZWwpIHtcclxuICAgIHJldHVybiBlbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuICB9XHJcbiAgdmFyIHN0b3BQcm9wYWdhdGlvbiA9IGZ1bmN0aW9uIChlKSB7IGUuc3RvcFByb3BhZ2F0aW9uKCk7IH07XHJcblxyXG4gIGkuZXZlbnQuYmluZChpLnNjcm9sbGJhclksICdjbGljaycsIHN0b3BQcm9wYWdhdGlvbik7XHJcbiAgaS5ldmVudC5iaW5kKGkuc2Nyb2xsYmFyWVJhaWwsICdjbGljaycsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICB2YXIgcG9zaXRpb25Ub3AgPSBlLnBhZ2VZIC0gd2luZG93LnBhZ2VZT2Zmc2V0IC0gcGFnZU9mZnNldChpLnNjcm9sbGJhcllSYWlsKS50b3A7XHJcbiAgICB2YXIgZGlyZWN0aW9uID0gcG9zaXRpb25Ub3AgPiBpLnNjcm9sbGJhcllUb3AgPyAxIDogLTE7XHJcblxyXG4gICAgdXBkYXRlU2Nyb2xsKGVsZW1lbnQsICd0b3AnLCBlbGVtZW50LnNjcm9sbFRvcCArIGRpcmVjdGlvbiAqIGkuY29udGFpbmVySGVpZ2h0KTtcclxuICAgIHVwZGF0ZUdlb21ldHJ5KGVsZW1lbnQpO1xyXG5cclxuICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgfSk7XHJcblxyXG4gIGkuZXZlbnQuYmluZChpLnNjcm9sbGJhclgsICdjbGljaycsIHN0b3BQcm9wYWdhdGlvbik7XHJcbiAgaS5ldmVudC5iaW5kKGkuc2Nyb2xsYmFyWFJhaWwsICdjbGljaycsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICB2YXIgcG9zaXRpb25MZWZ0ID0gZS5wYWdlWCAtIHdpbmRvdy5wYWdlWE9mZnNldCAtIHBhZ2VPZmZzZXQoaS5zY3JvbGxiYXJYUmFpbCkubGVmdDtcclxuICAgIHZhciBkaXJlY3Rpb24gPSBwb3NpdGlvbkxlZnQgPiBpLnNjcm9sbGJhclhMZWZ0ID8gMSA6IC0xO1xyXG5cclxuICAgIHVwZGF0ZVNjcm9sbChlbGVtZW50LCAnbGVmdCcsIGVsZW1lbnQuc2Nyb2xsTGVmdCArIGRpcmVjdGlvbiAqIGkuY29udGFpbmVyV2lkdGgpO1xyXG4gICAgdXBkYXRlR2VvbWV0cnkoZWxlbWVudCk7XHJcblxyXG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcclxuICB9KTtcclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZWxlbWVudCkge1xyXG4gIHZhciBpID0gaW5zdGFuY2VzLmdldChlbGVtZW50KTtcclxuICBiaW5kQ2xpY2tSYWlsSGFuZGxlcihlbGVtZW50LCBpKTtcclxufTtcclxuXG59LHtcIi4uL2luc3RhbmNlc1wiOjE4LFwiLi4vdXBkYXRlLWdlb21ldHJ5XCI6MTksXCIuLi91cGRhdGUtc2Nyb2xsXCI6MjB9XSwxMTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XHJcblxyXG52YXIgXyA9IHJlcXVpcmUoJy4uLy4uL2xpYi9oZWxwZXInKTtcclxudmFyIGRvbSA9IHJlcXVpcmUoJy4uLy4uL2xpYi9kb20nKTtcclxudmFyIGluc3RhbmNlcyA9IHJlcXVpcmUoJy4uL2luc3RhbmNlcycpO1xyXG52YXIgdXBkYXRlR2VvbWV0cnkgPSByZXF1aXJlKCcuLi91cGRhdGUtZ2VvbWV0cnknKTtcclxudmFyIHVwZGF0ZVNjcm9sbCA9IHJlcXVpcmUoJy4uL3VwZGF0ZS1zY3JvbGwnKTtcclxuXHJcbmZ1bmN0aW9uIGJpbmRNb3VzZVNjcm9sbFhIYW5kbGVyKGVsZW1lbnQsIGkpIHtcclxuICB2YXIgY3VycmVudExlZnQgPSBudWxsO1xyXG4gIHZhciBjdXJyZW50UGFnZVggPSBudWxsO1xyXG5cclxuICBmdW5jdGlvbiB1cGRhdGVTY3JvbGxMZWZ0KGRlbHRhWCkge1xyXG4gICAgdmFyIG5ld0xlZnQgPSBjdXJyZW50TGVmdCArIChkZWx0YVggKiBpLnJhaWxYUmF0aW8pO1xyXG4gICAgdmFyIG1heExlZnQgPSBNYXRoLm1heCgwLCBpLnNjcm9sbGJhclhSYWlsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQpICsgKGkucmFpbFhSYXRpbyAqIChpLnJhaWxYV2lkdGggLSBpLnNjcm9sbGJhclhXaWR0aCkpO1xyXG5cclxuICAgIGlmIChuZXdMZWZ0IDwgMCkge1xyXG4gICAgICBpLnNjcm9sbGJhclhMZWZ0ID0gMDtcclxuICAgIH0gZWxzZSBpZiAobmV3TGVmdCA+IG1heExlZnQpIHtcclxuICAgICAgaS5zY3JvbGxiYXJYTGVmdCA9IG1heExlZnQ7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBpLnNjcm9sbGJhclhMZWZ0ID0gbmV3TGVmdDtcclxuICAgIH1cclxuXHJcbiAgICB2YXIgc2Nyb2xsTGVmdCA9IF8udG9JbnQoaS5zY3JvbGxiYXJYTGVmdCAqIChpLmNvbnRlbnRXaWR0aCAtIGkuY29udGFpbmVyV2lkdGgpIC8gKGkuY29udGFpbmVyV2lkdGggLSAoaS5yYWlsWFJhdGlvICogaS5zY3JvbGxiYXJYV2lkdGgpKSkgLSBpLm5lZ2F0aXZlU2Nyb2xsQWRqdXN0bWVudDtcclxuICAgIHVwZGF0ZVNjcm9sbChlbGVtZW50LCAnbGVmdCcsIHNjcm9sbExlZnQpO1xyXG4gIH1cclxuXHJcbiAgdmFyIG1vdXNlTW92ZUhhbmRsZXIgPSBmdW5jdGlvbiAoZSkge1xyXG4gICAgdXBkYXRlU2Nyb2xsTGVmdChlLnBhZ2VYIC0gY3VycmVudFBhZ2VYKTtcclxuICAgIHVwZGF0ZUdlb21ldHJ5KGVsZW1lbnQpO1xyXG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICB9O1xyXG5cclxuICB2YXIgbW91c2VVcEhhbmRsZXIgPSBmdW5jdGlvbiAoKSB7XHJcbiAgICBfLnN0b3BTY3JvbGxpbmcoZWxlbWVudCwgJ3gnKTtcclxuICAgIGkuZXZlbnQudW5iaW5kKGkub3duZXJEb2N1bWVudCwgJ21vdXNlbW92ZScsIG1vdXNlTW92ZUhhbmRsZXIpO1xyXG4gIH07XHJcblxyXG4gIGkuZXZlbnQuYmluZChpLnNjcm9sbGJhclgsICdtb3VzZWRvd24nLCBmdW5jdGlvbiAoZSkge1xyXG4gICAgY3VycmVudFBhZ2VYID0gZS5wYWdlWDtcclxuICAgIGN1cnJlbnRMZWZ0ID0gXy50b0ludChkb20uY3NzKGkuc2Nyb2xsYmFyWCwgJ2xlZnQnKSkgKiBpLnJhaWxYUmF0aW87XHJcbiAgICBfLnN0YXJ0U2Nyb2xsaW5nKGVsZW1lbnQsICd4Jyk7XHJcblxyXG4gICAgaS5ldmVudC5iaW5kKGkub3duZXJEb2N1bWVudCwgJ21vdXNlbW92ZScsIG1vdXNlTW92ZUhhbmRsZXIpO1xyXG4gICAgaS5ldmVudC5vbmNlKGkub3duZXJEb2N1bWVudCwgJ21vdXNldXAnLCBtb3VzZVVwSGFuZGxlcik7XHJcblxyXG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICB9KTtcclxufVxyXG5cclxuZnVuY3Rpb24gYmluZE1vdXNlU2Nyb2xsWUhhbmRsZXIoZWxlbWVudCwgaSkge1xyXG4gIHZhciBjdXJyZW50VG9wID0gbnVsbDtcclxuICB2YXIgY3VycmVudFBhZ2VZID0gbnVsbDtcclxuXHJcbiAgZnVuY3Rpb24gdXBkYXRlU2Nyb2xsVG9wKGRlbHRhWSkge1xyXG4gICAgdmFyIG5ld1RvcCA9IGN1cnJlbnRUb3AgKyAoZGVsdGFZICogaS5yYWlsWVJhdGlvKTtcclxuICAgIHZhciBtYXhUb3AgPSBNYXRoLm1heCgwLCBpLnNjcm9sbGJhcllSYWlsLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcCkgKyAoaS5yYWlsWVJhdGlvICogKGkucmFpbFlIZWlnaHQgLSBpLnNjcm9sbGJhcllIZWlnaHQpKTtcclxuXHJcbiAgICBpZiAobmV3VG9wIDwgMCkge1xyXG4gICAgICBpLnNjcm9sbGJhcllUb3AgPSAwO1xyXG4gICAgfSBlbHNlIGlmIChuZXdUb3AgPiBtYXhUb3ApIHtcclxuICAgICAgaS5zY3JvbGxiYXJZVG9wID0gbWF4VG9wO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgaS5zY3JvbGxiYXJZVG9wID0gbmV3VG9wO1xyXG4gICAgfVxyXG5cclxuICAgIHZhciBzY3JvbGxUb3AgPSBfLnRvSW50KGkuc2Nyb2xsYmFyWVRvcCAqIChpLmNvbnRlbnRIZWlnaHQgLSBpLmNvbnRhaW5lckhlaWdodCkgLyAoaS5jb250YWluZXJIZWlnaHQgLSAoaS5yYWlsWVJhdGlvICogaS5zY3JvbGxiYXJZSGVpZ2h0KSkpO1xyXG4gICAgdXBkYXRlU2Nyb2xsKGVsZW1lbnQsICd0b3AnLCBzY3JvbGxUb3ApO1xyXG4gIH1cclxuXHJcbiAgdmFyIG1vdXNlTW92ZUhhbmRsZXIgPSBmdW5jdGlvbiAoZSkge1xyXG4gICAgdXBkYXRlU2Nyb2xsVG9wKGUucGFnZVkgLSBjdXJyZW50UGFnZVkpO1xyXG4gICAgdXBkYXRlR2VvbWV0cnkoZWxlbWVudCk7XHJcbiAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gIH07XHJcblxyXG4gIHZhciBtb3VzZVVwSGFuZGxlciA9IGZ1bmN0aW9uICgpIHtcclxuICAgIF8uc3RvcFNjcm9sbGluZyhlbGVtZW50LCAneScpO1xyXG4gICAgaS5ldmVudC51bmJpbmQoaS5vd25lckRvY3VtZW50LCAnbW91c2Vtb3ZlJywgbW91c2VNb3ZlSGFuZGxlcik7XHJcbiAgfTtcclxuXHJcbiAgaS5ldmVudC5iaW5kKGkuc2Nyb2xsYmFyWSwgJ21vdXNlZG93bicsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICBjdXJyZW50UGFnZVkgPSBlLnBhZ2VZO1xyXG4gICAgY3VycmVudFRvcCA9IF8udG9JbnQoZG9tLmNzcyhpLnNjcm9sbGJhclksICd0b3AnKSkgKiBpLnJhaWxZUmF0aW87XHJcbiAgICBfLnN0YXJ0U2Nyb2xsaW5nKGVsZW1lbnQsICd5Jyk7XHJcblxyXG4gICAgaS5ldmVudC5iaW5kKGkub3duZXJEb2N1bWVudCwgJ21vdXNlbW92ZScsIG1vdXNlTW92ZUhhbmRsZXIpO1xyXG4gICAgaS5ldmVudC5vbmNlKGkub3duZXJEb2N1bWVudCwgJ21vdXNldXAnLCBtb3VzZVVwSGFuZGxlcik7XHJcblxyXG4gICAgZS5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgIGUucHJldmVudERlZmF1bHQoKTtcclxuICB9KTtcclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZWxlbWVudCkge1xyXG4gIHZhciBpID0gaW5zdGFuY2VzLmdldChlbGVtZW50KTtcclxuICBiaW5kTW91c2VTY3JvbGxYSGFuZGxlcihlbGVtZW50LCBpKTtcclxuICBiaW5kTW91c2VTY3JvbGxZSGFuZGxlcihlbGVtZW50LCBpKTtcclxufTtcclxuXG59LHtcIi4uLy4uL2xpYi9kb21cIjozLFwiLi4vLi4vbGliL2hlbHBlclwiOjYsXCIuLi9pbnN0YW5jZXNcIjoxOCxcIi4uL3VwZGF0ZS1nZW9tZXRyeVwiOjE5LFwiLi4vdXBkYXRlLXNjcm9sbFwiOjIwfV0sMTI6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xyXG5cclxudmFyIF8gPSByZXF1aXJlKCcuLi8uLi9saWIvaGVscGVyJyk7XHJcbnZhciBkb20gPSByZXF1aXJlKCcuLi8uLi9saWIvZG9tJyk7XHJcbnZhciBpbnN0YW5jZXMgPSByZXF1aXJlKCcuLi9pbnN0YW5jZXMnKTtcclxudmFyIHVwZGF0ZUdlb21ldHJ5ID0gcmVxdWlyZSgnLi4vdXBkYXRlLWdlb21ldHJ5Jyk7XHJcbnZhciB1cGRhdGVTY3JvbGwgPSByZXF1aXJlKCcuLi91cGRhdGUtc2Nyb2xsJyk7XHJcblxyXG5mdW5jdGlvbiBiaW5kS2V5Ym9hcmRIYW5kbGVyKGVsZW1lbnQsIGkpIHtcclxuICB2YXIgaG92ZXJlZCA9IGZhbHNlO1xyXG4gIGkuZXZlbnQuYmluZChlbGVtZW50LCAnbW91c2VlbnRlcicsIGZ1bmN0aW9uICgpIHtcclxuICAgIGhvdmVyZWQgPSB0cnVlO1xyXG4gIH0pO1xyXG4gIGkuZXZlbnQuYmluZChlbGVtZW50LCAnbW91c2VsZWF2ZScsIGZ1bmN0aW9uICgpIHtcclxuICAgIGhvdmVyZWQgPSBmYWxzZTtcclxuICB9KTtcclxuXHJcbiAgdmFyIHNob3VsZFByZXZlbnQgPSBmYWxzZTtcclxuICBmdW5jdGlvbiBzaG91bGRQcmV2ZW50RGVmYXVsdChkZWx0YVgsIGRlbHRhWSkge1xyXG4gICAgdmFyIHNjcm9sbFRvcCA9IGVsZW1lbnQuc2Nyb2xsVG9wO1xyXG4gICAgaWYgKGRlbHRhWCA9PT0gMCkge1xyXG4gICAgICBpZiAoIWkuc2Nyb2xsYmFyWUFjdGl2ZSkge1xyXG4gICAgICAgIHJldHVybiBmYWxzZTtcclxuICAgICAgfVxyXG4gICAgICBpZiAoKHNjcm9sbFRvcCA9PT0gMCAmJiBkZWx0YVkgPiAwKSB8fCAoc2Nyb2xsVG9wID49IGkuY29udGVudEhlaWdodCAtIGkuY29udGFpbmVySGVpZ2h0ICYmIGRlbHRhWSA8IDApKSB7XHJcbiAgICAgICAgcmV0dXJuICFpLnNldHRpbmdzLndoZWVsUHJvcGFnYXRpb247XHJcbiAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICB2YXIgc2Nyb2xsTGVmdCA9IGVsZW1lbnQuc2Nyb2xsTGVmdDtcclxuICAgIGlmIChkZWx0YVkgPT09IDApIHtcclxuICAgICAgaWYgKCFpLnNjcm9sbGJhclhBY3RpdmUpIHtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKChzY3JvbGxMZWZ0ID09PSAwICYmIGRlbHRhWCA8IDApIHx8IChzY3JvbGxMZWZ0ID49IGkuY29udGVudFdpZHRoIC0gaS5jb250YWluZXJXaWR0aCAmJiBkZWx0YVggPiAwKSkge1xyXG4gICAgICAgIHJldHVybiAhaS5zZXR0aW5ncy53aGVlbFByb3BhZ2F0aW9uO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gdHJ1ZTtcclxuICB9XHJcblxyXG4gIGkuZXZlbnQuYmluZChpLm93bmVyRG9jdW1lbnQsICdrZXlkb3duJywgZnVuY3Rpb24gKGUpIHtcclxuICAgIGlmICgoZS5pc0RlZmF1bHRQcmV2ZW50ZWQgJiYgZS5pc0RlZmF1bHRQcmV2ZW50ZWQoKSkgfHwgZS5kZWZhdWx0UHJldmVudGVkKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICB2YXIgZm9jdXNlZCA9IGRvbS5tYXRjaGVzKGkuc2Nyb2xsYmFyWCwgJzpmb2N1cycpIHx8XHJcbiAgICAgICAgICAgICAgICAgIGRvbS5tYXRjaGVzKGkuc2Nyb2xsYmFyWSwgJzpmb2N1cycpO1xyXG5cclxuICAgIGlmICghaG92ZXJlZCAmJiAhZm9jdXNlZCkge1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcblxyXG4gICAgdmFyIGFjdGl2ZUVsZW1lbnQgPSBkb2N1bWVudC5hY3RpdmVFbGVtZW50ID8gZG9jdW1lbnQuYWN0aXZlRWxlbWVudCA6IGkub3duZXJEb2N1bWVudC5hY3RpdmVFbGVtZW50O1xyXG4gICAgaWYgKGFjdGl2ZUVsZW1lbnQpIHtcclxuICAgICAgaWYgKGFjdGl2ZUVsZW1lbnQudGFnTmFtZSA9PT0gJ0lGUkFNRScpIHtcclxuICAgICAgICBhY3RpdmVFbGVtZW50ID0gYWN0aXZlRWxlbWVudC5jb250ZW50RG9jdW1lbnQuYWN0aXZlRWxlbWVudDtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICAvLyBnbyBkZWVwZXIgaWYgZWxlbWVudCBpcyBhIHdlYmNvbXBvbmVudFxyXG4gICAgICAgIHdoaWxlIChhY3RpdmVFbGVtZW50LnNoYWRvd1Jvb3QpIHtcclxuICAgICAgICAgIGFjdGl2ZUVsZW1lbnQgPSBhY3RpdmVFbGVtZW50LnNoYWRvd1Jvb3QuYWN0aXZlRWxlbWVudDtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgICAgaWYgKF8uaXNFZGl0YWJsZShhY3RpdmVFbGVtZW50KSkge1xyXG4gICAgICAgIHJldHVybjtcclxuICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHZhciBkZWx0YVggPSAwO1xyXG4gICAgdmFyIGRlbHRhWSA9IDA7XHJcblxyXG4gICAgc3dpdGNoIChlLndoaWNoKSB7XHJcbiAgICBjYXNlIDM3OiAvLyBsZWZ0XHJcbiAgICAgIGlmIChlLm1ldGFLZXkpIHtcclxuICAgICAgICBkZWx0YVggPSAtaS5jb250ZW50V2lkdGg7XHJcbiAgICAgIH0gZWxzZSBpZiAoZS5hbHRLZXkpIHtcclxuICAgICAgICBkZWx0YVggPSAtaS5jb250YWluZXJXaWR0aDtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBkZWx0YVggPSAtMzA7XHJcbiAgICAgIH1cclxuICAgICAgYnJlYWs7XHJcbiAgICBjYXNlIDM4OiAvLyB1cFxyXG4gICAgICBpZiAoZS5tZXRhS2V5KSB7XHJcbiAgICAgICAgZGVsdGFZID0gaS5jb250ZW50SGVpZ2h0O1xyXG4gICAgICB9IGVsc2UgaWYgKGUuYWx0S2V5KSB7XHJcbiAgICAgICAgZGVsdGFZID0gaS5jb250YWluZXJIZWlnaHQ7XHJcbiAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgZGVsdGFZID0gMzA7XHJcbiAgICAgIH1cclxuICAgICAgYnJlYWs7XHJcbiAgICBjYXNlIDM5OiAvLyByaWdodFxyXG4gICAgICBpZiAoZS5tZXRhS2V5KSB7XHJcbiAgICAgICAgZGVsdGFYID0gaS5jb250ZW50V2lkdGg7XHJcbiAgICAgIH0gZWxzZSBpZiAoZS5hbHRLZXkpIHtcclxuICAgICAgICBkZWx0YVggPSBpLmNvbnRhaW5lcldpZHRoO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGRlbHRhWCA9IDMwO1xyXG4gICAgICB9XHJcbiAgICAgIGJyZWFrO1xyXG4gICAgY2FzZSA0MDogLy8gZG93blxyXG4gICAgICBpZiAoZS5tZXRhS2V5KSB7XHJcbiAgICAgICAgZGVsdGFZID0gLWkuY29udGVudEhlaWdodDtcclxuICAgICAgfSBlbHNlIGlmIChlLmFsdEtleSkge1xyXG4gICAgICAgIGRlbHRhWSA9IC1pLmNvbnRhaW5lckhlaWdodDtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBkZWx0YVkgPSAtMzA7XHJcbiAgICAgIH1cclxuICAgICAgYnJlYWs7XHJcbiAgICBjYXNlIDMzOiAvLyBwYWdlIHVwXHJcbiAgICAgIGRlbHRhWSA9IDkwO1xyXG4gICAgICBicmVhaztcclxuICAgIGNhc2UgMzI6IC8vIHNwYWNlIGJhclxyXG4gICAgICBpZiAoZS5zaGlmdEtleSkge1xyXG4gICAgICAgIGRlbHRhWSA9IDkwO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGRlbHRhWSA9IC05MDtcclxuICAgICAgfVxyXG4gICAgICBicmVhaztcclxuICAgIGNhc2UgMzQ6IC8vIHBhZ2UgZG93blxyXG4gICAgICBkZWx0YVkgPSAtOTA7XHJcbiAgICAgIGJyZWFrO1xyXG4gICAgY2FzZSAzNTogLy8gZW5kXHJcbiAgICAgIGlmIChlLmN0cmxLZXkpIHtcclxuICAgICAgICBkZWx0YVkgPSAtaS5jb250ZW50SGVpZ2h0O1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGRlbHRhWSA9IC1pLmNvbnRhaW5lckhlaWdodDtcclxuICAgICAgfVxyXG4gICAgICBicmVhaztcclxuICAgIGNhc2UgMzY6IC8vIGhvbWVcclxuICAgICAgaWYgKGUuY3RybEtleSkge1xyXG4gICAgICAgIGRlbHRhWSA9IGVsZW1lbnQuc2Nyb2xsVG9wO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIGRlbHRhWSA9IGkuY29udGFpbmVySGVpZ2h0O1xyXG4gICAgICB9XHJcbiAgICAgIGJyZWFrO1xyXG4gICAgZGVmYXVsdDpcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIHVwZGF0ZVNjcm9sbChlbGVtZW50LCAndG9wJywgZWxlbWVudC5zY3JvbGxUb3AgLSBkZWx0YVkpO1xyXG4gICAgdXBkYXRlU2Nyb2xsKGVsZW1lbnQsICdsZWZ0JywgZWxlbWVudC5zY3JvbGxMZWZ0ICsgZGVsdGFYKTtcclxuICAgIHVwZGF0ZUdlb21ldHJ5KGVsZW1lbnQpO1xyXG5cclxuICAgIHNob3VsZFByZXZlbnQgPSBzaG91bGRQcmV2ZW50RGVmYXVsdChkZWx0YVgsIGRlbHRhWSk7XHJcbiAgICBpZiAoc2hvdWxkUHJldmVudCkge1xyXG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICB9XHJcbiAgfSk7XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGVsZW1lbnQpIHtcclxuICB2YXIgaSA9IGluc3RhbmNlcy5nZXQoZWxlbWVudCk7XHJcbiAgYmluZEtleWJvYXJkSGFuZGxlcihlbGVtZW50LCBpKTtcclxufTtcclxuXG59LHtcIi4uLy4uL2xpYi9kb21cIjozLFwiLi4vLi4vbGliL2hlbHBlclwiOjYsXCIuLi9pbnN0YW5jZXNcIjoxOCxcIi4uL3VwZGF0ZS1nZW9tZXRyeVwiOjE5LFwiLi4vdXBkYXRlLXNjcm9sbFwiOjIwfV0sMTM6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xyXG5cclxudmFyIGluc3RhbmNlcyA9IHJlcXVpcmUoJy4uL2luc3RhbmNlcycpO1xyXG52YXIgdXBkYXRlR2VvbWV0cnkgPSByZXF1aXJlKCcuLi91cGRhdGUtZ2VvbWV0cnknKTtcclxudmFyIHVwZGF0ZVNjcm9sbCA9IHJlcXVpcmUoJy4uL3VwZGF0ZS1zY3JvbGwnKTtcclxuXHJcbmZ1bmN0aW9uIGJpbmRNb3VzZVdoZWVsSGFuZGxlcihlbGVtZW50LCBpKSB7XHJcbiAgdmFyIHNob3VsZFByZXZlbnQgPSBmYWxzZTtcclxuXHJcbiAgZnVuY3Rpb24gc2hvdWxkUHJldmVudERlZmF1bHQoZGVsdGFYLCBkZWx0YVkpIHtcclxuICAgIHZhciBzY3JvbGxUb3AgPSBlbGVtZW50LnNjcm9sbFRvcDtcclxuICAgIGlmIChkZWx0YVggPT09IDApIHtcclxuICAgICAgaWYgKCFpLnNjcm9sbGJhcllBY3RpdmUpIHtcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgIH1cclxuICAgICAgaWYgKChzY3JvbGxUb3AgPT09IDAgJiYgZGVsdGFZID4gMCkgfHwgKHNjcm9sbFRvcCA+PSBpLmNvbnRlbnRIZWlnaHQgLSBpLmNvbnRhaW5lckhlaWdodCAmJiBkZWx0YVkgPCAwKSkge1xyXG4gICAgICAgIHJldHVybiAhaS5zZXR0aW5ncy53aGVlbFByb3BhZ2F0aW9uO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgdmFyIHNjcm9sbExlZnQgPSBlbGVtZW50LnNjcm9sbExlZnQ7XHJcbiAgICBpZiAoZGVsdGFZID09PSAwKSB7XHJcbiAgICAgIGlmICghaS5zY3JvbGxiYXJYQWN0aXZlKSB7XHJcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xyXG4gICAgICB9XHJcbiAgICAgIGlmICgoc2Nyb2xsTGVmdCA9PT0gMCAmJiBkZWx0YVggPCAwKSB8fCAoc2Nyb2xsTGVmdCA+PSBpLmNvbnRlbnRXaWR0aCAtIGkuY29udGFpbmVyV2lkdGggJiYgZGVsdGFYID4gMCkpIHtcclxuICAgICAgICByZXR1cm4gIWkuc2V0dGluZ3Mud2hlZWxQcm9wYWdhdGlvbjtcclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRydWU7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBnZXREZWx0YUZyb21FdmVudChlKSB7XHJcbiAgICB2YXIgZGVsdGFYID0gZS5kZWx0YVg7XHJcbiAgICB2YXIgZGVsdGFZID0gLTEgKiBlLmRlbHRhWTtcclxuXHJcbiAgICBpZiAodHlwZW9mIGRlbHRhWCA9PT0gXCJ1bmRlZmluZWRcIiB8fCB0eXBlb2YgZGVsdGFZID09PSBcInVuZGVmaW5lZFwiKSB7XHJcbiAgICAgIC8vIE9TIFggU2FmYXJpXHJcbiAgICAgIGRlbHRhWCA9IC0xICogZS53aGVlbERlbHRhWCAvIDY7XHJcbiAgICAgIGRlbHRhWSA9IGUud2hlZWxEZWx0YVkgLyA2O1xyXG4gICAgfVxyXG5cclxuICAgIGlmIChlLmRlbHRhTW9kZSAmJiBlLmRlbHRhTW9kZSA9PT0gMSkge1xyXG4gICAgICAvLyBGaXJlZm94IGluIGRlbHRhTW9kZSAxOiBMaW5lIHNjcm9sbGluZ1xyXG4gICAgICBkZWx0YVggKj0gMTA7XHJcbiAgICAgIGRlbHRhWSAqPSAxMDtcclxuICAgIH1cclxuXHJcbiAgICBpZiAoZGVsdGFYICE9PSBkZWx0YVggJiYgZGVsdGFZICE9PSBkZWx0YVkvKiBOYU4gY2hlY2tzICovKSB7XHJcbiAgICAgIC8vIElFIGluIHNvbWUgbW91c2UgZHJpdmVyc1xyXG4gICAgICBkZWx0YVggPSAwO1xyXG4gICAgICBkZWx0YVkgPSBlLndoZWVsRGVsdGE7XHJcbiAgICB9XHJcblxyXG4gICAgaWYgKGUuc2hpZnRLZXkpIHtcclxuICAgICAgLy8gcmV2ZXJzZSBheGlzIHdpdGggc2hpZnQga2V5XHJcbiAgICAgIHJldHVybiBbLWRlbHRhWSwgLWRlbHRhWF07XHJcbiAgICB9XHJcbiAgICByZXR1cm4gW2RlbHRhWCwgZGVsdGFZXTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIHNob3VsZEJlQ29uc3VtZWRCeUNoaWxkKGRlbHRhWCwgZGVsdGFZKSB7XHJcbiAgICB2YXIgY2hpbGQgPSBlbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJ3RleHRhcmVhOmhvdmVyLCBzZWxlY3RbbXVsdGlwbGVdOmhvdmVyLCAucHMtY2hpbGQ6aG92ZXInKTtcclxuICAgIGlmIChjaGlsZCkge1xyXG4gICAgICBpZiAoIXdpbmRvdy5nZXRDb21wdXRlZFN0eWxlKGNoaWxkKS5vdmVyZmxvdy5tYXRjaCgvKHNjcm9sbHxhdXRvKS8pKSB7XHJcbiAgICAgICAgLy8gaWYgbm90IHNjcm9sbGFibGVcclxuICAgICAgICByZXR1cm4gZmFsc2U7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIHZhciBtYXhTY3JvbGxUb3AgPSBjaGlsZC5zY3JvbGxIZWlnaHQgLSBjaGlsZC5jbGllbnRIZWlnaHQ7XHJcbiAgICAgIGlmIChtYXhTY3JvbGxUb3AgPiAwKSB7XHJcbiAgICAgICAgaWYgKCEoY2hpbGQuc2Nyb2xsVG9wID09PSAwICYmIGRlbHRhWSA+IDApICYmICEoY2hpbGQuc2Nyb2xsVG9wID09PSBtYXhTY3JvbGxUb3AgJiYgZGVsdGFZIDwgMCkpIHtcclxuICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICB2YXIgbWF4U2Nyb2xsTGVmdCA9IGNoaWxkLnNjcm9sbExlZnQgLSBjaGlsZC5jbGllbnRXaWR0aDtcclxuICAgICAgaWYgKG1heFNjcm9sbExlZnQgPiAwKSB7XHJcbiAgICAgICAgaWYgKCEoY2hpbGQuc2Nyb2xsTGVmdCA9PT0gMCAmJiBkZWx0YVggPCAwKSAmJiAhKGNoaWxkLnNjcm9sbExlZnQgPT09IG1heFNjcm9sbExlZnQgJiYgZGVsdGFYID4gMCkpIHtcclxuICAgICAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH1cclxuXHJcbiAgZnVuY3Rpb24gbW91c2V3aGVlbEhhbmRsZXIoZSkge1xyXG4gICAgdmFyIGRlbHRhID0gZ2V0RGVsdGFGcm9tRXZlbnQoZSk7XHJcblxyXG4gICAgdmFyIGRlbHRhWCA9IGRlbHRhWzBdO1xyXG4gICAgdmFyIGRlbHRhWSA9IGRlbHRhWzFdO1xyXG5cclxuICAgIGlmIChzaG91bGRCZUNvbnN1bWVkQnlDaGlsZChkZWx0YVgsIGRlbHRhWSkpIHtcclxuICAgICAgcmV0dXJuO1xyXG4gICAgfVxyXG5cclxuICAgIHNob3VsZFByZXZlbnQgPSBmYWxzZTtcclxuICAgIGlmICghaS5zZXR0aW5ncy51c2VCb3RoV2hlZWxBeGVzKSB7XHJcbiAgICAgIC8vIGRlbHRhWCB3aWxsIG9ubHkgYmUgdXNlZCBmb3IgaG9yaXpvbnRhbCBzY3JvbGxpbmcgYW5kIGRlbHRhWSB3aWxsXHJcbiAgICAgIC8vIG9ubHkgYmUgdXNlZCBmb3IgdmVydGljYWwgc2Nyb2xsaW5nIC0gdGhpcyBpcyB0aGUgZGVmYXVsdFxyXG4gICAgICB1cGRhdGVTY3JvbGwoZWxlbWVudCwgJ3RvcCcsIGVsZW1lbnQuc2Nyb2xsVG9wIC0gKGRlbHRhWSAqIGkuc2V0dGluZ3Mud2hlZWxTcGVlZCkpO1xyXG4gICAgICB1cGRhdGVTY3JvbGwoZWxlbWVudCwgJ2xlZnQnLCBlbGVtZW50LnNjcm9sbExlZnQgKyAoZGVsdGFYICogaS5zZXR0aW5ncy53aGVlbFNwZWVkKSk7XHJcbiAgICB9IGVsc2UgaWYgKGkuc2Nyb2xsYmFyWUFjdGl2ZSAmJiAhaS5zY3JvbGxiYXJYQWN0aXZlKSB7XHJcbiAgICAgIC8vIG9ubHkgdmVydGljYWwgc2Nyb2xsYmFyIGlzIGFjdGl2ZSBhbmQgdXNlQm90aFdoZWVsQXhlcyBvcHRpb24gaXNcclxuICAgICAgLy8gYWN0aXZlLCBzbyBsZXQncyBzY3JvbGwgdmVydGljYWwgYmFyIHVzaW5nIGJvdGggbW91c2Ugd2hlZWwgYXhlc1xyXG4gICAgICBpZiAoZGVsdGFZKSB7XHJcbiAgICAgICAgdXBkYXRlU2Nyb2xsKGVsZW1lbnQsICd0b3AnLCBlbGVtZW50LnNjcm9sbFRvcCAtIChkZWx0YVkgKiBpLnNldHRpbmdzLndoZWVsU3BlZWQpKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB1cGRhdGVTY3JvbGwoZWxlbWVudCwgJ3RvcCcsIGVsZW1lbnQuc2Nyb2xsVG9wICsgKGRlbHRhWCAqIGkuc2V0dGluZ3Mud2hlZWxTcGVlZCkpO1xyXG4gICAgICB9XHJcbiAgICAgIHNob3VsZFByZXZlbnQgPSB0cnVlO1xyXG4gICAgfSBlbHNlIGlmIChpLnNjcm9sbGJhclhBY3RpdmUgJiYgIWkuc2Nyb2xsYmFyWUFjdGl2ZSkge1xyXG4gICAgICAvLyB1c2VCb3RoV2hlZWxBeGVzIGFuZCBvbmx5IGhvcml6b250YWwgYmFyIGlzIGFjdGl2ZSwgc28gdXNlIGJvdGhcclxuICAgICAgLy8gd2hlZWwgYXhlcyBmb3IgaG9yaXpvbnRhbCBiYXJcclxuICAgICAgaWYgKGRlbHRhWCkge1xyXG4gICAgICAgIHVwZGF0ZVNjcm9sbChlbGVtZW50LCAnbGVmdCcsIGVsZW1lbnQuc2Nyb2xsTGVmdCArIChkZWx0YVggKiBpLnNldHRpbmdzLndoZWVsU3BlZWQpKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICB1cGRhdGVTY3JvbGwoZWxlbWVudCwgJ2xlZnQnLCBlbGVtZW50LnNjcm9sbExlZnQgLSAoZGVsdGFZICogaS5zZXR0aW5ncy53aGVlbFNwZWVkKSk7XHJcbiAgICAgIH1cclxuICAgICAgc2hvdWxkUHJldmVudCA9IHRydWU7XHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlR2VvbWV0cnkoZWxlbWVudCk7XHJcblxyXG4gICAgc2hvdWxkUHJldmVudCA9IChzaG91bGRQcmV2ZW50IHx8IHNob3VsZFByZXZlbnREZWZhdWx0KGRlbHRhWCwgZGVsdGFZKSk7XHJcbiAgICBpZiAoc2hvdWxkUHJldmVudCkge1xyXG4gICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBpZiAodHlwZW9mIHdpbmRvdy5vbndoZWVsICE9PSBcInVuZGVmaW5lZFwiKSB7XHJcbiAgICBpLmV2ZW50LmJpbmQoZWxlbWVudCwgJ3doZWVsJywgbW91c2V3aGVlbEhhbmRsZXIpO1xyXG4gIH0gZWxzZSBpZiAodHlwZW9mIHdpbmRvdy5vbm1vdXNld2hlZWwgIT09IFwidW5kZWZpbmVkXCIpIHtcclxuICAgIGkuZXZlbnQuYmluZChlbGVtZW50LCAnbW91c2V3aGVlbCcsIG1vdXNld2hlZWxIYW5kbGVyKTtcclxuICB9XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGVsZW1lbnQpIHtcclxuICB2YXIgaSA9IGluc3RhbmNlcy5nZXQoZWxlbWVudCk7XHJcbiAgYmluZE1vdXNlV2hlZWxIYW5kbGVyKGVsZW1lbnQsIGkpO1xyXG59O1xyXG5cbn0se1wiLi4vaW5zdGFuY2VzXCI6MTgsXCIuLi91cGRhdGUtZ2VvbWV0cnlcIjoxOSxcIi4uL3VwZGF0ZS1zY3JvbGxcIjoyMH1dLDE0OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcclxuXHJcbnZhciBpbnN0YW5jZXMgPSByZXF1aXJlKCcuLi9pbnN0YW5jZXMnKTtcclxudmFyIHVwZGF0ZUdlb21ldHJ5ID0gcmVxdWlyZSgnLi4vdXBkYXRlLWdlb21ldHJ5Jyk7XHJcblxyXG5mdW5jdGlvbiBiaW5kTmF0aXZlU2Nyb2xsSGFuZGxlcihlbGVtZW50LCBpKSB7XHJcbiAgaS5ldmVudC5iaW5kKGVsZW1lbnQsICdzY3JvbGwnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICB1cGRhdGVHZW9tZXRyeShlbGVtZW50KTtcclxuICB9KTtcclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZWxlbWVudCkge1xyXG4gIHZhciBpID0gaW5zdGFuY2VzLmdldChlbGVtZW50KTtcclxuICBiaW5kTmF0aXZlU2Nyb2xsSGFuZGxlcihlbGVtZW50LCBpKTtcclxufTtcclxuXG59LHtcIi4uL2luc3RhbmNlc1wiOjE4LFwiLi4vdXBkYXRlLWdlb21ldHJ5XCI6MTl9XSwxNTpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XHJcblxyXG52YXIgXyA9IHJlcXVpcmUoJy4uLy4uL2xpYi9oZWxwZXInKTtcclxudmFyIGluc3RhbmNlcyA9IHJlcXVpcmUoJy4uL2luc3RhbmNlcycpO1xyXG52YXIgdXBkYXRlR2VvbWV0cnkgPSByZXF1aXJlKCcuLi91cGRhdGUtZ2VvbWV0cnknKTtcclxudmFyIHVwZGF0ZVNjcm9sbCA9IHJlcXVpcmUoJy4uL3VwZGF0ZS1zY3JvbGwnKTtcclxuXHJcbmZ1bmN0aW9uIGJpbmRTZWxlY3Rpb25IYW5kbGVyKGVsZW1lbnQsIGkpIHtcclxuICBmdW5jdGlvbiBnZXRSYW5nZU5vZGUoKSB7XHJcbiAgICB2YXIgc2VsZWN0aW9uID0gd2luZG93LmdldFNlbGVjdGlvbiA/IHdpbmRvdy5nZXRTZWxlY3Rpb24oKSA6XHJcbiAgICAgICAgICAgICAgICAgICAgZG9jdW1lbnQuZ2V0U2VsZWN0aW9uID8gZG9jdW1lbnQuZ2V0U2VsZWN0aW9uKCkgOiAnJztcclxuICAgIGlmIChzZWxlY3Rpb24udG9TdHJpbmcoKS5sZW5ndGggPT09IDApIHtcclxuICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICByZXR1cm4gc2VsZWN0aW9uLmdldFJhbmdlQXQoMCkuY29tbW9uQW5jZXN0b3JDb250YWluZXI7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICB2YXIgc2Nyb2xsaW5nTG9vcCA9IG51bGw7XHJcbiAgdmFyIHNjcm9sbERpZmYgPSB7dG9wOiAwLCBsZWZ0OiAwfTtcclxuICBmdW5jdGlvbiBzdGFydFNjcm9sbGluZygpIHtcclxuICAgIGlmICghc2Nyb2xsaW5nTG9vcCkge1xyXG4gICAgICBzY3JvbGxpbmdMb29wID0gc2V0SW50ZXJ2YWwoZnVuY3Rpb24gKCkge1xyXG4gICAgICAgIGlmICghaW5zdGFuY2VzLmdldChlbGVtZW50KSkge1xyXG4gICAgICAgICAgY2xlYXJJbnRlcnZhbChzY3JvbGxpbmdMb29wKTtcclxuICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHVwZGF0ZVNjcm9sbChlbGVtZW50LCAndG9wJywgZWxlbWVudC5zY3JvbGxUb3AgKyBzY3JvbGxEaWZmLnRvcCk7XHJcbiAgICAgICAgdXBkYXRlU2Nyb2xsKGVsZW1lbnQsICdsZWZ0JywgZWxlbWVudC5zY3JvbGxMZWZ0ICsgc2Nyb2xsRGlmZi5sZWZ0KTtcclxuICAgICAgICB1cGRhdGVHZW9tZXRyeShlbGVtZW50KTtcclxuICAgICAgfSwgNTApOyAvLyBldmVyeSAuMSBzZWNcclxuICAgIH1cclxuICB9XHJcbiAgZnVuY3Rpb24gc3RvcFNjcm9sbGluZygpIHtcclxuICAgIGlmIChzY3JvbGxpbmdMb29wKSB7XHJcbiAgICAgIGNsZWFySW50ZXJ2YWwoc2Nyb2xsaW5nTG9vcCk7XHJcbiAgICAgIHNjcm9sbGluZ0xvb3AgPSBudWxsO1xyXG4gICAgfVxyXG4gICAgXy5zdG9wU2Nyb2xsaW5nKGVsZW1lbnQpO1xyXG4gIH1cclxuXHJcbiAgdmFyIGlzU2VsZWN0ZWQgPSBmYWxzZTtcclxuICBpLmV2ZW50LmJpbmQoaS5vd25lckRvY3VtZW50LCAnc2VsZWN0aW9uY2hhbmdlJywgZnVuY3Rpb24gKCkge1xyXG4gICAgaWYgKGVsZW1lbnQuY29udGFpbnMoZ2V0UmFuZ2VOb2RlKCkpKSB7XHJcbiAgICAgIGlzU2VsZWN0ZWQgPSB0cnVlO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgaXNTZWxlY3RlZCA9IGZhbHNlO1xyXG4gICAgICBzdG9wU2Nyb2xsaW5nKCk7XHJcbiAgICB9XHJcbiAgfSk7XHJcbiAgaS5ldmVudC5iaW5kKHdpbmRvdywgJ21vdXNldXAnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICBpZiAoaXNTZWxlY3RlZCkge1xyXG4gICAgICBpc1NlbGVjdGVkID0gZmFsc2U7XHJcbiAgICAgIHN0b3BTY3JvbGxpbmcoKTtcclxuICAgIH1cclxuICB9KTtcclxuICBpLmV2ZW50LmJpbmQod2luZG93LCAna2V5dXAnLCBmdW5jdGlvbiAoKSB7XHJcbiAgICBpZiAoaXNTZWxlY3RlZCkge1xyXG4gICAgICBpc1NlbGVjdGVkID0gZmFsc2U7XHJcbiAgICAgIHN0b3BTY3JvbGxpbmcoKTtcclxuICAgIH1cclxuICB9KTtcclxuXHJcbiAgaS5ldmVudC5iaW5kKHdpbmRvdywgJ21vdXNlbW92ZScsIGZ1bmN0aW9uIChlKSB7XHJcbiAgICBpZiAoaXNTZWxlY3RlZCkge1xyXG4gICAgICB2YXIgbW91c2VQb3NpdGlvbiA9IHt4OiBlLnBhZ2VYLCB5OiBlLnBhZ2VZfTtcclxuICAgICAgdmFyIGNvbnRhaW5lckdlb21ldHJ5ID0ge1xyXG4gICAgICAgIGxlZnQ6IGVsZW1lbnQub2Zmc2V0TGVmdCxcclxuICAgICAgICByaWdodDogZWxlbWVudC5vZmZzZXRMZWZ0ICsgZWxlbWVudC5vZmZzZXRXaWR0aCxcclxuICAgICAgICB0b3A6IGVsZW1lbnQub2Zmc2V0VG9wLFxyXG4gICAgICAgIGJvdHRvbTogZWxlbWVudC5vZmZzZXRUb3AgKyBlbGVtZW50Lm9mZnNldEhlaWdodFxyXG4gICAgICB9O1xyXG5cclxuICAgICAgaWYgKG1vdXNlUG9zaXRpb24ueCA8IGNvbnRhaW5lckdlb21ldHJ5LmxlZnQgKyAzKSB7XHJcbiAgICAgICAgc2Nyb2xsRGlmZi5sZWZ0ID0gLTU7XHJcbiAgICAgICAgXy5zdGFydFNjcm9sbGluZyhlbGVtZW50LCAneCcpO1xyXG4gICAgICB9IGVsc2UgaWYgKG1vdXNlUG9zaXRpb24ueCA+IGNvbnRhaW5lckdlb21ldHJ5LnJpZ2h0IC0gMykge1xyXG4gICAgICAgIHNjcm9sbERpZmYubGVmdCA9IDU7XHJcbiAgICAgICAgXy5zdGFydFNjcm9sbGluZyhlbGVtZW50LCAneCcpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHNjcm9sbERpZmYubGVmdCA9IDA7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGlmIChtb3VzZVBvc2l0aW9uLnkgPCBjb250YWluZXJHZW9tZXRyeS50b3AgKyAzKSB7XHJcbiAgICAgICAgaWYgKGNvbnRhaW5lckdlb21ldHJ5LnRvcCArIDMgLSBtb3VzZVBvc2l0aW9uLnkgPCA1KSB7XHJcbiAgICAgICAgICBzY3JvbGxEaWZmLnRvcCA9IC01O1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICBzY3JvbGxEaWZmLnRvcCA9IC0yMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgXy5zdGFydFNjcm9sbGluZyhlbGVtZW50LCAneScpO1xyXG4gICAgICB9IGVsc2UgaWYgKG1vdXNlUG9zaXRpb24ueSA+IGNvbnRhaW5lckdlb21ldHJ5LmJvdHRvbSAtIDMpIHtcclxuICAgICAgICBpZiAobW91c2VQb3NpdGlvbi55IC0gY29udGFpbmVyR2VvbWV0cnkuYm90dG9tICsgMyA8IDUpIHtcclxuICAgICAgICAgIHNjcm9sbERpZmYudG9wID0gNTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgc2Nyb2xsRGlmZi50b3AgPSAyMDtcclxuICAgICAgICB9XHJcbiAgICAgICAgXy5zdGFydFNjcm9sbGluZyhlbGVtZW50LCAneScpO1xyXG4gICAgICB9IGVsc2Uge1xyXG4gICAgICAgIHNjcm9sbERpZmYudG9wID0gMDtcclxuICAgICAgfVxyXG5cclxuICAgICAgaWYgKHNjcm9sbERpZmYudG9wID09PSAwICYmIHNjcm9sbERpZmYubGVmdCA9PT0gMCkge1xyXG4gICAgICAgIHN0b3BTY3JvbGxpbmcoKTtcclxuICAgICAgfSBlbHNlIHtcclxuICAgICAgICBzdGFydFNjcm9sbGluZygpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfSk7XHJcbn1cclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGVsZW1lbnQpIHtcclxuICB2YXIgaSA9IGluc3RhbmNlcy5nZXQoZWxlbWVudCk7XHJcbiAgYmluZFNlbGVjdGlvbkhhbmRsZXIoZWxlbWVudCwgaSk7XHJcbn07XHJcblxufSx7XCIuLi8uLi9saWIvaGVscGVyXCI6NixcIi4uL2luc3RhbmNlc1wiOjE4LFwiLi4vdXBkYXRlLWdlb21ldHJ5XCI6MTksXCIuLi91cGRhdGUtc2Nyb2xsXCI6MjB9XSwxNjpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XHJcblxyXG52YXIgXyA9IHJlcXVpcmUoJy4uLy4uL2xpYi9oZWxwZXInKTtcclxudmFyIGluc3RhbmNlcyA9IHJlcXVpcmUoJy4uL2luc3RhbmNlcycpO1xyXG52YXIgdXBkYXRlR2VvbWV0cnkgPSByZXF1aXJlKCcuLi91cGRhdGUtZ2VvbWV0cnknKTtcclxudmFyIHVwZGF0ZVNjcm9sbCA9IHJlcXVpcmUoJy4uL3VwZGF0ZS1zY3JvbGwnKTtcclxuXHJcbmZ1bmN0aW9uIGJpbmRUb3VjaEhhbmRsZXIoZWxlbWVudCwgaSwgc3VwcG9ydHNUb3VjaCwgc3VwcG9ydHNJZVBvaW50ZXIpIHtcclxuICBmdW5jdGlvbiBzaG91bGRQcmV2ZW50RGVmYXVsdChkZWx0YVgsIGRlbHRhWSkge1xyXG4gICAgdmFyIHNjcm9sbFRvcCA9IGVsZW1lbnQuc2Nyb2xsVG9wO1xyXG4gICAgdmFyIHNjcm9sbExlZnQgPSBlbGVtZW50LnNjcm9sbExlZnQ7XHJcbiAgICB2YXIgbWFnbml0dWRlWCA9IE1hdGguYWJzKGRlbHRhWCk7XHJcbiAgICB2YXIgbWFnbml0dWRlWSA9IE1hdGguYWJzKGRlbHRhWSk7XHJcblxyXG4gICAgaWYgKG1hZ25pdHVkZVkgPiBtYWduaXR1ZGVYKSB7XHJcbiAgICAgIC8vIHVzZXIgaXMgcGVyaGFwcyB0cnlpbmcgdG8gc3dpcGUgdXAvZG93biB0aGUgcGFnZVxyXG5cclxuICAgICAgaWYgKCgoZGVsdGFZIDwgMCkgJiYgKHNjcm9sbFRvcCA9PT0gaS5jb250ZW50SGVpZ2h0IC0gaS5jb250YWluZXJIZWlnaHQpKSB8fFxyXG4gICAgICAgICAgKChkZWx0YVkgPiAwKSAmJiAoc2Nyb2xsVG9wID09PSAwKSkpIHtcclxuICAgICAgICByZXR1cm4gIWkuc2V0dGluZ3Muc3dpcGVQcm9wYWdhdGlvbjtcclxuICAgICAgfVxyXG4gICAgfSBlbHNlIGlmIChtYWduaXR1ZGVYID4gbWFnbml0dWRlWSkge1xyXG4gICAgICAvLyB1c2VyIGlzIHBlcmhhcHMgdHJ5aW5nIHRvIHN3aXBlIGxlZnQvcmlnaHQgYWNyb3NzIHRoZSBwYWdlXHJcblxyXG4gICAgICBpZiAoKChkZWx0YVggPCAwKSAmJiAoc2Nyb2xsTGVmdCA9PT0gaS5jb250ZW50V2lkdGggLSBpLmNvbnRhaW5lcldpZHRoKSkgfHxcclxuICAgICAgICAgICgoZGVsdGFYID4gMCkgJiYgKHNjcm9sbExlZnQgPT09IDApKSkge1xyXG4gICAgICAgIHJldHVybiAhaS5zZXR0aW5ncy5zd2lwZVByb3BhZ2F0aW9uO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcmV0dXJuIHRydWU7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBhcHBseVRvdWNoTW92ZShkaWZmZXJlbmNlWCwgZGlmZmVyZW5jZVkpIHtcclxuICAgIHVwZGF0ZVNjcm9sbChlbGVtZW50LCAndG9wJywgZWxlbWVudC5zY3JvbGxUb3AgLSBkaWZmZXJlbmNlWSk7XHJcbiAgICB1cGRhdGVTY3JvbGwoZWxlbWVudCwgJ2xlZnQnLCBlbGVtZW50LnNjcm9sbExlZnQgLSBkaWZmZXJlbmNlWCk7XHJcblxyXG4gICAgdXBkYXRlR2VvbWV0cnkoZWxlbWVudCk7XHJcbiAgfVxyXG5cclxuICB2YXIgc3RhcnRPZmZzZXQgPSB7fTtcclxuICB2YXIgc3RhcnRUaW1lID0gMDtcclxuICB2YXIgc3BlZWQgPSB7fTtcclxuICB2YXIgZWFzaW5nTG9vcCA9IG51bGw7XHJcbiAgdmFyIGluR2xvYmFsVG91Y2ggPSBmYWxzZTtcclxuICB2YXIgaW5Mb2NhbFRvdWNoID0gZmFsc2U7XHJcblxyXG4gIGZ1bmN0aW9uIGdsb2JhbFRvdWNoU3RhcnQoKSB7XHJcbiAgICBpbkdsb2JhbFRvdWNoID0gdHJ1ZTtcclxuICB9XHJcbiAgZnVuY3Rpb24gZ2xvYmFsVG91Y2hFbmQoKSB7XHJcbiAgICBpbkdsb2JhbFRvdWNoID0gZmFsc2U7XHJcbiAgfVxyXG5cclxuICBmdW5jdGlvbiBnZXRUb3VjaChlKSB7XHJcbiAgICBpZiAoZS50YXJnZXRUb3VjaGVzKSB7XHJcbiAgICAgIHJldHVybiBlLnRhcmdldFRvdWNoZXNbMF07XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICAvLyBNYXliZSBJRSBwb2ludGVyXHJcbiAgICAgIHJldHVybiBlO1xyXG4gICAgfVxyXG4gIH1cclxuICBmdW5jdGlvbiBzaG91bGRIYW5kbGUoZSkge1xyXG4gICAgaWYgKGUudGFyZ2V0VG91Y2hlcyAmJiBlLnRhcmdldFRvdWNoZXMubGVuZ3RoID09PSAxKSB7XHJcbiAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG4gICAgaWYgKGUucG9pbnRlclR5cGUgJiYgZS5wb2ludGVyVHlwZSAhPT0gJ21vdXNlJyAmJiBlLnBvaW50ZXJUeXBlICE9PSBlLk1TUE9JTlRFUl9UWVBFX01PVVNFKSB7XHJcbiAgICAgIHJldHVybiB0cnVlO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIGZhbHNlO1xyXG4gIH1cclxuICBmdW5jdGlvbiB0b3VjaFN0YXJ0KGUpIHtcclxuICAgIGlmIChzaG91bGRIYW5kbGUoZSkpIHtcclxuICAgICAgaW5Mb2NhbFRvdWNoID0gdHJ1ZTtcclxuXHJcbiAgICAgIHZhciB0b3VjaCA9IGdldFRvdWNoKGUpO1xyXG5cclxuICAgICAgc3RhcnRPZmZzZXQucGFnZVggPSB0b3VjaC5wYWdlWDtcclxuICAgICAgc3RhcnRPZmZzZXQucGFnZVkgPSB0b3VjaC5wYWdlWTtcclxuXHJcbiAgICAgIHN0YXJ0VGltZSA9IChuZXcgRGF0ZSgpKS5nZXRUaW1lKCk7XHJcblxyXG4gICAgICBpZiAoZWFzaW5nTG9vcCAhPT0gbnVsbCkge1xyXG4gICAgICAgIGNsZWFySW50ZXJ2YWwoZWFzaW5nTG9vcCk7XHJcbiAgICAgIH1cclxuXHJcbiAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIGZ1bmN0aW9uIHRvdWNoTW92ZShlKSB7XHJcbiAgICBpZiAoIWluTG9jYWxUb3VjaCAmJiBpLnNldHRpbmdzLnN3aXBlUHJvcGFnYXRpb24pIHtcclxuICAgICAgdG91Y2hTdGFydChlKTtcclxuICAgIH1cclxuICAgIGlmICghaW5HbG9iYWxUb3VjaCAmJiBpbkxvY2FsVG91Y2ggJiYgc2hvdWxkSGFuZGxlKGUpKSB7XHJcbiAgICAgIHZhciB0b3VjaCA9IGdldFRvdWNoKGUpO1xyXG5cclxuICAgICAgdmFyIGN1cnJlbnRPZmZzZXQgPSB7cGFnZVg6IHRvdWNoLnBhZ2VYLCBwYWdlWTogdG91Y2gucGFnZVl9O1xyXG5cclxuICAgICAgdmFyIGRpZmZlcmVuY2VYID0gY3VycmVudE9mZnNldC5wYWdlWCAtIHN0YXJ0T2Zmc2V0LnBhZ2VYO1xyXG4gICAgICB2YXIgZGlmZmVyZW5jZVkgPSBjdXJyZW50T2Zmc2V0LnBhZ2VZIC0gc3RhcnRPZmZzZXQucGFnZVk7XHJcblxyXG4gICAgICBhcHBseVRvdWNoTW92ZShkaWZmZXJlbmNlWCwgZGlmZmVyZW5jZVkpO1xyXG4gICAgICBzdGFydE9mZnNldCA9IGN1cnJlbnRPZmZzZXQ7XHJcblxyXG4gICAgICB2YXIgY3VycmVudFRpbWUgPSAobmV3IERhdGUoKSkuZ2V0VGltZSgpO1xyXG5cclxuICAgICAgdmFyIHRpbWVHYXAgPSBjdXJyZW50VGltZSAtIHN0YXJ0VGltZTtcclxuICAgICAgaWYgKHRpbWVHYXAgPiAwKSB7XHJcbiAgICAgICAgc3BlZWQueCA9IGRpZmZlcmVuY2VYIC8gdGltZUdhcDtcclxuICAgICAgICBzcGVlZC55ID0gZGlmZmVyZW5jZVkgLyB0aW1lR2FwO1xyXG4gICAgICAgIHN0YXJ0VGltZSA9IGN1cnJlbnRUaW1lO1xyXG4gICAgICB9XHJcblxyXG4gICAgICBpZiAoc2hvdWxkUHJldmVudERlZmF1bHQoZGlmZmVyZW5jZVgsIGRpZmZlcmVuY2VZKSkge1xyXG4gICAgICAgIGUuc3RvcFByb3BhZ2F0aW9uKCk7XHJcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIGZ1bmN0aW9uIHRvdWNoRW5kKCkge1xyXG4gICAgaWYgKCFpbkdsb2JhbFRvdWNoICYmIGluTG9jYWxUb3VjaCkge1xyXG4gICAgICBpbkxvY2FsVG91Y2ggPSBmYWxzZTtcclxuXHJcbiAgICAgIGNsZWFySW50ZXJ2YWwoZWFzaW5nTG9vcCk7XHJcbiAgICAgIGVhc2luZ0xvb3AgPSBzZXRJbnRlcnZhbChmdW5jdGlvbiAoKSB7XHJcbiAgICAgICAgaWYgKCFpbnN0YW5jZXMuZ2V0KGVsZW1lbnQpKSB7XHJcbiAgICAgICAgICBjbGVhckludGVydmFsKGVhc2luZ0xvb3ApO1xyXG4gICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKCFzcGVlZC54ICYmICFzcGVlZC55KSB7XHJcbiAgICAgICAgICBjbGVhckludGVydmFsKGVhc2luZ0xvb3ApO1xyXG4gICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKE1hdGguYWJzKHNwZWVkLngpIDwgMC4wMSAmJiBNYXRoLmFicyhzcGVlZC55KSA8IDAuMDEpIHtcclxuICAgICAgICAgIGNsZWFySW50ZXJ2YWwoZWFzaW5nTG9vcCk7XHJcbiAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBhcHBseVRvdWNoTW92ZShzcGVlZC54ICogMzAsIHNwZWVkLnkgKiAzMCk7XHJcblxyXG4gICAgICAgIHNwZWVkLnggKj0gMC44O1xyXG4gICAgICAgIHNwZWVkLnkgKj0gMC44O1xyXG4gICAgICB9LCAxMCk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICBpZiAoc3VwcG9ydHNUb3VjaCkge1xyXG4gICAgaS5ldmVudC5iaW5kKHdpbmRvdywgJ3RvdWNoc3RhcnQnLCBnbG9iYWxUb3VjaFN0YXJ0KTtcclxuICAgIGkuZXZlbnQuYmluZCh3aW5kb3csICd0b3VjaGVuZCcsIGdsb2JhbFRvdWNoRW5kKTtcclxuICAgIGkuZXZlbnQuYmluZChlbGVtZW50LCAndG91Y2hzdGFydCcsIHRvdWNoU3RhcnQpO1xyXG4gICAgaS5ldmVudC5iaW5kKGVsZW1lbnQsICd0b3VjaG1vdmUnLCB0b3VjaE1vdmUpO1xyXG4gICAgaS5ldmVudC5iaW5kKGVsZW1lbnQsICd0b3VjaGVuZCcsIHRvdWNoRW5kKTtcclxuICB9IGVsc2UgaWYgKHN1cHBvcnRzSWVQb2ludGVyKSB7XHJcbiAgICBpZiAod2luZG93LlBvaW50ZXJFdmVudCkge1xyXG4gICAgICBpLmV2ZW50LmJpbmQod2luZG93LCAncG9pbnRlcmRvd24nLCBnbG9iYWxUb3VjaFN0YXJ0KTtcclxuICAgICAgaS5ldmVudC5iaW5kKHdpbmRvdywgJ3BvaW50ZXJ1cCcsIGdsb2JhbFRvdWNoRW5kKTtcclxuICAgICAgaS5ldmVudC5iaW5kKGVsZW1lbnQsICdwb2ludGVyZG93bicsIHRvdWNoU3RhcnQpO1xyXG4gICAgICBpLmV2ZW50LmJpbmQoZWxlbWVudCwgJ3BvaW50ZXJtb3ZlJywgdG91Y2hNb3ZlKTtcclxuICAgICAgaS5ldmVudC5iaW5kKGVsZW1lbnQsICdwb2ludGVydXAnLCB0b3VjaEVuZCk7XHJcbiAgICB9IGVsc2UgaWYgKHdpbmRvdy5NU1BvaW50ZXJFdmVudCkge1xyXG4gICAgICBpLmV2ZW50LmJpbmQod2luZG93LCAnTVNQb2ludGVyRG93bicsIGdsb2JhbFRvdWNoU3RhcnQpO1xyXG4gICAgICBpLmV2ZW50LmJpbmQod2luZG93LCAnTVNQb2ludGVyVXAnLCBnbG9iYWxUb3VjaEVuZCk7XHJcbiAgICAgIGkuZXZlbnQuYmluZChlbGVtZW50LCAnTVNQb2ludGVyRG93bicsIHRvdWNoU3RhcnQpO1xyXG4gICAgICBpLmV2ZW50LmJpbmQoZWxlbWVudCwgJ01TUG9pbnRlck1vdmUnLCB0b3VjaE1vdmUpO1xyXG4gICAgICBpLmV2ZW50LmJpbmQoZWxlbWVudCwgJ01TUG9pbnRlclVwJywgdG91Y2hFbmQpO1xyXG4gICAgfVxyXG4gIH1cclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZWxlbWVudCkge1xyXG4gIGlmICghXy5lbnYuc3VwcG9ydHNUb3VjaCAmJiAhXy5lbnYuc3VwcG9ydHNJZVBvaW50ZXIpIHtcclxuICAgIHJldHVybjtcclxuICB9XHJcblxyXG4gIHZhciBpID0gaW5zdGFuY2VzLmdldChlbGVtZW50KTtcclxuICBiaW5kVG91Y2hIYW5kbGVyKGVsZW1lbnQsIGksIF8uZW52LnN1cHBvcnRzVG91Y2gsIF8uZW52LnN1cHBvcnRzSWVQb2ludGVyKTtcclxufTtcclxuXG59LHtcIi4uLy4uL2xpYi9oZWxwZXJcIjo2LFwiLi4vaW5zdGFuY2VzXCI6MTgsXCIuLi91cGRhdGUtZ2VvbWV0cnlcIjoxOSxcIi4uL3VwZGF0ZS1zY3JvbGxcIjoyMH1dLDE3OltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcclxuXHJcbnZhciBfID0gcmVxdWlyZSgnLi4vbGliL2hlbHBlcicpO1xyXG52YXIgY2xzID0gcmVxdWlyZSgnLi4vbGliL2NsYXNzJyk7XHJcbnZhciBpbnN0YW5jZXMgPSByZXF1aXJlKCcuL2luc3RhbmNlcycpO1xyXG52YXIgdXBkYXRlR2VvbWV0cnkgPSByZXF1aXJlKCcuL3VwZGF0ZS1nZW9tZXRyeScpO1xyXG5cclxuLy8gSGFuZGxlcnNcclxudmFyIGhhbmRsZXJzID0ge1xyXG4gICdjbGljay1yYWlsJzogcmVxdWlyZSgnLi9oYW5kbGVyL2NsaWNrLXJhaWwnKSxcclxuICAnZHJhZy1zY3JvbGxiYXInOiByZXF1aXJlKCcuL2hhbmRsZXIvZHJhZy1zY3JvbGxiYXInKSxcclxuICAna2V5Ym9hcmQnOiByZXF1aXJlKCcuL2hhbmRsZXIva2V5Ym9hcmQnKSxcclxuICAnd2hlZWwnOiByZXF1aXJlKCcuL2hhbmRsZXIvbW91c2Utd2hlZWwnKSxcclxuICAndG91Y2gnOiByZXF1aXJlKCcuL2hhbmRsZXIvdG91Y2gnKSxcclxuICAnc2VsZWN0aW9uJzogcmVxdWlyZSgnLi9oYW5kbGVyL3NlbGVjdGlvbicpXHJcbn07XHJcbnZhciBuYXRpdmVTY3JvbGxIYW5kbGVyID0gcmVxdWlyZSgnLi9oYW5kbGVyL25hdGl2ZS1zY3JvbGwnKTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGVsZW1lbnQsIHVzZXJTZXR0aW5ncykge1xyXG4gIHVzZXJTZXR0aW5ncyA9IHR5cGVvZiB1c2VyU2V0dGluZ3MgPT09ICdvYmplY3QnID8gdXNlclNldHRpbmdzIDoge307XHJcblxyXG4gIGNscy5hZGQoZWxlbWVudCwgJ3BzJyk7XHJcblxyXG4gIC8vIENyZWF0ZSBhIHBsdWdpbiBpbnN0YW5jZS5cclxuICB2YXIgaSA9IGluc3RhbmNlcy5hZGQoZWxlbWVudCk7XHJcblxyXG4gIGkuc2V0dGluZ3MgPSBfLmV4dGVuZChpLnNldHRpbmdzLCB1c2VyU2V0dGluZ3MpO1xyXG4gIGNscy5hZGQoZWxlbWVudCwgJ3BzLS10aGVtZV8nICsgaS5zZXR0aW5ncy50aGVtZSk7XHJcblxyXG4gIGkuc2V0dGluZ3MuaGFuZGxlcnMuZm9yRWFjaChmdW5jdGlvbiAoaGFuZGxlck5hbWUpIHtcclxuICAgIGhhbmRsZXJzW2hhbmRsZXJOYW1lXShlbGVtZW50KTtcclxuICB9KTtcclxuXHJcbiAgbmF0aXZlU2Nyb2xsSGFuZGxlcihlbGVtZW50KTtcclxuXHJcbiAgdXBkYXRlR2VvbWV0cnkoZWxlbWVudCk7XHJcbn07XHJcblxufSx7XCIuLi9saWIvY2xhc3NcIjoyLFwiLi4vbGliL2hlbHBlclwiOjYsXCIuL2hhbmRsZXIvY2xpY2stcmFpbFwiOjEwLFwiLi9oYW5kbGVyL2RyYWctc2Nyb2xsYmFyXCI6MTEsXCIuL2hhbmRsZXIva2V5Ym9hcmRcIjoxMixcIi4vaGFuZGxlci9tb3VzZS13aGVlbFwiOjEzLFwiLi9oYW5kbGVyL25hdGl2ZS1zY3JvbGxcIjoxNCxcIi4vaGFuZGxlci9zZWxlY3Rpb25cIjoxNSxcIi4vaGFuZGxlci90b3VjaFwiOjE2LFwiLi9pbnN0YW5jZXNcIjoxOCxcIi4vdXBkYXRlLWdlb21ldHJ5XCI6MTl9XSwxODpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XHJcblxyXG52YXIgXyA9IHJlcXVpcmUoJy4uL2xpYi9oZWxwZXInKTtcclxudmFyIGNscyA9IHJlcXVpcmUoJy4uL2xpYi9jbGFzcycpO1xyXG52YXIgZGVmYXVsdFNldHRpbmdzID0gcmVxdWlyZSgnLi9kZWZhdWx0LXNldHRpbmcnKTtcclxudmFyIGRvbSA9IHJlcXVpcmUoJy4uL2xpYi9kb20nKTtcclxudmFyIEV2ZW50TWFuYWdlciA9IHJlcXVpcmUoJy4uL2xpYi9ldmVudC1tYW5hZ2VyJyk7XHJcbnZhciBndWlkID0gcmVxdWlyZSgnLi4vbGliL2d1aWQnKTtcclxuXHJcbnZhciBpbnN0YW5jZXMgPSB7fTtcclxuXHJcbmZ1bmN0aW9uIEluc3RhbmNlKGVsZW1lbnQpIHtcclxuICB2YXIgaSA9IHRoaXM7XHJcblxyXG4gIGkuc2V0dGluZ3MgPSBfLmNsb25lKGRlZmF1bHRTZXR0aW5ncyk7XHJcbiAgaS5jb250YWluZXJXaWR0aCA9IG51bGw7XHJcbiAgaS5jb250YWluZXJIZWlnaHQgPSBudWxsO1xyXG4gIGkuY29udGVudFdpZHRoID0gbnVsbDtcclxuICBpLmNvbnRlbnRIZWlnaHQgPSBudWxsO1xyXG5cclxuICBpLmlzUnRsID0gZG9tLmNzcyhlbGVtZW50LCAnZGlyZWN0aW9uJykgPT09IFwicnRsXCI7XHJcbiAgaS5pc05lZ2F0aXZlU2Nyb2xsID0gKGZ1bmN0aW9uICgpIHtcclxuICAgIHZhciBvcmlnaW5hbFNjcm9sbExlZnQgPSBlbGVtZW50LnNjcm9sbExlZnQ7XHJcbiAgICB2YXIgcmVzdWx0ID0gbnVsbDtcclxuICAgIGVsZW1lbnQuc2Nyb2xsTGVmdCA9IC0xO1xyXG4gICAgcmVzdWx0ID0gZWxlbWVudC5zY3JvbGxMZWZ0IDwgMDtcclxuICAgIGVsZW1lbnQuc2Nyb2xsTGVmdCA9IG9yaWdpbmFsU2Nyb2xsTGVmdDtcclxuICAgIHJldHVybiByZXN1bHQ7XHJcbiAgfSkoKTtcclxuICBpLm5lZ2F0aXZlU2Nyb2xsQWRqdXN0bWVudCA9IGkuaXNOZWdhdGl2ZVNjcm9sbCA/IGVsZW1lbnQuc2Nyb2xsV2lkdGggLSBlbGVtZW50LmNsaWVudFdpZHRoIDogMDtcclxuICBpLmV2ZW50ID0gbmV3IEV2ZW50TWFuYWdlcigpO1xyXG4gIGkub3duZXJEb2N1bWVudCA9IGVsZW1lbnQub3duZXJEb2N1bWVudCB8fCBkb2N1bWVudDtcclxuXHJcbiAgZnVuY3Rpb24gZm9jdXMoKSB7XHJcbiAgICBjbHMuYWRkKGVsZW1lbnQsICdwcy0tZm9jdXMnKTtcclxuICB9XHJcblxyXG4gIGZ1bmN0aW9uIGJsdXIoKSB7XHJcbiAgICBjbHMucmVtb3ZlKGVsZW1lbnQsICdwcy0tZm9jdXMnKTtcclxuICB9XHJcblxyXG4gIGkuc2Nyb2xsYmFyWFJhaWwgPSBkb20uYXBwZW5kVG8oZG9tLmUoJ2RpdicsICdwc19fc2Nyb2xsYmFyLXgtcmFpbCcpLCBlbGVtZW50KTtcclxuICBpLnNjcm9sbGJhclggPSBkb20uYXBwZW5kVG8oZG9tLmUoJ2RpdicsICdwc19fc2Nyb2xsYmFyLXgnKSwgaS5zY3JvbGxiYXJYUmFpbCk7XHJcbiAgaS5zY3JvbGxiYXJYLnNldEF0dHJpYnV0ZSgndGFiaW5kZXgnLCAwKTtcclxuICBpLmV2ZW50LmJpbmQoaS5zY3JvbGxiYXJYLCAnZm9jdXMnLCBmb2N1cyk7XHJcbiAgaS5ldmVudC5iaW5kKGkuc2Nyb2xsYmFyWCwgJ2JsdXInLCBibHVyKTtcclxuICBpLnNjcm9sbGJhclhBY3RpdmUgPSBudWxsO1xyXG4gIGkuc2Nyb2xsYmFyWFdpZHRoID0gbnVsbDtcclxuICBpLnNjcm9sbGJhclhMZWZ0ID0gbnVsbDtcclxuICBpLnNjcm9sbGJhclhCb3R0b20gPSBfLnRvSW50KGRvbS5jc3MoaS5zY3JvbGxiYXJYUmFpbCwgJ2JvdHRvbScpKTtcclxuICBpLmlzU2Nyb2xsYmFyWFVzaW5nQm90dG9tID0gaS5zY3JvbGxiYXJYQm90dG9tID09PSBpLnNjcm9sbGJhclhCb3R0b207IC8vICFpc05hTlxyXG4gIGkuc2Nyb2xsYmFyWFRvcCA9IGkuaXNTY3JvbGxiYXJYVXNpbmdCb3R0b20gPyBudWxsIDogXy50b0ludChkb20uY3NzKGkuc2Nyb2xsYmFyWFJhaWwsICd0b3AnKSk7XHJcbiAgaS5yYWlsQm9yZGVyWFdpZHRoID0gXy50b0ludChkb20uY3NzKGkuc2Nyb2xsYmFyWFJhaWwsICdib3JkZXJMZWZ0V2lkdGgnKSkgKyBfLnRvSW50KGRvbS5jc3MoaS5zY3JvbGxiYXJYUmFpbCwgJ2JvcmRlclJpZ2h0V2lkdGgnKSk7XHJcbiAgLy8gU2V0IHJhaWwgdG8gZGlzcGxheTpibG9jayB0byBjYWxjdWxhdGUgbWFyZ2luc1xyXG4gIGRvbS5jc3MoaS5zY3JvbGxiYXJYUmFpbCwgJ2Rpc3BsYXknLCAnYmxvY2snKTtcclxuICBpLnJhaWxYTWFyZ2luV2lkdGggPSBfLnRvSW50KGRvbS5jc3MoaS5zY3JvbGxiYXJYUmFpbCwgJ21hcmdpbkxlZnQnKSkgKyBfLnRvSW50KGRvbS5jc3MoaS5zY3JvbGxiYXJYUmFpbCwgJ21hcmdpblJpZ2h0JykpO1xyXG4gIGRvbS5jc3MoaS5zY3JvbGxiYXJYUmFpbCwgJ2Rpc3BsYXknLCAnJyk7XHJcbiAgaS5yYWlsWFdpZHRoID0gbnVsbDtcclxuICBpLnJhaWxYUmF0aW8gPSBudWxsO1xyXG5cclxuICBpLnNjcm9sbGJhcllSYWlsID0gZG9tLmFwcGVuZFRvKGRvbS5lKCdkaXYnLCAncHNfX3Njcm9sbGJhci15LXJhaWwnKSwgZWxlbWVudCk7XHJcbiAgaS5zY3JvbGxiYXJZID0gZG9tLmFwcGVuZFRvKGRvbS5lKCdkaXYnLCAncHNfX3Njcm9sbGJhci15JyksIGkuc2Nyb2xsYmFyWVJhaWwpO1xyXG4gIGkuc2Nyb2xsYmFyWS5zZXRBdHRyaWJ1dGUoJ3RhYmluZGV4JywgMCk7XHJcbiAgaS5ldmVudC5iaW5kKGkuc2Nyb2xsYmFyWSwgJ2ZvY3VzJywgZm9jdXMpO1xyXG4gIGkuZXZlbnQuYmluZChpLnNjcm9sbGJhclksICdibHVyJywgYmx1cik7XHJcbiAgaS5zY3JvbGxiYXJZQWN0aXZlID0gbnVsbDtcclxuICBpLnNjcm9sbGJhcllIZWlnaHQgPSBudWxsO1xyXG4gIGkuc2Nyb2xsYmFyWVRvcCA9IG51bGw7XHJcbiAgaS5zY3JvbGxiYXJZUmlnaHQgPSBfLnRvSW50KGRvbS5jc3MoaS5zY3JvbGxiYXJZUmFpbCwgJ3JpZ2h0JykpO1xyXG4gIGkuaXNTY3JvbGxiYXJZVXNpbmdSaWdodCA9IGkuc2Nyb2xsYmFyWVJpZ2h0ID09PSBpLnNjcm9sbGJhcllSaWdodDsgLy8gIWlzTmFOXHJcbiAgaS5zY3JvbGxiYXJZTGVmdCA9IGkuaXNTY3JvbGxiYXJZVXNpbmdSaWdodCA/IG51bGwgOiBfLnRvSW50KGRvbS5jc3MoaS5zY3JvbGxiYXJZUmFpbCwgJ2xlZnQnKSk7XHJcbiAgaS5zY3JvbGxiYXJZT3V0ZXJXaWR0aCA9IGkuaXNSdGwgPyBfLm91dGVyV2lkdGgoaS5zY3JvbGxiYXJZKSA6IG51bGw7XHJcbiAgaS5yYWlsQm9yZGVyWVdpZHRoID0gXy50b0ludChkb20uY3NzKGkuc2Nyb2xsYmFyWVJhaWwsICdib3JkZXJUb3BXaWR0aCcpKSArIF8udG9JbnQoZG9tLmNzcyhpLnNjcm9sbGJhcllSYWlsLCAnYm9yZGVyQm90dG9tV2lkdGgnKSk7XHJcbiAgZG9tLmNzcyhpLnNjcm9sbGJhcllSYWlsLCAnZGlzcGxheScsICdibG9jaycpO1xyXG4gIGkucmFpbFlNYXJnaW5IZWlnaHQgPSBfLnRvSW50KGRvbS5jc3MoaS5zY3JvbGxiYXJZUmFpbCwgJ21hcmdpblRvcCcpKSArIF8udG9JbnQoZG9tLmNzcyhpLnNjcm9sbGJhcllSYWlsLCAnbWFyZ2luQm90dG9tJykpO1xyXG4gIGRvbS5jc3MoaS5zY3JvbGxiYXJZUmFpbCwgJ2Rpc3BsYXknLCAnJyk7XHJcbiAgaS5yYWlsWUhlaWdodCA9IG51bGw7XHJcbiAgaS5yYWlsWVJhdGlvID0gbnVsbDtcclxufVxyXG5cclxuZnVuY3Rpb24gZ2V0SWQoZWxlbWVudCkge1xyXG4gIHJldHVybiBlbGVtZW50LmdldEF0dHJpYnV0ZSgnZGF0YS1wcy1pZCcpO1xyXG59XHJcblxyXG5mdW5jdGlvbiBzZXRJZChlbGVtZW50LCBpZCkge1xyXG4gIGVsZW1lbnQuc2V0QXR0cmlidXRlKCdkYXRhLXBzLWlkJywgaWQpO1xyXG59XHJcblxyXG5mdW5jdGlvbiByZW1vdmVJZChlbGVtZW50KSB7XHJcbiAgZWxlbWVudC5yZW1vdmVBdHRyaWJ1dGUoJ2RhdGEtcHMtaWQnKTtcclxufVxyXG5cclxuZXhwb3J0cy5hZGQgPSBmdW5jdGlvbiAoZWxlbWVudCkge1xyXG4gIHZhciBuZXdJZCA9IGd1aWQoKTtcclxuICBzZXRJZChlbGVtZW50LCBuZXdJZCk7XHJcbiAgaW5zdGFuY2VzW25ld0lkXSA9IG5ldyBJbnN0YW5jZShlbGVtZW50KTtcclxuICByZXR1cm4gaW5zdGFuY2VzW25ld0lkXTtcclxufTtcclxuXHJcbmV4cG9ydHMucmVtb3ZlID0gZnVuY3Rpb24gKGVsZW1lbnQpIHtcclxuICBkZWxldGUgaW5zdGFuY2VzW2dldElkKGVsZW1lbnQpXTtcclxuICByZW1vdmVJZChlbGVtZW50KTtcclxufTtcclxuXHJcbmV4cG9ydHMuZ2V0ID0gZnVuY3Rpb24gKGVsZW1lbnQpIHtcclxuICByZXR1cm4gaW5zdGFuY2VzW2dldElkKGVsZW1lbnQpXTtcclxufTtcclxuXG59LHtcIi4uL2xpYi9jbGFzc1wiOjIsXCIuLi9saWIvZG9tXCI6MyxcIi4uL2xpYi9ldmVudC1tYW5hZ2VyXCI6NCxcIi4uL2xpYi9ndWlkXCI6NSxcIi4uL2xpYi9oZWxwZXJcIjo2LFwiLi9kZWZhdWx0LXNldHRpbmdcIjo4fV0sMTk6W2Z1bmN0aW9uKHJlcXVpcmUsbW9kdWxlLGV4cG9ydHMpe1xuJ3VzZSBzdHJpY3QnO1xyXG5cclxudmFyIF8gPSByZXF1aXJlKCcuLi9saWIvaGVscGVyJyk7XHJcbnZhciBjbHMgPSByZXF1aXJlKCcuLi9saWIvY2xhc3MnKTtcclxudmFyIGRvbSA9IHJlcXVpcmUoJy4uL2xpYi9kb20nKTtcclxudmFyIGluc3RhbmNlcyA9IHJlcXVpcmUoJy4vaW5zdGFuY2VzJyk7XHJcbnZhciB1cGRhdGVTY3JvbGwgPSByZXF1aXJlKCcuL3VwZGF0ZS1zY3JvbGwnKTtcclxuXHJcbmZ1bmN0aW9uIGdldFRodW1iU2l6ZShpLCB0aHVtYlNpemUpIHtcclxuICBpZiAoaS5zZXR0aW5ncy5taW5TY3JvbGxiYXJMZW5ndGgpIHtcclxuICAgIHRodW1iU2l6ZSA9IE1hdGgubWF4KHRodW1iU2l6ZSwgaS5zZXR0aW5ncy5taW5TY3JvbGxiYXJMZW5ndGgpO1xyXG4gIH1cclxuICBpZiAoaS5zZXR0aW5ncy5tYXhTY3JvbGxiYXJMZW5ndGgpIHtcclxuICAgIHRodW1iU2l6ZSA9IE1hdGgubWluKHRodW1iU2l6ZSwgaS5zZXR0aW5ncy5tYXhTY3JvbGxiYXJMZW5ndGgpO1xyXG4gIH1cclxuICByZXR1cm4gdGh1bWJTaXplO1xyXG59XHJcblxyXG5mdW5jdGlvbiB1cGRhdGVDc3MoZWxlbWVudCwgaSkge1xyXG4gIHZhciB4UmFpbE9mZnNldCA9IHt3aWR0aDogaS5yYWlsWFdpZHRofTtcclxuICBpZiAoaS5pc1J0bCkge1xyXG4gICAgeFJhaWxPZmZzZXQubGVmdCA9IGkubmVnYXRpdmVTY3JvbGxBZGp1c3RtZW50ICsgZWxlbWVudC5zY3JvbGxMZWZ0ICsgaS5jb250YWluZXJXaWR0aCAtIGkuY29udGVudFdpZHRoO1xyXG4gIH0gZWxzZSB7XHJcbiAgICB4UmFpbE9mZnNldC5sZWZ0ID0gZWxlbWVudC5zY3JvbGxMZWZ0O1xyXG4gIH1cclxuICBpZiAoaS5pc1Njcm9sbGJhclhVc2luZ0JvdHRvbSkge1xyXG4gICAgeFJhaWxPZmZzZXQuYm90dG9tID0gaS5zY3JvbGxiYXJYQm90dG9tIC0gZWxlbWVudC5zY3JvbGxUb3A7XHJcbiAgfSBlbHNlIHtcclxuICAgIHhSYWlsT2Zmc2V0LnRvcCA9IGkuc2Nyb2xsYmFyWFRvcCArIGVsZW1lbnQuc2Nyb2xsVG9wO1xyXG4gIH1cclxuICBkb20uY3NzKGkuc2Nyb2xsYmFyWFJhaWwsIHhSYWlsT2Zmc2V0KTtcclxuXHJcbiAgdmFyIHlSYWlsT2Zmc2V0ID0ge3RvcDogZWxlbWVudC5zY3JvbGxUb3AsIGhlaWdodDogaS5yYWlsWUhlaWdodH07XHJcbiAgaWYgKGkuaXNTY3JvbGxiYXJZVXNpbmdSaWdodCkge1xyXG4gICAgaWYgKGkuaXNSdGwpIHtcclxuICAgICAgeVJhaWxPZmZzZXQucmlnaHQgPSBpLmNvbnRlbnRXaWR0aCAtIChpLm5lZ2F0aXZlU2Nyb2xsQWRqdXN0bWVudCArIGVsZW1lbnQuc2Nyb2xsTGVmdCkgLSBpLnNjcm9sbGJhcllSaWdodCAtIGkuc2Nyb2xsYmFyWU91dGVyV2lkdGg7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB5UmFpbE9mZnNldC5yaWdodCA9IGkuc2Nyb2xsYmFyWVJpZ2h0IC0gZWxlbWVudC5zY3JvbGxMZWZ0O1xyXG4gICAgfVxyXG4gIH0gZWxzZSB7XHJcbiAgICBpZiAoaS5pc1J0bCkge1xyXG4gICAgICB5UmFpbE9mZnNldC5sZWZ0ID0gaS5uZWdhdGl2ZVNjcm9sbEFkanVzdG1lbnQgKyBlbGVtZW50LnNjcm9sbExlZnQgKyBpLmNvbnRhaW5lcldpZHRoICogMiAtIGkuY29udGVudFdpZHRoIC0gaS5zY3JvbGxiYXJZTGVmdCAtIGkuc2Nyb2xsYmFyWU91dGVyV2lkdGg7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICB5UmFpbE9mZnNldC5sZWZ0ID0gaS5zY3JvbGxiYXJZTGVmdCArIGVsZW1lbnQuc2Nyb2xsTGVmdDtcclxuICAgIH1cclxuICB9XHJcbiAgZG9tLmNzcyhpLnNjcm9sbGJhcllSYWlsLCB5UmFpbE9mZnNldCk7XHJcblxyXG4gIGRvbS5jc3MoaS5zY3JvbGxiYXJYLCB7bGVmdDogaS5zY3JvbGxiYXJYTGVmdCwgd2lkdGg6IGkuc2Nyb2xsYmFyWFdpZHRoIC0gaS5yYWlsQm9yZGVyWFdpZHRofSk7XHJcbiAgZG9tLmNzcyhpLnNjcm9sbGJhclksIHt0b3A6IGkuc2Nyb2xsYmFyWVRvcCwgaGVpZ2h0OiBpLnNjcm9sbGJhcllIZWlnaHQgLSBpLnJhaWxCb3JkZXJZV2lkdGh9KTtcclxufVxyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZWxlbWVudCkge1xyXG4gIHZhciBpID0gaW5zdGFuY2VzLmdldChlbGVtZW50KTtcclxuXHJcbiAgaS5jb250YWluZXJXaWR0aCA9IGVsZW1lbnQuY2xpZW50V2lkdGg7XHJcbiAgaS5jb250YWluZXJIZWlnaHQgPSBlbGVtZW50LmNsaWVudEhlaWdodDtcclxuICBpLmNvbnRlbnRXaWR0aCA9IGVsZW1lbnQuc2Nyb2xsV2lkdGg7XHJcbiAgaS5jb250ZW50SGVpZ2h0ID0gZWxlbWVudC5zY3JvbGxIZWlnaHQ7XHJcblxyXG4gIHZhciBleGlzdGluZ1JhaWxzO1xyXG4gIGlmICghZWxlbWVudC5jb250YWlucyhpLnNjcm9sbGJhclhSYWlsKSkge1xyXG4gICAgZXhpc3RpbmdSYWlscyA9IGRvbS5xdWVyeUNoaWxkcmVuKGVsZW1lbnQsICcucHNfX3Njcm9sbGJhci14LXJhaWwnKTtcclxuICAgIGlmIChleGlzdGluZ1JhaWxzLmxlbmd0aCA+IDApIHtcclxuICAgICAgZXhpc3RpbmdSYWlscy5mb3JFYWNoKGZ1bmN0aW9uIChyYWlsKSB7XHJcbiAgICAgICAgZG9tLnJlbW92ZShyYWlsKTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBkb20uYXBwZW5kVG8oaS5zY3JvbGxiYXJYUmFpbCwgZWxlbWVudCk7XHJcbiAgfVxyXG4gIGlmICghZWxlbWVudC5jb250YWlucyhpLnNjcm9sbGJhcllSYWlsKSkge1xyXG4gICAgZXhpc3RpbmdSYWlscyA9IGRvbS5xdWVyeUNoaWxkcmVuKGVsZW1lbnQsICcucHNfX3Njcm9sbGJhci15LXJhaWwnKTtcclxuICAgIGlmIChleGlzdGluZ1JhaWxzLmxlbmd0aCA+IDApIHtcclxuICAgICAgZXhpc3RpbmdSYWlscy5mb3JFYWNoKGZ1bmN0aW9uIChyYWlsKSB7XHJcbiAgICAgICAgZG9tLnJlbW92ZShyYWlsKTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICBkb20uYXBwZW5kVG8oaS5zY3JvbGxiYXJZUmFpbCwgZWxlbWVudCk7XHJcbiAgfVxyXG5cclxuICBpZiAoIWkuc2V0dGluZ3Muc3VwcHJlc3NTY3JvbGxYICYmIGkuY29udGFpbmVyV2lkdGggKyBpLnNldHRpbmdzLnNjcm9sbFhNYXJnaW5PZmZzZXQgPCBpLmNvbnRlbnRXaWR0aCkge1xyXG4gICAgaS5zY3JvbGxiYXJYQWN0aXZlID0gdHJ1ZTtcclxuICAgIGkucmFpbFhXaWR0aCA9IGkuY29udGFpbmVyV2lkdGggLSBpLnJhaWxYTWFyZ2luV2lkdGg7XHJcbiAgICBpLnJhaWxYUmF0aW8gPSBpLmNvbnRhaW5lcldpZHRoIC8gaS5yYWlsWFdpZHRoO1xyXG4gICAgaS5zY3JvbGxiYXJYV2lkdGggPSBnZXRUaHVtYlNpemUoaSwgXy50b0ludChpLnJhaWxYV2lkdGggKiBpLmNvbnRhaW5lcldpZHRoIC8gaS5jb250ZW50V2lkdGgpKTtcclxuICAgIGkuc2Nyb2xsYmFyWExlZnQgPSBfLnRvSW50KChpLm5lZ2F0aXZlU2Nyb2xsQWRqdXN0bWVudCArIGVsZW1lbnQuc2Nyb2xsTGVmdCkgKiAoaS5yYWlsWFdpZHRoIC0gaS5zY3JvbGxiYXJYV2lkdGgpIC8gKGkuY29udGVudFdpZHRoIC0gaS5jb250YWluZXJXaWR0aCkpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBpLnNjcm9sbGJhclhBY3RpdmUgPSBmYWxzZTtcclxuICB9XHJcblxyXG4gIGlmICghaS5zZXR0aW5ncy5zdXBwcmVzc1Njcm9sbFkgJiYgaS5jb250YWluZXJIZWlnaHQgKyBpLnNldHRpbmdzLnNjcm9sbFlNYXJnaW5PZmZzZXQgPCBpLmNvbnRlbnRIZWlnaHQpIHtcclxuICAgIGkuc2Nyb2xsYmFyWUFjdGl2ZSA9IHRydWU7XHJcbiAgICBpLnJhaWxZSGVpZ2h0ID0gaS5jb250YWluZXJIZWlnaHQgLSBpLnJhaWxZTWFyZ2luSGVpZ2h0O1xyXG4gICAgaS5yYWlsWVJhdGlvID0gaS5jb250YWluZXJIZWlnaHQgLyBpLnJhaWxZSGVpZ2h0O1xyXG4gICAgaS5zY3JvbGxiYXJZSGVpZ2h0ID0gZ2V0VGh1bWJTaXplKGksIF8udG9JbnQoaS5yYWlsWUhlaWdodCAqIGkuY29udGFpbmVySGVpZ2h0IC8gaS5jb250ZW50SGVpZ2h0KSk7XHJcbiAgICBpLnNjcm9sbGJhcllUb3AgPSBfLnRvSW50KGVsZW1lbnQuc2Nyb2xsVG9wICogKGkucmFpbFlIZWlnaHQgLSBpLnNjcm9sbGJhcllIZWlnaHQpIC8gKGkuY29udGVudEhlaWdodCAtIGkuY29udGFpbmVySGVpZ2h0KSk7XHJcbiAgfSBlbHNlIHtcclxuICAgIGkuc2Nyb2xsYmFyWUFjdGl2ZSA9IGZhbHNlO1xyXG4gIH1cclxuXHJcbiAgaWYgKGkuc2Nyb2xsYmFyWExlZnQgPj0gaS5yYWlsWFdpZHRoIC0gaS5zY3JvbGxiYXJYV2lkdGgpIHtcclxuICAgIGkuc2Nyb2xsYmFyWExlZnQgPSBpLnJhaWxYV2lkdGggLSBpLnNjcm9sbGJhclhXaWR0aDtcclxuICB9XHJcbiAgaWYgKGkuc2Nyb2xsYmFyWVRvcCA+PSBpLnJhaWxZSGVpZ2h0IC0gaS5zY3JvbGxiYXJZSGVpZ2h0KSB7XHJcbiAgICBpLnNjcm9sbGJhcllUb3AgPSBpLnJhaWxZSGVpZ2h0IC0gaS5zY3JvbGxiYXJZSGVpZ2h0O1xyXG4gIH1cclxuXHJcbiAgdXBkYXRlQ3NzKGVsZW1lbnQsIGkpO1xyXG5cclxuICBpZiAoaS5zY3JvbGxiYXJYQWN0aXZlKSB7XHJcbiAgICBjbHMuYWRkKGVsZW1lbnQsICdwcy0tYWN0aXZlLXgnKTtcclxuICB9IGVsc2Uge1xyXG4gICAgY2xzLnJlbW92ZShlbGVtZW50LCAncHMtLWFjdGl2ZS14Jyk7XHJcbiAgICBpLnNjcm9sbGJhclhXaWR0aCA9IDA7XHJcbiAgICBpLnNjcm9sbGJhclhMZWZ0ID0gMDtcclxuICAgIHVwZGF0ZVNjcm9sbChlbGVtZW50LCAnbGVmdCcsIDApO1xyXG4gIH1cclxuICBpZiAoaS5zY3JvbGxiYXJZQWN0aXZlKSB7XHJcbiAgICBjbHMuYWRkKGVsZW1lbnQsICdwcy0tYWN0aXZlLXknKTtcclxuICB9IGVsc2Uge1xyXG4gICAgY2xzLnJlbW92ZShlbGVtZW50LCAncHMtLWFjdGl2ZS15Jyk7XHJcbiAgICBpLnNjcm9sbGJhcllIZWlnaHQgPSAwO1xyXG4gICAgaS5zY3JvbGxiYXJZVG9wID0gMDtcclxuICAgIHVwZGF0ZVNjcm9sbChlbGVtZW50LCAndG9wJywgMCk7XHJcbiAgfVxyXG59O1xyXG5cbn0se1wiLi4vbGliL2NsYXNzXCI6MixcIi4uL2xpYi9kb21cIjozLFwiLi4vbGliL2hlbHBlclwiOjYsXCIuL2luc3RhbmNlc1wiOjE4LFwiLi91cGRhdGUtc2Nyb2xsXCI6MjB9XSwyMDpbZnVuY3Rpb24ocmVxdWlyZSxtb2R1bGUsZXhwb3J0cyl7XG4ndXNlIHN0cmljdCc7XHJcblxyXG52YXIgaW5zdGFuY2VzID0gcmVxdWlyZSgnLi9pbnN0YW5jZXMnKTtcclxuXHJcbnZhciBsYXN0VG9wO1xyXG52YXIgbGFzdExlZnQ7XHJcblxyXG52YXIgY3JlYXRlRE9NRXZlbnQgPSBmdW5jdGlvbiAobmFtZSkge1xyXG4gIHZhciBldmVudCA9IGRvY3VtZW50LmNyZWF0ZUV2ZW50KFwiRXZlbnRcIik7XHJcbiAgZXZlbnQuaW5pdEV2ZW50KG5hbWUsIHRydWUsIHRydWUpO1xyXG4gIHJldHVybiBldmVudDtcclxufTtcclxuXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGVsZW1lbnQsIGF4aXMsIHZhbHVlKSB7XHJcbiAgaWYgKHR5cGVvZiBlbGVtZW50ID09PSAndW5kZWZpbmVkJykge1xyXG4gICAgdGhyb3cgJ1lvdSBtdXN0IHByb3ZpZGUgYW4gZWxlbWVudCB0byB0aGUgdXBkYXRlLXNjcm9sbCBmdW5jdGlvbic7XHJcbiAgfVxyXG5cclxuICBpZiAodHlwZW9mIGF4aXMgPT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICB0aHJvdyAnWW91IG11c3QgcHJvdmlkZSBhbiBheGlzIHRvIHRoZSB1cGRhdGUtc2Nyb2xsIGZ1bmN0aW9uJztcclxuICB9XHJcblxyXG4gIGlmICh0eXBlb2YgdmFsdWUgPT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICB0aHJvdyAnWW91IG11c3QgcHJvdmlkZSBhIHZhbHVlIHRvIHRoZSB1cGRhdGUtc2Nyb2xsIGZ1bmN0aW9uJztcclxuICB9XHJcblxyXG4gIGlmIChheGlzID09PSAndG9wJyAmJiB2YWx1ZSA8PSAwKSB7XHJcbiAgICBlbGVtZW50LnNjcm9sbFRvcCA9IHZhbHVlID0gMDsgLy8gZG9uJ3QgYWxsb3cgbmVnYXRpdmUgc2Nyb2xsXHJcbiAgICBlbGVtZW50LmRpc3BhdGNoRXZlbnQoY3JlYXRlRE9NRXZlbnQoJ3BzLXktcmVhY2gtc3RhcnQnKSk7XHJcbiAgfVxyXG5cclxuICBpZiAoYXhpcyA9PT0gJ2xlZnQnICYmIHZhbHVlIDw9IDApIHtcclxuICAgIGVsZW1lbnQuc2Nyb2xsTGVmdCA9IHZhbHVlID0gMDsgLy8gZG9uJ3QgYWxsb3cgbmVnYXRpdmUgc2Nyb2xsXHJcbiAgICBlbGVtZW50LmRpc3BhdGNoRXZlbnQoY3JlYXRlRE9NRXZlbnQoJ3BzLXgtcmVhY2gtc3RhcnQnKSk7XHJcbiAgfVxyXG5cclxuICB2YXIgaSA9IGluc3RhbmNlcy5nZXQoZWxlbWVudCk7XHJcblxyXG4gIGlmIChheGlzID09PSAndG9wJyAmJiB2YWx1ZSA+PSBpLmNvbnRlbnRIZWlnaHQgLSBpLmNvbnRhaW5lckhlaWdodCkge1xyXG4gICAgLy8gZG9uJ3QgYWxsb3cgc2Nyb2xsIHBhc3QgY29udGFpbmVyXHJcbiAgICB2YWx1ZSA9IGkuY29udGVudEhlaWdodCAtIGkuY29udGFpbmVySGVpZ2h0O1xyXG4gICAgaWYgKHZhbHVlIC0gZWxlbWVudC5zY3JvbGxUb3AgPD0gMSkge1xyXG4gICAgICAvLyBtaXRpZ2F0ZXMgcm91bmRpbmcgZXJyb3JzIG9uIG5vbi1zdWJwaXhlbCBzY3JvbGwgdmFsdWVzXHJcbiAgICAgIHZhbHVlID0gZWxlbWVudC5zY3JvbGxUb3A7XHJcbiAgICB9IGVsc2Uge1xyXG4gICAgICBlbGVtZW50LnNjcm9sbFRvcCA9IHZhbHVlO1xyXG4gICAgfVxyXG4gICAgZWxlbWVudC5kaXNwYXRjaEV2ZW50KGNyZWF0ZURPTUV2ZW50KCdwcy15LXJlYWNoLWVuZCcpKTtcclxuICB9XHJcblxyXG4gIGlmIChheGlzID09PSAnbGVmdCcgJiYgdmFsdWUgPj0gaS5jb250ZW50V2lkdGggLSBpLmNvbnRhaW5lcldpZHRoKSB7XHJcbiAgICAvLyBkb24ndCBhbGxvdyBzY3JvbGwgcGFzdCBjb250YWluZXJcclxuICAgIHZhbHVlID0gaS5jb250ZW50V2lkdGggLSBpLmNvbnRhaW5lcldpZHRoO1xyXG4gICAgaWYgKHZhbHVlIC0gZWxlbWVudC5zY3JvbGxMZWZ0IDw9IDEpIHtcclxuICAgICAgLy8gbWl0aWdhdGVzIHJvdW5kaW5nIGVycm9ycyBvbiBub24tc3VicGl4ZWwgc2Nyb2xsIHZhbHVlc1xyXG4gICAgICB2YWx1ZSA9IGVsZW1lbnQuc2Nyb2xsTGVmdDtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIGVsZW1lbnQuc2Nyb2xsTGVmdCA9IHZhbHVlO1xyXG4gICAgfVxyXG4gICAgZWxlbWVudC5kaXNwYXRjaEV2ZW50KGNyZWF0ZURPTUV2ZW50KCdwcy14LXJlYWNoLWVuZCcpKTtcclxuICB9XHJcblxyXG4gIGlmICghbGFzdFRvcCkge1xyXG4gICAgbGFzdFRvcCA9IGVsZW1lbnQuc2Nyb2xsVG9wO1xyXG4gIH1cclxuXHJcbiAgaWYgKCFsYXN0TGVmdCkge1xyXG4gICAgbGFzdExlZnQgPSBlbGVtZW50LnNjcm9sbExlZnQ7XHJcbiAgfVxyXG5cclxuICBpZiAoYXhpcyA9PT0gJ3RvcCcgJiYgdmFsdWUgPCBsYXN0VG9wKSB7XHJcbiAgICBlbGVtZW50LmRpc3BhdGNoRXZlbnQoY3JlYXRlRE9NRXZlbnQoJ3BzLXNjcm9sbC11cCcpKTtcclxuICB9XHJcblxyXG4gIGlmIChheGlzID09PSAndG9wJyAmJiB2YWx1ZSA+IGxhc3RUb3ApIHtcclxuICAgIGVsZW1lbnQuZGlzcGF0Y2hFdmVudChjcmVhdGVET01FdmVudCgncHMtc2Nyb2xsLWRvd24nKSk7XHJcbiAgfVxyXG5cclxuICBpZiAoYXhpcyA9PT0gJ2xlZnQnICYmIHZhbHVlIDwgbGFzdExlZnQpIHtcclxuICAgIGVsZW1lbnQuZGlzcGF0Y2hFdmVudChjcmVhdGVET01FdmVudCgncHMtc2Nyb2xsLWxlZnQnKSk7XHJcbiAgfVxyXG5cclxuICBpZiAoYXhpcyA9PT0gJ2xlZnQnICYmIHZhbHVlID4gbGFzdExlZnQpIHtcclxuICAgIGVsZW1lbnQuZGlzcGF0Y2hFdmVudChjcmVhdGVET01FdmVudCgncHMtc2Nyb2xsLXJpZ2h0JykpO1xyXG4gIH1cclxuXHJcbiAgaWYgKGF4aXMgPT09ICd0b3AnKSB7XHJcbiAgICBlbGVtZW50LnNjcm9sbFRvcCA9IGxhc3RUb3AgPSB2YWx1ZTtcclxuICAgIGVsZW1lbnQuZGlzcGF0Y2hFdmVudChjcmVhdGVET01FdmVudCgncHMtc2Nyb2xsLXknKSk7XHJcbiAgfVxyXG5cclxuICBpZiAoYXhpcyA9PT0gJ2xlZnQnKSB7XHJcbiAgICBlbGVtZW50LnNjcm9sbExlZnQgPSBsYXN0TGVmdCA9IHZhbHVlO1xyXG4gICAgZWxlbWVudC5kaXNwYXRjaEV2ZW50KGNyZWF0ZURPTUV2ZW50KCdwcy1zY3JvbGwteCcpKTtcclxuICB9XHJcblxyXG59O1xyXG5cbn0se1wiLi9pbnN0YW5jZXNcIjoxOH1dLDIxOltmdW5jdGlvbihyZXF1aXJlLG1vZHVsZSxleHBvcnRzKXtcbid1c2Ugc3RyaWN0JztcclxuXHJcbnZhciBfID0gcmVxdWlyZSgnLi4vbGliL2hlbHBlcicpO1xyXG52YXIgZG9tID0gcmVxdWlyZSgnLi4vbGliL2RvbScpO1xyXG52YXIgaW5zdGFuY2VzID0gcmVxdWlyZSgnLi9pbnN0YW5jZXMnKTtcclxudmFyIHVwZGF0ZUdlb21ldHJ5ID0gcmVxdWlyZSgnLi91cGRhdGUtZ2VvbWV0cnknKTtcclxudmFyIHVwZGF0ZVNjcm9sbCA9IHJlcXVpcmUoJy4vdXBkYXRlLXNjcm9sbCcpO1xyXG5cclxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZWxlbWVudCkge1xyXG4gIHZhciBpID0gaW5zdGFuY2VzLmdldChlbGVtZW50KTtcclxuXHJcbiAgaWYgKCFpKSB7XHJcbiAgICByZXR1cm47XHJcbiAgfVxyXG5cclxuICAvLyBSZWNhbGN1YXRlIG5lZ2F0aXZlIHNjcm9sbExlZnQgYWRqdXN0bWVudFxyXG4gIGkubmVnYXRpdmVTY3JvbGxBZGp1c3RtZW50ID0gaS5pc05lZ2F0aXZlU2Nyb2xsID8gZWxlbWVudC5zY3JvbGxXaWR0aCAtIGVsZW1lbnQuY2xpZW50V2lkdGggOiAwO1xyXG5cclxuICAvLyBSZWNhbGN1bGF0ZSByYWlsIG1hcmdpbnNcclxuICBkb20uY3NzKGkuc2Nyb2xsYmFyWFJhaWwsICdkaXNwbGF5JywgJ2Jsb2NrJyk7XHJcbiAgZG9tLmNzcyhpLnNjcm9sbGJhcllSYWlsLCAnZGlzcGxheScsICdibG9jaycpO1xyXG4gIGkucmFpbFhNYXJnaW5XaWR0aCA9IF8udG9JbnQoZG9tLmNzcyhpLnNjcm9sbGJhclhSYWlsLCAnbWFyZ2luTGVmdCcpKSArIF8udG9JbnQoZG9tLmNzcyhpLnNjcm9sbGJhclhSYWlsLCAnbWFyZ2luUmlnaHQnKSk7XHJcbiAgaS5yYWlsWU1hcmdpbkhlaWdodCA9IF8udG9JbnQoZG9tLmNzcyhpLnNjcm9sbGJhcllSYWlsLCAnbWFyZ2luVG9wJykpICsgXy50b0ludChkb20uY3NzKGkuc2Nyb2xsYmFyWVJhaWwsICdtYXJnaW5Cb3R0b20nKSk7XHJcblxyXG4gIC8vIEhpZGUgc2Nyb2xsYmFycyBub3QgdG8gYWZmZWN0IHNjcm9sbFdpZHRoIGFuZCBzY3JvbGxIZWlnaHRcclxuICBkb20uY3NzKGkuc2Nyb2xsYmFyWFJhaWwsICdkaXNwbGF5JywgJ25vbmUnKTtcclxuICBkb20uY3NzKGkuc2Nyb2xsYmFyWVJhaWwsICdkaXNwbGF5JywgJ25vbmUnKTtcclxuXHJcbiAgdXBkYXRlR2VvbWV0cnkoZWxlbWVudCk7XHJcblxyXG4gIC8vIFVwZGF0ZSB0b3AvbGVmdCBzY3JvbGwgdG8gdHJpZ2dlciBldmVudHNcclxuICB1cGRhdGVTY3JvbGwoZWxlbWVudCwgJ3RvcCcsIGVsZW1lbnQuc2Nyb2xsVG9wKTtcclxuICB1cGRhdGVTY3JvbGwoZWxlbWVudCwgJ2xlZnQnLCBlbGVtZW50LnNjcm9sbExlZnQpO1xyXG5cclxuICBkb20uY3NzKGkuc2Nyb2xsYmFyWFJhaWwsICdkaXNwbGF5JywgJycpO1xyXG4gIGRvbS5jc3MoaS5zY3JvbGxiYXJZUmFpbCwgJ2Rpc3BsYXknLCAnJyk7XHJcbn07XHJcblxufSx7XCIuLi9saWIvZG9tXCI6MyxcIi4uL2xpYi9oZWxwZXJcIjo2LFwiLi9pbnN0YW5jZXNcIjoxOCxcIi4vdXBkYXRlLWdlb21ldHJ5XCI6MTksXCIuL3VwZGF0ZS1zY3JvbGxcIjoyMH1dfSx7fSxbMV0pO1xuIl19
